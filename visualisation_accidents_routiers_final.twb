<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20183.19.0319.0943                               -->
<workbook source-build='2018.3.5 (20183.19.0319.0943)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <BasicButtonObject />
    <CascadingFilters />
    <GroupAction />
    <NavigationAction />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location derived-from='https://public.tableau.com/workbooks/LocalisationdesaccidentsroutiersenFrance?rev=2.9' id='LocalisationdesaccidentsroutiersenFrance' path='/workbooks' revision='3.6' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <style-rule element='all'>
      <format attr='font-family' value='Tableau Book' />
      <format attr='color' value='#000000' />
    </style-rule>
  </style>
  <datasources>
    <datasource caption='data' inline='true' name='federated.1aqyggh1f33tgz1gorcm00pl3ry9' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data' name='textscan.0mw85cs1iv79fb10ojll11gugkd0'>
            <connection class='textscan' directory='C:/Users/theos/Documents/ETUDES/EDHEC_MSc/data_visualization/project_data_viz/visualisation_accidents_routiers_final.twb Files/Data/project_data_viz' filename='data.csv' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0mw85cs1iv79fb10ojll11gugkd0' name='data.csv' table='[data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator='&#9;'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='id_vehicule' ordinal='1' />
            <column datatype='string' name='num_veh' ordinal='2' />
            <column datatype='integer' name='indemne' ordinal='3' />
            <column datatype='integer' name='tue' ordinal='4' />
            <column datatype='integer' name='blesse_hospitalise' ordinal='5' />
            <column datatype='integer' name='blesse_leger' ordinal='6' />
            <column datatype='string' name='catv' ordinal='7' />
            <column datatype='integer' name='max_grav' ordinal='8' />
            <column datatype='integer' name='lum' ordinal='9' />
            <column datatype='integer' name='atm' ordinal='10' />
            <column datatype='integer' name='col' ordinal='11' />
            <column datatype='real' name='lat' ordinal='12' />
            <column datatype='real' name='long' ordinal='13' />
            <column datatype='date' name='date' ordinal='14' />
            <column datatype='string' name='plan' ordinal='15' />
            <column datatype='integer' name='code' ordinal='16' />
            <column datatype='string' name='departement' ordinal='17' />
            <column datatype='integer' name='population' ordinal='18' />
          </columns>
        </relation>
        <cols>
          <map key='[F1]' value='[data.csv].[F1]' />
          <map key='[atm]' value='[data.csv].[atm]' />
          <map key='[blesse_hospitalise]' value='[data.csv].[blesse_hospitalise]' />
          <map key='[blesse_leger]' value='[data.csv].[blesse_leger]' />
          <map key='[catv]' value='[data.csv].[catv]' />
          <map key='[code (data.csv)]' value='[data.csv].[code]' />
          <map key='[col]' value='[data.csv].[col]' />
          <map key='[date]' value='[data.csv].[date]' />
          <map key='[departement]' value='[data.csv].[departement]' />
          <map key='[id_vehicule]' value='[data.csv].[id_vehicule]' />
          <map key='[indemne]' value='[data.csv].[indemne]' />
          <map key='[lat]' value='[data.csv].[lat]' />
          <map key='[long]' value='[data.csv].[long]' />
          <map key='[lum]' value='[data.csv].[lum]' />
          <map key='[max_grav]' value='[data.csv].[max_grav]' />
          <map key='[num_veh]' value='[data.csv].[num_veh]' />
          <map key='[plan]' value='[data.csv].[plan]' />
          <map key='[population]' value='[data.csv].[population]' />
          <map key='[tue]' value='[data.csv].[tue]' />
        </cols>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;\\t&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id_vehicule</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id_vehicule]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>id_vehicule</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>num_veh</remote-name>
            <remote-type>129</remote-type>
            <local-name>[num_veh]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>num_veh</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>indemne</remote-name>
            <remote-type>20</remote-type>
            <local-name>[indemne]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>indemne</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tue</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tue]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>tue</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>blesse_hospitalise</remote-name>
            <remote-type>20</remote-type>
            <local-name>[blesse_hospitalise]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>blesse_hospitalise</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>blesse_leger</remote-name>
            <remote-type>20</remote-type>
            <local-name>[blesse_leger]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>blesse_leger</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>catv</remote-name>
            <remote-type>129</remote-type>
            <local-name>[catv]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>catv</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>max_grav</remote-name>
            <remote-type>20</remote-type>
            <local-name>[max_grav]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>max_grav</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lum</remote-name>
            <remote-type>20</remote-type>
            <local-name>[lum]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>lum</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>atm</remote-name>
            <remote-type>20</remote-type>
            <local-name>[atm]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>atm</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>col</remote-name>
            <remote-type>20</remote-type>
            <local-name>[col]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>col</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lat]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>lat</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>long</remote-name>
            <remote-type>5</remote-type>
            <local-name>[long]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>long</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>14</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>plan</remote-name>
            <remote-type>129</remote-type>
            <local-name>[plan]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>plan</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[code (data.csv)]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>code</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>departement</remote-name>
            <remote-type>129</remote-type>
            <local-name>[departement]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>departement</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Nombre d&apos;accident pour 10 000 habitants' datatype='real' name='[Calculation_164381428197863424]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([id_vehicule])/AVG([population])*10000' />
      </column>
      <column caption='Rank' datatype='integer' name='[Calculation_164381428200767489]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Nombre de tués pour 1 000 000 habitants' datatype='real' name='[Calculation_164381428204236802]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([tue])/AVG([population])*1000000' />
      </column>
      <column caption='Nombre de blessés pour 10 000 habitants' datatype='real' name='[Calculation_164381428208967683]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([blesse_hospitalise])+SUM([blesse_leger]))/AVG([population])*10000' />
      </column>
      <column caption='Catégorie de véhicule.' datatype='string' name='[Catv (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[catv]' new-bin='true'>
          <bin default-name='false' value='&quot;Autre véhicule&quot;'>
            <value>&quot;20&quot;</value>
            <value>&quot;3&quot;</value>
            <value>&quot;35&quot;</value>
            <value>&quot;36&quot;</value>
            <value>&quot;99&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Bus &amp; Car&quot;'>
            <value>&quot;37&quot;</value>
            <value>&quot;38&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Moto&quot;'>
            <value>&quot;2&quot;</value>
            <value>&quot;30&quot;</value>
            <value>&quot;31&quot;</value>
            <value>&quot;32&quot;</value>
            <value>&quot;33&quot;</value>
            <value>&quot;34&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Poids Lourd&quot;'>
            <value>&quot;13&quot;</value>
            <value>&quot;14&quot;</value>
            <value>&quot;15&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Tracteur&quot;'>
            <value>&quot;16&quot;</value>
            <value>&quot;17&quot;</value>
            <value>&quot;21&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Traimway&quot;'>
            <value>&quot;40&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Train&quot;'>
            <value>&quot;39&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Vélo&quot;'>
            <value>&quot;1&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Voiture&quot;'>
            <value>&quot;10&quot;</value>
            <value>&quot;7&quot;</value>
          </bin>
        </calculation>
      </column>
      <column aggregation='Sum' datatype='integer' name='[F1]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Condition atmosphérique' datatype='integer' name='[atm]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='%null%' value='*' />
          <alias key='1' value='Normale' />
          <alias key='2' value='Pluie légère' />
          <alias key='3' value='Pluie forte' />
          <alias key='4' value='Neige - grêle' />
          <alias key='5' value='Brouillard - fumée' />
          <alias key='6' value='Vent fort -tempête' />
          <alias key='7' value='Temps éblouissant' />
          <alias key='8' value='Temps couvert' />
          <alias key='9' value='Autre' />
        </aliases>
      </column>
      <column caption='Blessé hospitalisé' datatype='integer' name='[blesse_hospitalise]' role='measure' type='quantitative' />
      <column caption='Blessé léger' datatype='integer' name='[blesse_leger]' role='measure' type='quantitative' />
      <column caption='Catégorie de véhicule' datatype='string' name='[catv]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='integer' name='[code (data.csv)]' role='dimension' type='ordinal' />
      <column caption='Type de collision' datatype='integer' name='[col]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='1' value='Deux véhicules - frontale' />
          <alias key='2' value='Deux véhicules – par l’arrière' />
          <alias key='3' value='Deux véhicules – par le coté' />
          <alias key='4' value='Trois véhicules et plus – en chaîne' />
          <alias key='5' value='Trois véhicules et plus - collisions multiples' />
          <alias key='6' value='Autre collision' />
          <alias key='7' value='Sans collision' />
        </aliases>
      </column>
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Département' datatype='string' name='[departement]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column aggregation='Sum' datatype='integer' name='[id_vehicule]' role='dimension' type='ordinal' />
      <column caption='Indemne' datatype='integer' name='[indemne]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Long' datatype='real' name='[long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Condition lumineuse' datatype='integer' name='[lum]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='1' value='Plein jour' />
          <alias key='2' value='Crépuscule ou aube' />
          <alias key='3' value='Nuit sans éclairage public' />
          <alias key='4' value='Nuit avec éclairage public non allumé' />
          <alias key='5' value='Nuit avec éclairage public allumé' />
        </aliases>
      </column>
      <column aggregation='Sum' datatype='integer' name='[max_grav]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='1' value='Indemne' />
          <alias key='2' value='Tué' />
          <alias key='3' value='Blessé hospitalisé' />
          <alias key='4' value='Blessé léger' />
        </aliases>
      </column>
      <column caption='Plan de la route' datatype='string' name='[plan]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;0&quot;' value='Autre' />
          <alias key='&quot;1&quot;' value='Partie rectiligne' />
          <alias key='&quot;2&quot;' value='En courbe à gauche' />
          <alias key='&quot;3&quot;' value='En courbe à droite' />
          <alias key='&quot;4&quot;' value='En « S »' />
        </aliases>
      </column>
      <column caption='Tué' datatype='integer' name='[tue]' role='measure' type='quantitative' />
      <column-instance column='[code (data.csv)]' derivation='None' name='[none:code (data.csv):ok]' pivot='key' type='ordinal' />
      <column-instance column='[id_vehicule]' derivation='None' name='[none:id_vehicule:ok]' pivot='key' type='ordinal' />
      <column-instance column='[max_grav]' derivation='None' name='[none:max_grav:ok]' pivot='key' type='ordinal' />
      <column-instance column='[blesse_hospitalise]' derivation='Sum' name='[sum:blesse_hospitalise:qk]' pivot='key' type='quantitative' />
      <column-instance column='[blesse_leger]' derivation='Sum' name='[sum:blesse_leger:qk]' pivot='key' type='quantitative' />
      <column-instance column='[tue]' derivation='Sum' name='[sum:tue:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Catégorie de véhicule (groupe))' hidden='true' name='[Action (Catégorie de véhicule (groupe))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Catv (group)]' />
        </groupfilter>
      </group>
      <group caption='Action (Catégorie de véhicule (groupe),Numéro Accident,Gravité)' hidden='true' name='[Action (Catégorie de véhicule (groupe),Numéro Accident,Gravité)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Catv (group)]' />
          <groupfilter function='level-members' level='[Num_Acc]' />
          <groupfilter function='level-members' level='[grav]' />
        </groupfilter>
      </group>
      <group caption='Action (Département)' hidden='true' name='[Action (Département)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[departement]' />
        </groupfilter>
      </group>
      <group name='[Département set]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='empty-level' member='[departement]' />
      </group>
      <group hidden='true' name='[Exclusions (Catégorie de véhicule (groupe),Gravité,Numéro Accident)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Catv (group)]' />
          <groupfilter function='level-members' level='[none:grav:ok]' />
          <groupfilter function='level-members' level='[none:Num_Acc:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Catégorie de véhicule.,code (data.csv),id_vehicule,max_grav)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Catv (group)]' />
          <groupfilter function='level-members' level='[none:code (data.csv):ok]' />
          <groupfilter function='level-members' level='[none:id_vehicule:ok]' />
          <groupfilter function='level-members' level='[none:max_grav:ok]' />
        </groupfilter>
      </group>
      <group name='[Set 1]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='member' level='[departement]' member='&quot;Ain&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </group>
      <drill-paths>
        <drill-path name='Région, Département'>
          <field>[departement]</field>
        </drill-path>
      </drill-paths>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/theos/Documents/ETUDES/EDHEC_MSc/data_visualization/project_data_viz/visualisation_accidents_routiers_final.twb Files/Data/project_data_viz/data_accidents_routiers.hyper' default-settings='yes' schema='Extract' sslmode='' update-time='04/06/2019 12:07:48 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[F1]' value='[Extract].[F1]' />
            <map key='[atm]' value='[Extract].[atm]' />
            <map key='[blesse_hospitalise]' value='[Extract].[blesse_hospitalise]' />
            <map key='[blesse_leger]' value='[Extract].[blesse_leger]' />
            <map key='[catv]' value='[Extract].[catv]' />
            <map key='[code (data.csv)]' value='[Extract].[code]' />
            <map key='[col]' value='[Extract].[col]' />
            <map key='[date]' value='[Extract].[date]' />
            <map key='[departement]' value='[Extract].[departement]' />
            <map key='[id_vehicule]' value='[Extract].[id_vehicule]' />
            <map key='[indemne]' value='[Extract].[indemne]' />
            <map key='[lat]' value='[Extract].[lat]' />
            <map key='[long]' value='[Extract].[long]' />
            <map key='[lum]' value='[Extract].[lum]' />
            <map key='[max_grav]' value='[Extract].[max_grav]' />
            <map key='[num_veh]' value='[Extract].[num_veh]' />
            <map key='[plan]' value='[Extract].[plan]' />
            <map key='[population]' value='[Extract].[population]' />
            <map key='[tue]' value='[Extract].[tue]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='829926' timestamp-start='2019-04-06 12:07:48.074' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>829926</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>id_vehicule</remote-name>
              <remote-type>20</remote-type>
              <local-name>[id_vehicule]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>id_vehicule</remote-alias>
              <ordinal>1</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>829926</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>num_veh</remote-name>
              <remote-type>129</remote-type>
              <local-name>[num_veh]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>num_veh</remote-alias>
              <ordinal>2</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>124</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>indemne</remote-name>
              <remote-type>20</remote-type>
              <local-name>[indemne]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>indemne</remote-alias>
              <ordinal>3</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>25</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tue</remote-name>
              <remote-type>20</remote-type>
              <local-name>[tue]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tue</remote-alias>
              <ordinal>4</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>blesse_hospitalise</remote-name>
              <remote-type>20</remote-type>
              <local-name>[blesse_hospitalise]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>blesse_hospitalise</remote-alias>
              <ordinal>5</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>blesse_leger</remote-name>
              <remote-type>20</remote-type>
              <local-name>[blesse_leger]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>blesse_leger</remote-alias>
              <ordinal>6</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>26</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>catv</remote-name>
              <remote-type>129</remote-type>
              <local-name>[catv]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>catv</remote-alias>
              <ordinal>7</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>32</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>max_grav</remote-name>
              <remote-type>20</remote-type>
              <local-name>[max_grav]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>max_grav</remote-alias>
              <ordinal>8</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lum</remote-name>
              <remote-type>20</remote-type>
              <local-name>[lum]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>lum</remote-alias>
              <ordinal>9</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>atm</remote-name>
              <remote-type>20</remote-type>
              <local-name>[atm]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>atm</remote-alias>
              <ordinal>10</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>col</remote-name>
              <remote-type>20</remote-type>
              <local-name>[col]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>col</remote-alias>
              <ordinal>11</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lat</remote-name>
              <remote-type>5</remote-type>
              <local-name>[lat]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>lat</remote-alias>
              <ordinal>12</ordinal>
              <family>data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>562998</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>long</remote-name>
              <remote-type>5</remote-type>
              <local-name>[long]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>long</remote-alias>
              <ordinal>13</ordinal>
              <family>data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>562998</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>14</ordinal>
              <family>data.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>14620</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>plan</remote-name>
              <remote-type>129</remote-type>
              <local-name>[plan]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>plan</remote-alias>
              <ordinal>15</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>code</remote-name>
              <remote-type>20</remote-type>
              <local-name>[code (data.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>code</remote-alias>
              <ordinal>16</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>100</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>departement</remote-name>
              <remote-type>129</remote-type>
              <local-name>[departement]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>departement</remote-alias>
              <ordinal>17</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>101</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>18</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>101</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.422764' group-percentage='0.164228' measure-ordering='alphabetic' measure-percentage='0.413008' show-aliased-fields='true' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:max_grav:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>4</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>1</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>3</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[Catv (group)]' palette='vehicule' type='shape'>
            <map to='vehicule/Tram_1.png'>
              <bucket>&quot;1&quot;</bucket>
            </map>
            <map to='vehicule/Tram_1.png'>
              <bucket>&quot;20&quot;</bucket>
            </map>
            <map to='vehicule/Tram_1.png'>
              <bucket>&quot;37&quot;</bucket>
            </map>
            <map to='vehicule/Tram_1.png'>
              <bucket>&quot;Traimway&quot;</bucket>
            </map>
            <map to='vehicule/bus.png'>
              <bucket>&quot;2&quot;</bucket>
            </map>
            <map to='vehicule/bus.png'>
              <bucket>&quot;21&quot;</bucket>
            </map>
            <map to='vehicule/bus.png'>
              <bucket>&quot;38&quot;</bucket>
            </map>
            <map to='vehicule/bus.png'>
              <bucket>&quot;Bus &amp; Car&quot;</bucket>
            </map>
            <map to='vehicule/car.png'>
              <bucket>&quot;3&quot;</bucket>
            </map>
            <map to='vehicule/car.png'>
              <bucket>&quot;30&quot;</bucket>
            </map>
            <map to='vehicule/car.png'>
              <bucket>&quot;39&quot;</bucket>
            </map>
            <map to='vehicule/car.png'>
              <bucket>&quot;40&quot;</bucket>
            </map>
            <map to='vehicule/car.png'>
              <bucket>&quot;Voiture&quot;</bucket>
            </map>
            <map to='vehicule/cycling.png'>
              <bucket>&quot;31&quot;</bucket>
            </map>
            <map to='vehicule/cycling.png'>
              <bucket>&quot;7&quot;</bucket>
            </map>
            <map to='vehicule/cycling.png'>
              <bucket>&quot;99&quot;</bucket>
            </map>
            <map to='vehicule/cycling.png'>
              <bucket>&quot;Vélo&quot;</bucket>
            </map>
            <map to='vehicule/moto.png'>
              <bucket>&quot;10&quot;</bucket>
            </map>
            <map to='vehicule/moto.png'>
              <bucket>&quot;32&quot;</bucket>
            </map>
            <map to='vehicule/moto.png'>
              <bucket>&quot;Moto&quot;</bucket>
            </map>
            <map to='vehicule/other.png'>
              <bucket>&quot;13&quot;</bucket>
            </map>
            <map to='vehicule/other.png'>
              <bucket>&quot;33&quot;</bucket>
            </map>
            <map to='vehicule/other.png'>
              <bucket>&quot;Autre&quot;</bucket>
            </map>
            <map to='vehicule/other.png'>
              <bucket>&quot;Autre véhicule&quot;</bucket>
            </map>
            <map to='vehicule/other.png'>
              <bucket>&quot;Quad&quot;</bucket>
            </map>
            <map to='vehicule/other.png'>
              <bucket>&quot;Voiturette&quot;</bucket>
            </map>
            <map to='vehicule/tractor.png'>
              <bucket>&quot;14&quot;</bucket>
            </map>
            <map to='vehicule/tractor.png'>
              <bucket>&quot;34&quot;</bucket>
            </map>
            <map to='vehicule/tractor.png'>
              <bucket>&quot;Tracteur&quot;</bucket>
            </map>
            <map to='vehicule/train-256.png'>
              <bucket>&quot;15&quot;</bucket>
            </map>
            <map to='vehicule/train-256.png'>
              <bucket>&quot;16&quot;</bucket>
            </map>
            <map to='vehicule/train-256.png'>
              <bucket>&quot;35&quot;</bucket>
            </map>
            <map to='vehicule/train-256.png'>
              <bucket>&quot;Train&quot;</bucket>
            </map>
            <map to='vehicule/truck.png'>
              <bucket>&quot;17&quot;</bucket>
            </map>
            <map to='vehicule/truck.png'>
              <bucket>&quot;36&quot;</bucket>
            </map>
            <map to='vehicule/truck.png'>
              <bucket>&quot;Poids Lourd&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[sum:blesse_leger:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[sum:tue:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[sum:blesse_hospitalise:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;France&quot;' />
        <semantic-value key='[County].[Name]' value='%null%' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
    <mapsource inline='true' name='street' source-platform='win' version='18.1'>
      <connection api-key='pk.eyJ1IjoidGhlb3NpbWllciIsImEiOiJjanQyMjdtejcxYXpiM3lwaHF1aWZwOGNzIn0.gMOqwP_7pQ_FfDJ_2ruuAg' class='MapBox' description='Mapbox Streets' full-url='https://api.mapbox.com/v4/{L}/{Z}/{X}/{Y}{D}.png256?access_token=pk.eyJ1IjoidGhlb3NpbWllciIsImEiOiJjanQyMjdtejcxYXpiM3lwaHF1aWZwOGNzIn0.gMOqwP_7pQ_FfDJ_2ruuAg' inline='true' layer-separator=',' offline='' port='443' server='api.mapbox.com' service='https' tileset='US\normal' url-format='/v4/{L}/{Z}/{X}/{Y}{D}.png256?access_token=pk.eyJ1IjoidGhlb3NpbWllciIsImEiOiJjanQyMjdtejcxYXpiM3lwaHF1aWZwOGNzIn0.gMOqwP_7pQ_FfDJ_2ruuAg' username='' wait-tile-color='#dddddd' />
      <languages />
      <layers>
        <layer display-name='Streets' name='mapbox.streets' show-ui='true' type='features' />
      </layers>
      <properties />
      <map-styles>
        <map-style display-name='street' name='street' wait-tile-color='#dddddd'>
          <map-layer-style name='Streets' request-string='mapbox.streets' />
        </map-style>
      </map-styles>
      <mapsource-defaults version='18.1'>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='mapbox.streets' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
        </style>
      </mapsource-defaults>
      <map-attribution copyright-string='About Maps' copyright-url='http://www.tableau.com/mapdata' short-copyright-string='' />
    </mapsource>
    <mapsource inline='true' name='Street+satellite' source-platform='win' version='18.1'>
      <connection api-key='pk.eyJ1IjoidGhlb3NpbWllciIsImEiOiJjanQyMjdtejcxYXpiM3lwaHF1aWZwOGNzIn0.gMOqwP_7pQ_FfDJ_2ruuAg' class='MapBox' description='Mapbox Streets + Satellite' full-url='https://api.mapbox.com/v4/{L}/{Z}/{X}/{Y}{D}.png256?access_token=pk.eyJ1IjoidGhlb3NpbWllciIsImEiOiJjanQyMjdtejcxYXpiM3lwaHF1aWZwOGNzIn0.gMOqwP_7pQ_FfDJ_2ruuAg' inline='true' layer-separator=',' offline='' port='443' server='api.mapbox.com' service='https' tileset='US\normal' url-format='/v4/{L}/{Z}/{X}/{Y}{D}.png256?access_token=pk.eyJ1IjoidGhlb3NpbWllciIsImEiOiJjanQyMjdtejcxYXpiM3lwaHF1aWZwOGNzIn0.gMOqwP_7pQ_FfDJ_2ruuAg' username='' wait-tile-color='#dddddd' />
      <languages />
      <layers>
        <layer display-name='Streets + Satellite' name='mapbox.streets-satellite' show-ui='true' type='features' />
      </layers>
      <properties />
      <map-styles>
        <map-style display-name='Street+satellite' name='Street+satellite' wait-tile-color='#dddddd'>
          <map-layer-style name='Streets + Satellite' request-string='mapbox.streets-satellite' />
        </map-style>
      </map-styles>
      <mapsource-defaults version='18.1'>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='mapbox.streets-satellite' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
        </style>
      </mapsource-defaults>
      <map-attribution copyright-string='About Maps' copyright-url='http://www.tableau.com/mapdata' short-copyright-string='' />
    </mapsource>
  </mapsources>
  <actions>
    <action caption='Filter département' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Vue récapitulative' type='sheet' />
      <link caption='Filter département' delimiter=',' escape='\' expression='tsl:O%C3%B9%20se%20produisent%20les%20accidents%20routiers%20dans%20votre%20d%C3%A9partement%20%3F?%5Bfederated.1aqyggh1f33tgz1gorcm00pl3ry9%5D.%5Bdepartement%5D~s0=&lt;[departement]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Où se produisent les accidents routiers dans votre département ?' />
      </command>
    </action>
    <action caption='Highlight recap département depuis carte france' name='[Action4]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Vue récapitulative' type='sheet' worksheet='Selection du département' />
      <command command='tsc:brush'>
        <param name='exclude' value='Selection du département' />
        <param name='field-captions' value='Département' />
        <param name='target' value='Vue récapitulative' />
      </command>
    </action>
    <action caption='Highlight cas le plus grave' name='[Action6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Où se produisent les accidents routiers dans votre département ?' type='sheet' worksheet='Lieux des accidents' />
      <command command='tsc:brush'>
        <param name='exclude' value='Evolution sur les années étudiées,phrase' />
        <param name='field-captions' value='max_grav' />
        <param name='target' value='Où se produisent les accidents routiers dans votre département ?' />
      </command>
    </action>
    <datasources>
      <datasource caption='data' name='federated.1aqyggh1f33tgz1gorcm00pl3ry9' />
    </datasources>
    <datasource-dependencies datasource='federated.1aqyggh1f33tgz1gorcm00pl3ry9'>
      <column caption='Département' datatype='string' name='[departement]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
    </datasource-dependencies>
    <nav-action caption='GoToSheet1' name='[Action1]'>
      <activation type='on-select' />
      <source dashboard='Vue récapitulative' type='sheet' />
      <params>
        <param name='sheet' value='Où se produisent les accidents routiers dans votre département ?' />
      </params>
    </nav-action>
    <edit-group-action caption='Change value set' name='[Action3]'>
      <activation type='on-select' />
      <source dashboard='Vue récapitulative' type='sheet' />
      <params>
        <param name='selection-clear-set-option' value='exclude-all' />
        <param name='target-group' value='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Département set]' />
      </params>
    </edit-group-action>
  </actions>
  <worksheets>
    <worksheet name='Comparatif des départements'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='11'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://public.tableau.com/workbooks/LocalisationdesaccidentsroutiersenFrance/Comparatifdesdpartements?rev=' id='Comparatifdesdpartements' path='/workbooks/LocalisationdesaccidentsroutiersenFrance' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1aqyggh1f33tgz1gorcm00pl3ry9' />
          </datasources>
          <datasource-dependencies datasource='federated.1aqyggh1f33tgz1gorcm00pl3ry9'>
            <column caption='Nombre d&apos;accident pour 10 000 habitants' datatype='real' name='[Calculation_164381428197863424]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([id_vehicule])/AVG([population])*10000' />
            </column>
            <column caption='Nombre de tués pour 1 000 000 habitants' datatype='real' name='[Calculation_164381428204236802]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([tue])/AVG([population])*1000000' />
            </column>
            <column caption='Nombre de blessés pour 10 000 habitants' datatype='real' name='[Calculation_164381428208967683]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([blesse_hospitalise])+SUM([blesse_leger]))/AVG([population])*10000' />
            </column>
            <column caption='Catégorie de véhicule.' datatype='string' name='[Catv (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[catv]' new-bin='true'>
                <bin default-name='false' value='&quot;Autre véhicule&quot;'>
                  <value>&quot;20&quot;</value>
                  <value>&quot;3&quot;</value>
                  <value>&quot;35&quot;</value>
                  <value>&quot;36&quot;</value>
                  <value>&quot;99&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Bus &amp; Car&quot;'>
                  <value>&quot;37&quot;</value>
                  <value>&quot;38&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Moto&quot;'>
                  <value>&quot;2&quot;</value>
                  <value>&quot;30&quot;</value>
                  <value>&quot;31&quot;</value>
                  <value>&quot;32&quot;</value>
                  <value>&quot;33&quot;</value>
                  <value>&quot;34&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Poids Lourd&quot;'>
                  <value>&quot;13&quot;</value>
                  <value>&quot;14&quot;</value>
                  <value>&quot;15&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Tracteur&quot;'>
                  <value>&quot;16&quot;</value>
                  <value>&quot;17&quot;</value>
                  <value>&quot;21&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Traimway&quot;'>
                  <value>&quot;40&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Train&quot;'>
                  <value>&quot;39&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Vélo&quot;'>
                  <value>&quot;1&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Voiture&quot;'>
                  <value>&quot;10&quot;</value>
                  <value>&quot;7&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Condition atmosphérique' datatype='integer' name='[atm]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='%null%' value='*' />
                <alias key='1' value='Normale' />
                <alias key='2' value='Pluie légère' />
                <alias key='3' value='Pluie forte' />
                <alias key='4' value='Neige - grêle' />
                <alias key='5' value='Brouillard - fumée' />
                <alias key='6' value='Vent fort -tempête' />
                <alias key='7' value='Temps éblouissant' />
                <alias key='8' value='Temps couvert' />
                <alias key='9' value='Autre' />
              </aliases>
            </column>
            <column caption='Blessé hospitalisé' datatype='integer' name='[blesse_hospitalise]' role='measure' type='quantitative' />
            <column caption='Blessé léger' datatype='integer' name='[blesse_leger]' role='measure' type='quantitative' />
            <column caption='Catégorie de véhicule' datatype='string' name='[catv]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Département' datatype='string' name='[departement]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[id_vehicule]' role='dimension' type='ordinal' />
            <column caption='Condition lumineuse' datatype='integer' name='[lum]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Plein jour' />
                <alias key='2' value='Crépuscule ou aube' />
                <alias key='3' value='Nuit sans éclairage public' />
                <alias key='4' value='Nuit avec éclairage public non allumé' />
                <alias key='5' value='Nuit avec éclairage public allumé' />
              </aliases>
            </column>
            <column-instance column='[population]' derivation='Max' name='[max:population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[atm]' derivation='None' name='[none:atm:ok]' pivot='key' type='ordinal' />
            <column-instance column='[departement]' derivation='None' name='[none:departement:nk]' pivot='key' type='nominal' />
            <column-instance column='[lum]' derivation='None' name='[none:lum:ok]' pivot='key' type='ordinal' />
            <column datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column caption='Tué' datatype='integer' name='[tue]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_164381428197863424]' derivation='User' name='[usr:Calculation_164381428197863424:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_164381428204236802]' derivation='User' name='[usr:Calculation_164381428204236802:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_164381428208967683]' derivation='User' name='[usr:Calculation_164381428208967683:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Catv (group)]' filter-group='6'>
            <groupfilter function='level-members' level='[Catv (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:atm:ok]' filter-group='5'>
            <groupfilter function='level-members' level='[none:atm:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:departement:nk]' direction='DESC' using='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[usr:Calculation_164381428197863424:qk]' />
          <filter class='categorical' column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:lum:ok]' filter-group='4'>
            <groupfilter function='level-members' level='[none:lum:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[yr:date:ok]'>
            <groupfilter function='member' level='[yr:date:ok]' member='2017' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[yr:date:ok]</column>
            <column>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:lum:ok]</column>
            <column>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:atm:ok]</column>
            <column>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Catv (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='tick-color' scope='rows' value='#00000000' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='tick-color' scope='cols' value='#00000000' />
            <format attr='title' class='0' field='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[max:population:qk]' scope='cols' value='Population' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-color' value='#e6e6e6' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' value='#e6e6e6' />
            <format attr='border-color' value='#d4d4d4' />
            <format attr='border-style' value='none' />
            <format attr='band-color' scope='rows' value='#e6e6e6' />
            <format attr='band-color' scope='cols' value='#e6e6e6' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[usr:Calculation_164381428204236802:qk]' palette='orange_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[usr:Calculation_164381428208967683:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-color' value='#d4d4d4' />
            <format attr='background-color' value='#e6e6e6' />
            <format attr='band-color' scope='rows' value='#e6e6e6' />
            <format attr='band-color' scope='cols' value='#e6e6e6' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
            <format attr='band-size' scope='rows' value='5' />
            <format attr='background-color' value='#e6e6e6' />
            <format attr='band-size' scope='cols' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-pattern-only' value='solid' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='data-highlighter-title'>
            <format attr='title' field='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:departement:nk]' value='Département' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[usr:Calculation_164381428208967683:qk]' />
              <lod column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:departement:nk]' />
            </encodings>
            <trendline enable-confidence-bands='true' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#666666' fontsize='8'>Département:&#9;&lt;[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:departement:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#666666' fontsize='8'>Population 2017:&#9;&lt;[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[max:population:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#666666' fontsize='8'>Nombre de tués pour 1 000 000 habitants:&lt;[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[usr:Calculation_164381428204236802:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#666666' fontsize='8'>Nombre de blessés pour 10 000 habitants: </run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.263370156288147' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#ff0000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[usr:Calculation_164381428204236802:qk]</rows>
        <cols>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[max:population:qk]</cols>
        <page-trail-options enabled='true' lines='true' mark-type='highlighted' marks='false' />
      </table>
    </worksheet>
    <worksheet name='Evolution sur les années étudiées'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='8'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://public.tableau.com/workbooks/LocalisationdesaccidentsroutiersenFrance/Evolutionsurlesannestudies?rev=' id='Evolutionsurlesannestudies' path='/workbooks/LocalisationdesaccidentsroutiersenFrance' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1aqyggh1f33tgz1gorcm00pl3ry9' />
          </datasources>
          <datasource-dependencies datasource='federated.1aqyggh1f33tgz1gorcm00pl3ry9'>
            <column caption='Catégorie de véhicule.' datatype='string' name='[Catv (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[catv]' new-bin='true'>
                <bin default-name='false' value='&quot;Autre véhicule&quot;'>
                  <value>&quot;20&quot;</value>
                  <value>&quot;3&quot;</value>
                  <value>&quot;35&quot;</value>
                  <value>&quot;36&quot;</value>
                  <value>&quot;99&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Bus &amp; Car&quot;'>
                  <value>&quot;37&quot;</value>
                  <value>&quot;38&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Moto&quot;'>
                  <value>&quot;2&quot;</value>
                  <value>&quot;30&quot;</value>
                  <value>&quot;31&quot;</value>
                  <value>&quot;32&quot;</value>
                  <value>&quot;33&quot;</value>
                  <value>&quot;34&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Poids Lourd&quot;'>
                  <value>&quot;13&quot;</value>
                  <value>&quot;14&quot;</value>
                  <value>&quot;15&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Tracteur&quot;'>
                  <value>&quot;16&quot;</value>
                  <value>&quot;17&quot;</value>
                  <value>&quot;21&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Traimway&quot;'>
                  <value>&quot;40&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Train&quot;'>
                  <value>&quot;39&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Vélo&quot;'>
                  <value>&quot;1&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Voiture&quot;'>
                  <value>&quot;10&quot;</value>
                  <value>&quot;7&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Condition atmosphérique' datatype='integer' name='[atm]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='%null%' value='*' />
                <alias key='1' value='Normale' />
                <alias key='2' value='Pluie légère' />
                <alias key='3' value='Pluie forte' />
                <alias key='4' value='Neige - grêle' />
                <alias key='5' value='Brouillard - fumée' />
                <alias key='6' value='Vent fort -tempête' />
                <alias key='7' value='Temps éblouissant' />
                <alias key='8' value='Temps couvert' />
                <alias key='9' value='Autre' />
              </aliases>
            </column>
            <column caption='Blessé hospitalisé' datatype='integer' name='[blesse_hospitalise]' role='measure' type='quantitative' />
            <column caption='Blessé léger' datatype='integer' name='[blesse_leger]' role='measure' type='quantitative' />
            <column caption='Catégorie de véhicule' datatype='string' name='[catv]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Département' datatype='string' name='[departement]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[Département set]' derivation='InOut' name='[io:Département set:nk]' pivot='key' type='nominal' />
            <column caption='Condition lumineuse' datatype='integer' name='[lum]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Plein jour' />
                <alias key='2' value='Crépuscule ou aube' />
                <alias key='3' value='Nuit sans éclairage public' />
                <alias key='4' value='Nuit avec éclairage public non allumé' />
                <alias key='5' value='Nuit avec éclairage public allumé' />
              </aliases>
            </column>
            <column-instance column='[atm]' derivation='None' name='[none:atm:ok]' pivot='key' type='ordinal' />
            <column-instance column='[lum]' derivation='None' name='[none:lum:ok]' pivot='key' type='ordinal' />
            <column-instance column='[blesse_hospitalise]' derivation='Sum' name='[sum:blesse_hospitalise:qk]' pivot='key' type='quantitative' />
            <column-instance column='[blesse_leger]' derivation='Sum' name='[sum:blesse_leger:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tue]' derivation='Sum' name='[sum:tue:qk]' pivot='key' type='quantitative' />
            <column caption='Tué' datatype='integer' name='[tue]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year-Trunc' name='[tyr:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[sum:blesse_hospitalise:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[sum:blesse_leger:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[sum:tue:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Action (Département)]'>
            <groupfilter function='level-members' level='[departement]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Catv (group)]' filter-group='6'>
            <groupfilter function='level-members' level='[Catv (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[io:Département set:nk]'>
            <groupfilter function='member' level='[io:Département set:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:atm:ok]' filter-group='5'>
            <groupfilter function='level-members' level='[none:atm:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:lum:ok]' filter-group='4'>
            <groupfilter function='level-members' level='[none:lum:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[tyr:date:qk]' filter-group='3' included-values='in-range'>
            <min>#2014-04-23 00:00:00#</min>
            <max>#2017-01-01 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[tyr:date:qk]</column>
            <column>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[io:Département set:nk]</column>
            <column>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:lum:ok]</column>
            <column>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:atm:ok]</column>
            <column>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[:Measure Names]</column>
            <column>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Catv (group)]</column>
            <column>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Action (Département)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Multiple Values]' scope='rows' value='false' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='tick-color' scope='cols' value='#00000000' />
            <format attr='tick-color' scope='rows' value='#00000000' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[sum:tue:qk]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[sum:blesse_leger:qk]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[sum:blesse_hospitalise:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' scope='cols' value='#000000' />
            <format attr='text-format' field='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[sum:tue:qk]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[sum:blesse_leger:qk]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[sum:blesse_hospitalise:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='total' value='none' />
            <format attr='border-style' scope='rows' value='none' />
            <format attr='border-style' scope='cols' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[tyr:date:qk]' value='Années étudiées&#10;'>
              <formatted-text>
                <run>Années étudiées&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='12' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[io:Département set:nk]' />
              <lod column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[:Measure Names]' />
              <color column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#898989' fontsize='8'>Année:&#9;</run>
                <run bold='true' fontcolor='#898989' fontsize='8'>&lt;[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[yr:date:ok]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#898989' fontsize='8'>&lt;[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[:Measure Names]&gt;:&#9;</run>
                <run bold='true' fontcolor='#898989' fontsize='8'>&lt;[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Multiple Values]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#ff0000' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Multiple Values]</rows>
        <cols>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[yr:date:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Lieux des accidents'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Visualisez les lieux des accidents en: &lt;</run>
            <run fontsize='12'>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[departement]</run>
            <run fontsize='12'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location derived-from='https://public.tableau.com/workbooks/LocalisationdesaccidentsroutiersenFrance/Lieuxdesaccidents?rev=' id='Lieuxdesaccidents' path='/workbooks/LocalisationdesaccidentsroutiersenFrance' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1aqyggh1f33tgz1gorcm00pl3ry9' />
          </datasources>
          <mapsources>
            <mapsource name='street' />
          </mapsources>
          <datasource-dependencies datasource='federated.1aqyggh1f33tgz1gorcm00pl3ry9'>
            <column caption='Catégorie de véhicule.' datatype='string' name='[Catv (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[catv]' new-bin='true'>
                <bin default-name='false' value='&quot;Autre véhicule&quot;'>
                  <value>&quot;20&quot;</value>
                  <value>&quot;3&quot;</value>
                  <value>&quot;35&quot;</value>
                  <value>&quot;36&quot;</value>
                  <value>&quot;99&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Bus &amp; Car&quot;'>
                  <value>&quot;37&quot;</value>
                  <value>&quot;38&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Moto&quot;'>
                  <value>&quot;2&quot;</value>
                  <value>&quot;30&quot;</value>
                  <value>&quot;31&quot;</value>
                  <value>&quot;32&quot;</value>
                  <value>&quot;33&quot;</value>
                  <value>&quot;34&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Poids Lourd&quot;'>
                  <value>&quot;13&quot;</value>
                  <value>&quot;14&quot;</value>
                  <value>&quot;15&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Tracteur&quot;'>
                  <value>&quot;16&quot;</value>
                  <value>&quot;17&quot;</value>
                  <value>&quot;21&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Traimway&quot;'>
                  <value>&quot;40&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Train&quot;'>
                  <value>&quot;39&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Vélo&quot;'>
                  <value>&quot;1&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Voiture&quot;'>
                  <value>&quot;10&quot;</value>
                  <value>&quot;7&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Condition atmosphérique' datatype='integer' name='[atm]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='%null%' value='*' />
                <alias key='1' value='Normale' />
                <alias key='2' value='Pluie légère' />
                <alias key='3' value='Pluie forte' />
                <alias key='4' value='Neige - grêle' />
                <alias key='5' value='Brouillard - fumée' />
                <alias key='6' value='Vent fort -tempête' />
                <alias key='7' value='Temps éblouissant' />
                <alias key='8' value='Temps couvert' />
                <alias key='9' value='Autre' />
              </aliases>
            </column>
            <column-instance column='[atm]' derivation='Attribute' name='[attr:atm:qk]' pivot='key' type='quantitative' />
            <column-instance column='[col]' derivation='Attribute' name='[attr:col:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Attribute' name='[attr:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[lum]' derivation='Attribute' name='[attr:lum:qk]' pivot='key' type='quantitative' />
            <column-instance column='[plan]' derivation='Attribute' name='[attr:plan:nk]' pivot='key' type='nominal' />
            <column-instance column='[lat]' derivation='Avg' name='[avg:lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[long]' derivation='Avg' name='[avg:long:qk]' pivot='key' type='quantitative' />
            <column caption='Blessé hospitalisé' datatype='integer' name='[blesse_hospitalise]' role='measure' type='quantitative' />
            <column caption='Blessé léger' datatype='integer' name='[blesse_leger]' role='measure' type='quantitative' />
            <column caption='Catégorie de véhicule' datatype='string' name='[catv]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[code (data.csv)]' role='dimension' type='ordinal' />
            <column caption='Type de collision' datatype='integer' name='[col]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Deux véhicules - frontale' />
                <alias key='2' value='Deux véhicules – par l’arrière' />
                <alias key='3' value='Deux véhicules – par le coté' />
                <alias key='4' value='Trois véhicules et plus – en chaîne' />
                <alias key='5' value='Trois véhicules et plus - collisions multiples' />
                <alias key='6' value='Autre collision' />
                <alias key='7' value='Sans collision' />
              </aliases>
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Département' datatype='string' name='[departement]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[id_vehicule]' role='dimension' type='ordinal' />
            <column caption='Indemne' datatype='integer' name='[indemne]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Long' datatype='real' name='[long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Condition lumineuse' datatype='integer' name='[lum]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Plein jour' />
                <alias key='2' value='Crépuscule ou aube' />
                <alias key='3' value='Nuit sans éclairage public' />
                <alias key='4' value='Nuit avec éclairage public non allumé' />
                <alias key='5' value='Nuit avec éclairage public allumé' />
              </aliases>
            </column>
            <column aggregation='Sum' datatype='integer' name='[max_grav]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Indemne' />
                <alias key='2' value='Tué' />
                <alias key='3' value='Blessé hospitalisé' />
                <alias key='4' value='Blessé léger' />
              </aliases>
            </column>
            <column-instance column='[atm]' derivation='None' name='[none:atm:ok]' pivot='key' type='ordinal' />
            <column-instance column='[code (data.csv)]' derivation='None' name='[none:code (data.csv):ok]' pivot='key' type='ordinal' />
            <column-instance column='[id_vehicule]' derivation='None' name='[none:id_vehicule:ok]' pivot='key' type='ordinal' />
            <column-instance column='[lum]' derivation='None' name='[none:lum:ok]' pivot='key' type='ordinal' />
            <column-instance column='[max_grav]' derivation='None' name='[none:max_grav:ok]' pivot='key' type='ordinal' />
            <column caption='Plan de la route' datatype='string' name='[plan]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;0&quot;' value='Autre' />
                <alias key='&quot;1&quot;' value='Partie rectiligne' />
                <alias key='&quot;2&quot;' value='En courbe à gauche' />
                <alias key='&quot;3&quot;' value='En courbe à droite' />
                <alias key='&quot;4&quot;' value='En « S »' />
              </aliases>
            </column>
            <column-instance column='[blesse_hospitalise]' derivation='Sum' name='[sum:blesse_hospitalise:qk]' pivot='key' type='quantitative' />
            <column-instance column='[blesse_leger]' derivation='Sum' name='[sum:blesse_leger:qk]' pivot='key' type='quantitative' />
            <column-instance column='[indemne]' derivation='Sum' name='[sum:indemne:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tue]' derivation='Sum' name='[sum:tue:qk]' pivot='key' type='quantitative' />
            <column caption='Tué' datatype='integer' name='[tue]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year-Trunc' name='[tyr:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Action (Département)]'>
            <groupfilter function='level-members' level='[departement]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Catv (group)]' filter-group='6'>
            <groupfilter function='level-members' level='[Catv (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Catv (group)]' direction='ASC'>
            <dictionary>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Exclusions (Catégorie de véhicule.,code (data.csv),id_vehicule,max_grav)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[Catv (group)]' />
                <groupfilter function='level-members' level='[none:code (data.csv):ok]' />
                <groupfilter function='level-members' level='[none:id_vehicule:ok]' />
                <groupfilter function='level-members' level='[none:max_grav:ok]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:max_grav:ok]' member='1' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[Catv (group)]' member='&quot;Autre véhicule&quot;' />
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[none:code (data.csv):ok]' member='6' />
                          <groupfilter function='member' level='[none:id_vehicule:ok]' member='645616' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[Catv (group)]' member='&quot;Moto&quot;' />
                        <groupfilter function='union'>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:code (data.csv):ok]' member='6' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='545840' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='545851' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='545858' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='545921' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='547185' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='547240' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='547280' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='547336' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='547463' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='547948' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='547959' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='547962' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='547976' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='548088' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='548203' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='548205' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='644913' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645048' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645067' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645069' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645071' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645073' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645075' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645081' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645096' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645113' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645232' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645816' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645817' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645821' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645853' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645900' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645921' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646088' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646133' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646144' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646160' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646161' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646183' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646192' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646234' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646251' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646257' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646264' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646268' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646319' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646327' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646374' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='657632' />
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:code (data.csv):ok]' member='59' />
                            <groupfilter function='member' level='[none:id_vehicule:ok]' member='678184' />
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:code (data.csv):ok]' member='62' />
                            <groupfilter function='member' level='[none:id_vehicule:ok]' member='680091' />
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:code (data.csv):ok]' member='64' />
                            <groupfilter function='member' level='[none:id_vehicule:ok]' member='680464' />
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:code (data.csv):ok]' member='83' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='542933' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='588355' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='713230' />
                            </groupfilter>
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[Catv (group)]' member='&quot;Poids Lourd&quot;' />
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[none:code (data.csv):ok]' member='6' />
                          <groupfilter function='member' level='[none:id_vehicule:ok]' member='646177' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[Catv (group)]' member='&quot;Vélo&quot;' />
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[none:code (data.csv):ok]' member='6' />
                          <groupfilter function='union'>
                            <groupfilter function='member' level='[none:id_vehicule:ok]' member='645875' />
                            <groupfilter function='member' level='[none:id_vehicule:ok]' member='646041' />
                            <groupfilter function='member' level='[none:id_vehicule:ok]' member='646096' />
                            <groupfilter function='member' level='[none:id_vehicule:ok]' member='646388' />
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[Catv (group)]' member='&quot;Voiture&quot;' />
                        <groupfilter function='union'>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:code (data.csv):ok]' member='6' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='545836' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='545863' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='545865' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='545892' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='545894' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='545925' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='545927' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='546804' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='547016' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='547150' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='547176' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='547208' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='547435' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='547459' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='547968' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='547972' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='547982' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='548086' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='548221' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='548276' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='548285' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='548286' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='548323' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='644785' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='644806' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='644808' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='644823' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='644825' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='644828' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='644844' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='644846' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='644857' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='644858' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='644871' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='644874' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='644885' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='644908' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645066' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645102' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645164' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645179' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645181' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645244' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645279' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645685' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645789' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645795' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645798' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645837' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645864' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645869' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645937' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645938' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645939' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645940' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645980' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646036' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646037' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646064' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646075' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646077' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646082' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646101' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646104' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646109' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646115' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646136' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646147' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646151' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646157' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646163' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646203' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646207' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646211' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646221' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646236' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646242' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646244' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646252' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646261' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646262' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646276' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646300' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646301' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646314' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646357' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646359' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646361' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646366' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646379' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646428' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='737563' />
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:code (data.csv):ok]' member='34' />
                            <groupfilter function='member' level='[none:id_vehicule:ok]' member='543300' />
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:code (data.csv):ok]' member='59' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='530287' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='580070' />
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:code (data.csv):ok]' member='62' />
                            <groupfilter function='member' level='[none:id_vehicule:ok]' member='680095' />
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:code (data.csv):ok]' member='64' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='581981' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='582235' />
                            </groupfilter>
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:max_grav:ok]' member='2' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[Catv (group)]' member='&quot;Moto&quot;' />
                        <groupfilter function='union'>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:code (data.csv):ok]' member='6' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='545854' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='547241' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='644830' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645899' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646003' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646162' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646318' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646405' />
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:code (data.csv):ok]' member='83' />
                            <groupfilter function='member' level='[none:id_vehicule:ok]' member='713231' />
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[Catv (group)]' member='&quot;Voiture&quot;' />
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[none:code (data.csv):ok]' member='6' />
                          <groupfilter function='union'>
                            <groupfilter function='member' level='[none:id_vehicule:ok]' member='547865' />
                            <groupfilter function='member' level='[none:id_vehicule:ok]' member='645088' />
                            <groupfilter function='member' level='[none:id_vehicule:ok]' member='645243' />
                            <groupfilter function='member' level='[none:id_vehicule:ok]' member='645686' />
                            <groupfilter function='member' level='[none:id_vehicule:ok]' member='646035' />
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:max_grav:ok]' member='3' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[Catv (group)]' member='&quot;Autre véhicule&quot;' />
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[none:code (data.csv):ok]' member='6' />
                          <groupfilter function='union'>
                            <groupfilter function='member' level='[none:id_vehicule:ok]' member='644849' />
                            <groupfilter function='member' level='[none:id_vehicule:ok]' member='645617' />
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[Catv (group)]' member='&quot;Bus &amp; Car&quot;' />
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[none:code (data.csv):ok]' member='6' />
                          <groupfilter function='member' level='[none:id_vehicule:ok]' member='645159' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[Catv (group)]' member='&quot;Moto&quot;' />
                        <groupfilter function='union'>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:code (data.csv):ok]' member='6' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='545859' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='545920' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='546006' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='546007' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='547279' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='547938' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='547949' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='547963' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='548204' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='548206' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='644855' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='644865' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645072' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645082' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645097' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645233' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645815' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645852' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646062' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646063' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646193' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646235' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646250' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646256' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646263' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646377' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646378' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='657631' />
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:code (data.csv):ok]' member='59' />
                            <groupfilter function='member' level='[none:id_vehicule:ok]' member='678185' />
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:code (data.csv):ok]' member='62' />
                            <groupfilter function='member' level='[none:id_vehicule:ok]' member='680090' />
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:code (data.csv):ok]' member='83' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='542934' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='588372' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='613559' />
                            </groupfilter>
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[Catv (group)]' member='&quot;Poids Lourd&quot;' />
                        <groupfilter function='union'>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:code (data.csv):ok]' member='6' />
                            <groupfilter function='member' level='[none:id_vehicule:ok]' member='545904' />
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:code (data.csv):ok]' member='34' />
                            <groupfilter function='member' level='[none:id_vehicule:ok]' member='562843' />
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[Catv (group)]' member='&quot;Vélo&quot;' />
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[none:code (data.csv):ok]' member='6' />
                          <groupfilter function='member' level='[none:id_vehicule:ok]' member='646097' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[Catv (group)]' member='&quot;Voiture&quot;' />
                        <groupfilter function='union'>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:code (data.csv):ok]' member='%null%' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='544291' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='544293' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='643237' />
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:code (data.csv):ok]' member='6' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='545837' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='545866' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='545891' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='545895' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='545901' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='545922' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='545989' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='546959' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='547188' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='547436' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='547859' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='547969' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='548222' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='548244' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='548324' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='644786' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='644811' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='644824' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='644845' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='644859' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='644872' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='644873' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='644886' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='644909' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645051' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645065' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645094' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645156' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645176' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645270' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645280' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645790' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645850' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645870' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645949' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645990' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646057' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646065' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646092' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646093' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646100' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646105' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646168' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646169' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646170' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646189' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646204' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646229' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646243' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646253' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646277' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646302' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646351' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646354' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646360' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646362' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646367' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646380' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646411' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646429' />
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:code (data.csv):ok]' member='9' />
                            <groupfilter function='member' level='[none:id_vehicule:ok]' member='634345' />
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:code (data.csv):ok]' member='34' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='543301' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='548501' />
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:code (data.csv):ok]' member='59' />
                            <groupfilter function='member' level='[none:id_vehicule:ok]' member='530288' />
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:code (data.csv):ok]' member='62' />
                            <groupfilter function='member' level='[none:id_vehicule:ok]' member='680094' />
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:code (data.csv):ok]' member='83' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='587963' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='587964' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='588356' />
                            </groupfilter>
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:max_grav:ok]' member='4' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[Catv (group)]' member='&quot;Autre véhicule&quot;' />
                        <groupfilter function='union'>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:code (data.csv):ok]' member='%null%' />
                            <groupfilter function='member' level='[none:id_vehicule:ok]' member='544280' />
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:code (data.csv):ok]' member='6' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='547310' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646184' />
                            </groupfilter>
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[Catv (group)]' member='&quot;Bus &amp; Car&quot;' />
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[none:code (data.csv):ok]' member='6' />
                          <groupfilter function='union'>
                            <groupfilter function='member' level='[none:id_vehicule:ok]' member='547131' />
                            <groupfilter function='member' level='[none:id_vehicule:ok]' member='645955' />
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[Catv (group)]' member='&quot;Moto&quot;' />
                        <groupfilter function='union'>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:code (data.csv):ok]' member='6' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='545841' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='545850' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='545905' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='545906' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='545907' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='545908' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='547184' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='547335' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='547462' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='547958' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='547977' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='548089' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='548243' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='644912' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645047' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645068' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645070' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645076' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645114' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645820' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645874' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645884' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645920' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645924' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646087' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646089' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646134' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646143' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646159' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646182' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646267' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646320' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646328' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646373' />
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:code (data.csv):ok]' member='64' />
                            <groupfilter function='member' level='[none:id_vehicule:ok]' member='680465' />
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:code (data.csv):ok]' member='83' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='588352' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='588353' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='588354' />
                            </groupfilter>
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[Catv (group)]' member='&quot;Poids Lourd&quot;' />
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[none:code (data.csv):ok]' member='6' />
                          <groupfilter function='member' level='[none:id_vehicule:ok]' member='646178' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[Catv (group)]' member='&quot;Vélo&quot;' />
                        <groupfilter function='crossjoin'>
                          <groupfilter function='member' level='[none:code (data.csv):ok]' member='6' />
                          <groupfilter function='union'>
                            <groupfilter function='member' level='[none:id_vehicule:ok]' member='645876' />
                            <groupfilter function='member' level='[none:id_vehicule:ok]' member='646042' />
                            <groupfilter function='member' level='[none:id_vehicule:ok]' member='646389' />
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[Catv (group)]' member='&quot;Voiture&quot;' />
                        <groupfilter function='union'>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:code (data.csv):ok]' member='%null%' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='544292' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='643236' />
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:code (data.csv):ok]' member='6' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='545862' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='545926' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='546805' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='547017' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='547147' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='547151' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='547177' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='547189' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='547203' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='547209' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='547290' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='547373' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='547460' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='547660' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='547973' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='547975' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='547983' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='548087' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='548207' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='548274' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='548275' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='548277' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='548284' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='644787' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='644807' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='644826' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='644827' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='644836' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645083' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645093' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645103' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645105' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645106' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645158' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645165' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645167' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645180' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645191' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645271' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645784' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645796' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645799' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645802' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645803' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645804' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645827' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645838' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645865' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645933' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645935' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645936' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645962' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='645981' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646076' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646083' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646102' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646110' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646116' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646135' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646146' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646152' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646158' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646164' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646206' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646208' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646210' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646222' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646237' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646245' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646260' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646299' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646315' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646358' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646410' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='646416' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='737564' />
                            </groupfilter>
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:code (data.csv):ok]' member='13' />
                            <groupfilter function='member' level='[none:id_vehicule:ok]' member='655147' />
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:code (data.csv):ok]' member='59' />
                            <groupfilter function='member' level='[none:id_vehicule:ok]' member='580071' />
                          </groupfilter>
                          <groupfilter function='crossjoin'>
                            <groupfilter function='member' level='[none:code (data.csv):ok]' member='64' />
                            <groupfilter function='union'>
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='581980' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='582222' />
                              <groupfilter function='member' level='[none:id_vehicule:ok]' member='582236' />
                            </groupfilter>
                          </groupfilter>
                        </groupfilter>
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[Catv (group)]' />
                  <hierarchy name='[none:code (data.csv):ok]' />
                  <hierarchy name='[none:id_vehicule:ok]' />
                  <hierarchy name='[none:max_grav:ok]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:atm:ok]' filter-group='5'>
            <groupfilter function='level-members' level='[none:atm:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:lum:ok]' filter-group='4'>
            <groupfilter function='level-members' level='[none:lum:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:max_grav:ok]' direction='ASC'>
            <dictionary>
              <bucket>2</bucket>
              <bucket>3</bucket>
              <bucket>4</bucket>
              <bucket>1</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[tyr:date:qk]' filter-group='3' included-values='in-range'>
            <min>#2014-04-23 00:00:00#</min>
            <max>#2017-01-01 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[tyr:date:qk]</column>
            <column>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:lum:ok]</column>
            <column>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:atm:ok]</column>
            <column>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Catv (group)]</column>
            <column>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Action (Département)]</column>
            <column>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Exclusions (Catégorie de véhicule.,code (data.csv),id_vehicule,max_grav)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[sum:tue:qk]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[sum:blesse_hospitalise:qk]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[sum:blesse_leger:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:max_grav:ok]' value='Cas le plus grave '>
              <formatted-text>
                <run>Cas le plus grave </run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='mapbox.streets' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Catv (group)]' value='Catégorie de véhicule'>
              <formatted-text>
                <run fontsize='8'>Catégorie de véhicule</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:atm:ok]' value='Condition atmosphérique'>
              <formatted-text>
                <run fontsize='8'>Condition atmosphérique</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[tyr:date:qk]' value='Années étudiées' />
            <format attr='background-color' value='#e6e6e6' />
            <format attr='title' field='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:lum:ok]' value='Condition lumineuse'>
              <formatted-text>
                <run fontsize='8'>Condition lumineuse</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:max_grav:ok]' />
              <shape column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Catv (group)]' />
              <tooltip column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[attr:atm:qk]' />
              <tooltip column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[attr:lum:qk]' />
              <tooltip column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[attr:plan:nk]' />
              <tooltip column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[attr:col:qk]' />
              <tooltip column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[sum:tue:qk]' />
              <tooltip column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[sum:blesse_hospitalise:qk]' />
              <tooltip column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[sum:blesse_leger:qk]' />
              <tooltip column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[sum:indemne:qk]' />
              <tooltip column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[attr:date:ok]' />
              <lod column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:id_vehicule:ok]' />
              <lod column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:code (data.csv):ok]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#898989' fontsize='8'>Véhicule :&#9;&lt;[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Catv (group)]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#898989' fontsize='8'>Nombre de tués:&#9;&lt;[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[sum:tue:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#898989' fontsize='8'>Nombre de bléssés hospitalisés:&#9;&lt;[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[sum:blesse_hospitalise:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#898989' fontsize='8'>Nombre de blessés légers:&#9;&lt;[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[sum:blesse_leger:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#898989' fontsize='8'>Luminosité:&#9;&lt;[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[attr:lum:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#898989' fontsize='8'>Condition atmosphérique: &#9;&lt;[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[attr:atm:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#898989' fontsize='8'>Plan de la route:&#9;&lt;[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[attr:plan:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#898989' fontsize='8'>Collision:&#9;&lt;[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[attr:col:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#898989' fontsize='8'>Date: &#9;&lt;[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[attr:date:ok]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='3.0828728675842285' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[avg:lat:qk]</rows>
        <cols>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[avg:long:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Selection du département'>
      <repository-location derived-from='https://public.tableau.com/workbooks/LocalisationdesaccidentsroutiersenFrance/Selectiondudpartement?rev=' id='Selectiondudpartement' path='/workbooks/LocalisationdesaccidentsroutiersenFrance' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1aqyggh1f33tgz1gorcm00pl3ry9' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1aqyggh1f33tgz1gorcm00pl3ry9'>
            <column caption='Nombre d&apos;accident pour 10 000 habitants' datatype='real' name='[Calculation_164381428197863424]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([id_vehicule])/AVG([population])*10000' />
            </column>
            <column caption='Catégorie de véhicule.' datatype='string' name='[Catv (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[catv]' new-bin='true'>
                <bin default-name='false' value='&quot;Autre véhicule&quot;'>
                  <value>&quot;20&quot;</value>
                  <value>&quot;3&quot;</value>
                  <value>&quot;35&quot;</value>
                  <value>&quot;36&quot;</value>
                  <value>&quot;99&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Bus &amp; Car&quot;'>
                  <value>&quot;37&quot;</value>
                  <value>&quot;38&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Moto&quot;'>
                  <value>&quot;2&quot;</value>
                  <value>&quot;30&quot;</value>
                  <value>&quot;31&quot;</value>
                  <value>&quot;32&quot;</value>
                  <value>&quot;33&quot;</value>
                  <value>&quot;34&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Poids Lourd&quot;'>
                  <value>&quot;13&quot;</value>
                  <value>&quot;14&quot;</value>
                  <value>&quot;15&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Tracteur&quot;'>
                  <value>&quot;16&quot;</value>
                  <value>&quot;17&quot;</value>
                  <value>&quot;21&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Traimway&quot;'>
                  <value>&quot;40&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Train&quot;'>
                  <value>&quot;39&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Vélo&quot;'>
                  <value>&quot;1&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Voiture&quot;'>
                  <value>&quot;10&quot;</value>
                  <value>&quot;7&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Condition atmosphérique' datatype='integer' name='[atm]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='%null%' value='*' />
                <alias key='1' value='Normale' />
                <alias key='2' value='Pluie légère' />
                <alias key='3' value='Pluie forte' />
                <alias key='4' value='Neige - grêle' />
                <alias key='5' value='Brouillard - fumée' />
                <alias key='6' value='Vent fort -tempête' />
                <alias key='7' value='Temps éblouissant' />
                <alias key='8' value='Temps couvert' />
                <alias key='9' value='Autre' />
              </aliases>
            </column>
            <column caption='Catégorie de véhicule' datatype='string' name='[catv]' role='dimension' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[code (data.csv)]' role='dimension' type='ordinal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Département' datatype='string' name='[departement]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column aggregation='Sum' datatype='integer' name='[id_vehicule]' role='dimension' type='ordinal' />
            <column caption='Condition lumineuse' datatype='integer' name='[lum]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Plein jour' />
                <alias key='2' value='Crépuscule ou aube' />
                <alias key='3' value='Nuit sans éclairage public' />
                <alias key='4' value='Nuit avec éclairage public non allumé' />
                <alias key='5' value='Nuit avec éclairage public allumé' />
              </aliases>
            </column>
            <column-instance column='[atm]' derivation='None' name='[none:atm:ok]' pivot='key' type='ordinal' />
            <column-instance column='[code (data.csv)]' derivation='None' name='[none:code (data.csv):ok]' pivot='key' type='ordinal' />
            <column-instance column='[departement]' derivation='None' name='[none:departement:nk]' pivot='key' type='nominal' />
            <column-instance column='[lum]' derivation='None' name='[none:lum:ok]' pivot='key' type='ordinal' />
            <column datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_164381428197863424]' derivation='User' name='[usr:Calculation_164381428197863424:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Catv (group)]' filter-group='6'>
            <groupfilter function='level-members' level='[Catv (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:atm:ok]' filter-group='5'>
            <groupfilter function='level-members' level='[none:atm:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:code (data.csv):ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:code (data.csv):ok]' member='%null%' />
              <groupfilter from='1' function='range' level='[none:code (data.csv):ok]' to='95' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:departement:nk]'>
            <groupfilter function='level-members' level='[none:departement:nk]' />
          </filter>
          <filter class='categorical' column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:lum:ok]' filter-group='4'>
            <groupfilter function='level-members' level='[none:lum:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[yr:date:ok]'>
            <groupfilter function='member' level='[yr:date:ok]' member='2017' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[yr:date:ok]</column>
            <column>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:lum:ok]</column>
            <column>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:atm:ok]</column>
            <column>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Catv (group)]</column>
            <column>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:code (data.csv):ok]</column>
            <column>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:departement:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[usr:Calculation_164381428197863424:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='false' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='true' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='false' />
            <format attr='enabled' id='um_adm0_lbl' value='false' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='false' />
            <format attr='enabled' id='pp2_statelabels' value='false' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[usr:Calculation_164381428197863424:qk]' />
              <lod column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:departement:nk]' />
              <geometry column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#666666' fontsize='8'>Département:&#9;&lt;[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:departement:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#666666' fontsize='8'>Nombre de blessés pour 10 000 habitants:&#9;&lt;[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[usr:Calculation_164381428197863424:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Latitude (generated)]</rows>
        <cols>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='phrase'>
      <repository-location derived-from='https://public.tableau.com/workbooks/LocalisationdesaccidentsroutiersenFrance/phrase?rev=' id='phrase' path='/workbooks/LocalisationdesaccidentsroutiersenFrance' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1aqyggh1f33tgz1gorcm00pl3ry9' />
          </datasources>
          <datasource-dependencies datasource='federated.1aqyggh1f33tgz1gorcm00pl3ry9'>
            <column caption='Département' datatype='string' name='[departement]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[departement]' derivation='None' name='[none:departement:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Action (Département)]'>
            <groupfilter function='level-members' level='[departement]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Département set]' />
          <slices>
            <column>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Département set]</column>
            <column>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Action (Département)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='608' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#666666' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:departement:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#f28e2b' fontsize='14'>Visualisez les accidents en : &lt;</run>
                <run bold='true' fontcolor='#f28e2b' fontsize='14'>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:departement:nk]</run>
                <run bold='true' fontcolor='#f28e2b' fontsize='14'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Où se produisent les accidents routiers dans votre département ?'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <repository-location derived-from='https://public.tableau.com/workbooks/LocalisationdesaccidentsroutiersenFrance/Oseproduisentlesaccidentsroutiersdansvotredpartement?rev=' id='Oseproduisentlesaccidentsroutiersdansvotredpartement' path='/workbooks/LocalisationdesaccidentsroutiersenFrance' revision='' />
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#e6e6e6' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='background-color' value='#00000000' />
          <format attr='color' value='#e6e6e6' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='color' value='#000000' />
        </style-rule>
      </style>
      <size maxheight='600' maxwidth='800' minheight='600' minwidth='800' preset-index='3' sizing-mode='fixed' />
      <datasources>
        <datasource caption='data' name='federated.1aqyggh1f33tgz1gorcm00pl3ry9' />
      </datasources>
      <datasource-dependencies datasource='federated.1aqyggh1f33tgz1gorcm00pl3ry9'>
        <column caption='Catégorie de véhicule.' datatype='string' name='[Catv (group)]' role='dimension' type='nominal'>
          <calculation class='categorical-bin' column='[catv]' new-bin='true'>
            <bin default-name='false' value='&quot;Autre véhicule&quot;'>
              <value>&quot;20&quot;</value>
              <value>&quot;3&quot;</value>
              <value>&quot;35&quot;</value>
              <value>&quot;36&quot;</value>
              <value>&quot;99&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Bus &amp; Car&quot;'>
              <value>&quot;37&quot;</value>
              <value>&quot;38&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Moto&quot;'>
              <value>&quot;2&quot;</value>
              <value>&quot;30&quot;</value>
              <value>&quot;31&quot;</value>
              <value>&quot;32&quot;</value>
              <value>&quot;33&quot;</value>
              <value>&quot;34&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Poids Lourd&quot;'>
              <value>&quot;13&quot;</value>
              <value>&quot;14&quot;</value>
              <value>&quot;15&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Tracteur&quot;'>
              <value>&quot;16&quot;</value>
              <value>&quot;17&quot;</value>
              <value>&quot;21&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Traimway&quot;'>
              <value>&quot;40&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Train&quot;'>
              <value>&quot;39&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Vélo&quot;'>
              <value>&quot;1&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Voiture&quot;'>
              <value>&quot;10&quot;</value>
              <value>&quot;7&quot;</value>
            </bin>
          </calculation>
        </column>
        <column caption='Condition atmosphérique' datatype='integer' name='[atm]' role='dimension' type='ordinal'>
          <aliases>
            <alias key='%null%' value='*' />
            <alias key='1' value='Normale' />
            <alias key='2' value='Pluie légère' />
            <alias key='3' value='Pluie forte' />
            <alias key='4' value='Neige - grêle' />
            <alias key='5' value='Brouillard - fumée' />
            <alias key='6' value='Vent fort -tempête' />
            <alias key='7' value='Temps éblouissant' />
            <alias key='8' value='Temps couvert' />
            <alias key='9' value='Autre' />
          </aliases>
        </column>
        <column caption='Catégorie de véhicule' datatype='string' name='[catv]' role='dimension' type='nominal' />
        <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column caption='Condition lumineuse' datatype='integer' name='[lum]' role='dimension' type='ordinal'>
          <aliases>
            <alias key='1' value='Plein jour' />
            <alias key='2' value='Crépuscule ou aube' />
            <alias key='3' value='Nuit sans éclairage public' />
            <alias key='4' value='Nuit avec éclairage public non allumé' />
            <alias key='5' value='Nuit avec éclairage public allumé' />
          </aliases>
        </column>
        <column-instance column='[atm]' derivation='None' name='[none:atm:ok]' pivot='key' type='ordinal' />
        <column-instance column='[lum]' derivation='None' name='[none:lum:ok]' pivot='key' type='ordinal' />
        <column-instance column='[date]' derivation='Year-Trunc' name='[tyr:date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='57389' id='85' param='horz' type='layout-flow' w='98000' x='1000' y='12278'>
            <zone h='57389' id='83' param='horz' type='layout-flow' w='98000' x='1000' y='12278'>
              <zone h='57389' id='80' param='vert' type='layout-flow' w='98000' x='1000' y='12278'>
                <zone fixed-size='352' h='57389' id='91' is-fixed='true' type='layout-basic' w='98000' x='1000' y='12278'>
                  <zone h='35750' id='107' name='Lieux des accidents' show-title='false' w='75875' x='23125' y='33917'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone fixed-size='114' h='11044' id='115' is-fixed='true' param='horz' type='layout-flow' w='98000' x='1000' y='22873'>
                    <zone fixed-size='360' h='11044' id='116' is-fixed='true' param='vert' type='layout-flow' w='98000' x='1000' y='22873'>
                      <zone fixed-size='38' h='5711' id='138' is-fixed='true' type='layout-basic' w='98000' x='1000' y='22873'>
                        <zone h='5711' id='136' param='horz' type='layout-flow' w='32125' x='1000' y='22873'>
                          <zone forceUpdate='true' h='5711' id='137' type='text' w='32125' x='1000' y='22873'>
                            <formatted-text>
                              <run>Condition atmosphérique</run>
                            </formatted-text>
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                        </zone>
                        <zone h='5711' id='139' param='horz' type='layout-flow' w='65875' x='33125' y='22873'>
                          <zone fixed-size='53' h='5711' id='108' is-fixed='true' mode='dropdown' name='Lieux des accidents' param='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:atm:ok]' show-title='false' type='filter' w='65875' x='33125' y='22873'>
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                        </zone>
                      </zone>
                      <zone h='5333' id='134' type='layout-basic' w='98000' x='1000' y='28584'>
                        <zone h='5333' id='132' param='horz' type='layout-flow' w='32125' x='1000' y='28584'>
                          <zone forceUpdate='true' h='5333' id='133' type='text' w='32125' x='1000' y='28584'>
                            <formatted-text>
                              <run>Condition lumineuse</run>
                            </formatted-text>
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                        </zone>
                        <zone h='5333' id='135' param='horz' type='layout-flow' w='65875' x='33125' y='28584'>
                          <zone fixed-size='53' h='5333' id='109' is-fixed='true' mode='dropdown' name='Lieux des accidents' param='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:lum:ok]' show-title='false' type='filter' w='65875' x='33125' y='28584'>
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                  <zone fixed-size='178' h='22704' id='110' is-fixed='true' name='Lieux des accidents' pane-specification-id='0' param='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:max_grav:ok]' type='color' w='22125' x='1000' y='33917'>
                    <zone-style>
                      <format attr='border-color' value='#898989' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='1' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone forceUpdate='true' h='13046' id='126' type='text' w='22125' x='1000' y='56621'>
                    <formatted-text>
                      <run fontalignment='1' fontsize='8'>Zoomez puis</run>
                      <run fontalignment='1'>Æ&#10;</run>
                      <run fontalignment='1' fontsize='8'>pour retour </run>
                      <run fontalignment='1'>Æ&#10;</run>
                      <run fontalignment='1' fontsize='8'>au zoom original !</run>
                    </formatted-text>
                    <zone-style>
                      <format attr='border-color' value='#898989' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='1' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='4876' id='144' type='text' w='19375' x='1000' y='12278'>
                    <formatted-text>
                      <run>Années étudiées</run>
                    </formatted-text>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone fixed-size='48' h='4876' id='89' is-fixed='true' name='Evolution sur les années étudiées' param='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[tyr:date:qk]' show-title='false' type='filter' values='database' w='78625' x='20375' y='12278'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone forceUpdate='true' h='5719' id='130' type='text' w='32125' x='1000' y='17154'>
                    <formatted-text>
                      <run>Catégorie de véhicule</run>
                    </formatted-text>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='5719' id='117' mode='dropdown' name='Lieux des accidents' param='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Catv (group)]' show-title='false' type='filter' values='database' w='65875' x='33125' y='17154'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone h='10945' id='123' name='phrase' show-title='false' w='83500' x='15500' y='1333'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='10945' id='124' type='empty' w='14500' x='1000' y='1333'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone fixed-size='107' h='23666' id='74' is-fixed='true' name='Evolution sur les années étudiées' w='98000' x='1000' y='69667'>
            <layout-cache minheight='190' type-h='scalable' type-w='cell' />
            <zone-style>
              <format attr='border-color' value='#898989' />
              <format attr='border-style' value='solid' />
              <format attr='border-width' value='1' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone forceUpdate='true' h='5334' id='160' type='text' w='75875' x='1000' y='93333'>
            <formatted-text>
              <run bold='true'>(Falcultatif: Changez de département ou comparez les sur vos filtres)</run>
              <run>Æ&#10;</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='5334' id='118' type='dashboard-object' w='5375' x='76875' y='93333'>
            <button action='tabdoc:goto-sheet window-id=&quot;{97FB61DA-B493-4C3B-BFC1-82CACE91C254}&quot;'>
              <button-visual-state>
                <image-path>C:/Users/theos/Documents/ETUDES/EDHEC_MSc/data_visualization/project_data_viz/images/Picture4.png</image-path>
              </button-visual-state>
            </button>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='5334' id='161' type='empty' w='16750' x='82250' y='93333'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='3833' id='125' type='text' w='62875' x='18750' y='7500'>
          <formatted-text>
            <run bold='true' fontsize='11'>Étape 2: Filtrez &gt; Zoomez &gt; Explorez les données</run>
          </formatted-text>
        </zone>
        <zone h='3333' id='127' is-centered='0' is-scaled='1' param='C:/Users/theos/Documents/ETUDES/EDHEC_MSc/data_visualization/project_data_viz/visualisation_accidents_routiers_final.twb Files/Image/home tableau.png' type='bitmap' w='2250' x='4500' y='61500' />
      </zones>
      <devicelayouts>
        <devicelayout name='Phone'>
          <layout-options>
            <title>
              <formatted-text />
            </title>
          </layout-options>
          <size maxheight='667' minheight='667' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='145' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='10945' id='118' type='dashboard-object' w='27200' x='2133' y='1199'>
                <button action='tabdoc:goto-sheet window-id=&quot;{97FB61DA-B493-4C3B-BFC1-82CACE91C254}&quot;'>
                  <button-visual-state>
                    <image-path>C:/Users/theos/Documents/ETUDES/EDHEC_MSc/data_visualization/project_data_viz/visualisation_accidents_routiers_final.twb Files/Image/Picture1.png</image-path>
                  </button-visual-state>
                </button>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='10945' id='149' type='text' w='68534' x='29333' y='1199'>
                <formatted-text>
                  <run bold='true' fontalignment='1' fontsize='8'>Étape 2: </run>
                  <run fontalignment='1'>Æ&#10;</run>
                  <run bold='true' fontalignment='1' fontsize='8'>Filtrez &gt; Zoomez &gt; Explorez</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='4947' id='154' type='layout-basic' w='95734' x='2133' y='12144'>
                <zone h='4947' id='147' param='horz' type='layout-flow' w='57600' x='2133' y='12144'>
                  <zone h='4947' id='150' type='text' w='57600' x='2133' y='12144'>
                    <formatted-text>
                      <run fontsize='8'>Catégorie de véhicule</run>
                    </formatted-text>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
                <zone h='4947' id='155' param='horz' type='layout-flow' w='38134' x='59733' y='12144'>
                  <zone h='4947' id='117' mode='dropdown' name='Lieux des accidents' param='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Catv (group)]' show-title='false' type='filter' values='database' w='38134' x='59733' y='12144'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                      <format attr='padding' value='0' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone fixed-size='37' h='4798' id='156' is-fixed='true' type='layout-basic' w='95734' x='2133' y='17091'>
                <zone h='4798' id='148' param='horz' type='layout-flow' w='57600' x='2133' y='17091'>
                  <zone h='4798' id='151' type='text' w='57600' x='2133' y='17091'>
                    <formatted-text>
                      <run fontsize='8'>Condition atmosphérique</run>
                    </formatted-text>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
                <zone h='4798' id='157' param='horz' type='layout-flow' w='38134' x='59733' y='17091'>
                  <zone fixed-size='135' h='4798' id='108' is-fixed='true' mode='dropdown' name='Lieux des accidents' param='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:atm:ok]' show-title='false' type='filter' w='38134' x='59733' y='17091'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                      <format attr='padding' value='0' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone h='5397' id='158' type='layout-basic' w='95734' x='2133' y='21889'>
                <zone h='5397' id='152' param='horz' type='layout-flow' w='57600' x='2133' y='21889'>
                  <zone h='5397' id='153' type='text' w='57600' x='2133' y='21889'>
                    <formatted-text>
                      <run fontsize='8'>Condition lumineuse</run>
                    </formatted-text>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
                <zone h='5397' id='159' param='horz' type='layout-flow' w='38134' x='59733' y='21889'>
                  <zone fixed-size='53' h='5397' id='109' mode='dropdown' name='Lieux des accidents' param='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:lum:ok]' show-title='false' type='filter' w='38134' x='59733' y='21889'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                      <format attr='padding' value='0' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone fixed-size='473' h='71515' id='107' is-fixed='true' name='Lieux des accidents' show-title='false' w='95734' x='2133' y='27286'>
                <layout-cache minheight='201' type-h='scalable' type-w='fixed' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='padding' value='0' />
                </zone-style>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
    </dashboard>
    <dashboard name='Vue récapitulative'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <repository-location derived-from='https://public.tableau.com/workbooks/LocalisationdesaccidentsroutiersenFrance/Vuercapitulative?rev=' id='Vuercapitulative' path='/workbooks/LocalisationdesaccidentsroutiersenFrance' revision='' />
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#e6e6e6' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='background-color' value='#00000000' />
          <format attr='color' value='#e6e6e6' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='color' value='#000000' />
        </style-rule>
      </style>
      <size maxheight='600' maxwidth='800' minheight='600' minwidth='800' preset-index='3' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='69521' id='59' name='Selection du département' show-title='false' w='48500' x='50500' y='25000'>
            <layout-cache minheight='201' minwidth='201' type-h='scalable' type-w='scalable' />
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='4146' id='102' param='vert' type='layout-flow' w='98000' x='1000' y='94521'>
            <zone h='4146' id='77' param='vert' type='layout-flow' w='98000' x='1000' y='94521'>
              <zone forceUpdate='true' h='4146' id='36' type='text' w='98000' x='1000' y='94521'>
                <formatted-text>
                  <run fontalignment='1' fontcolor='#555555' fontsize='8'>Sources des données: data.gouv et Insee. Plus d&apos;informations sur GitHub: TheoSimier</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone forceUpdate='true' h='5300' id='104' type='text' w='98000' x='1000' y='8200'>
            <formatted-text>
              <run bold='true' fontalignment='1' fontsize='11'>Étape 1: Sélectionnez votre département</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='3' />
            </zone-style>
          </zone>
          <zone h='69521' id='108' name='Comparatif des départements' show-title='false' w='49500' x='1000' y='25000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone forceUpdate='true' h='6867' id='109' type='text' w='98000' x='1000' y='1333'>
            <formatted-text>
              <run bold='true' fontalignment='1' fontcolor='#f28e2b' fontsize='12'>Où se produisent les accidents routiers dans votre département ?</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone forceUpdate='true' h='11500' id='110' type='text' w='98000' x='1000' y='13500'>
            <formatted-text>
              <run fontalignment='1' fontsize='11'>Comparatif des départements</run>
              <run fontalignment='1'>Æ&#10;</run>
              <run fontalignment='1' fontsize='8'>Couleur : Nombre de blessés pour 10 000 habitants</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout name='Phone'>
          <layout-options>
            <title>
              <formatted-text />
            </title>
          </layout-options>
          <size maxheight='900' minheight='900' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='112' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='113' param='vert' type='layout-flow' w='95734' x='2133' y='889'>
                <zone forceUpdate='true' h='11889' id='109' type='text' w='95734' x='2133' y='889'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#f28e2b' fontsize='12'>Où se produisent les accidents routiers dans votre département ?</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='7556' id='104' type='text' w='95734' x='2133' y='12778'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontsize='11'>Étape 1: Sélectionnez votre département</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='32000' id='59' is-fixed='true' name='Selection du département' show-title='false' w='95734' x='2133' y='20334'>
                  <layout-cache minheight='201' minwidth='201' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='dashboard' maximized='true' name='Vue récapitulative'>
      <viewpoints>
        <viewpoint name='Comparatif des départements'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Selection du département'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <device-preview>
        <device name='Generic Phone' type='Phone' />
      </device-preview>
      <simple-id uuid='{97FB61DA-B493-4C3B-BFC1-82CACE91C254}' />
    </window>
    <window class='dashboard' name='Où se produisent les accidents routiers dans votre département ?'>
      <viewpoints>
        <viewpoint name='Evolution sur les années étudiées'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Lieux des accidents'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:grav:ok]</field>
            </color-one-way>
          </highlight>
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='phrase' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{5302B2D0-6600-4B2C-8533-E8BE32F1C897}' />
    </window>
    <window class='worksheet' name='Selection du département'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:departement:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[usr:Calculation_164381428197863424:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:code (data.csv):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{05F77472-3D35-455D-9FFF-A19602B8127B}' />
    </window>
    <window class='worksheet' name='Comparatif des départements'>
      <cards>
        <edge name='left'>
          <strip size='240'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='44'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[usr:Calculation_164381428208967683:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{297093D4-9E0E-4189-BFAF-521EDB514CC5}' />
    </window>
    <window class='worksheet' name='Lieux des accidents'>
      <cards>
        <edge name='left'>
          <strip size='240'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='44'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card mode='dropdown' param='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Catv (group)]' type='filter' />
            <card mode='dropdown' param='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:atm:ok]' type='filter' />
            <card mode='dropdown' param='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:lum:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:max_grav:ok]' type='color' />
            <card param='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Catv (group)]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[avg:long:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[avg:lat:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Catv (group)]</field>
                  <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[avg:lat:qk]</field>
                  <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[avg:long:qk]</field>
                  <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:code (data.csv):ok]</field>
                  <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:id_vehicule:ok]</field>
                  <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:max_grav:ok]</field>
                  <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[sum:blesse_hospitalise:qk]</field>
                  <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[sum:blesse_leger:qk]</field>
                  <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[sum:indemne:qk]</field>
                  <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[sum:tue:qk]</field>
                  <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[attr:atm:qk]</field>
                  <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[attr:col:qk]</field>
                  <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[attr:date:ok]</field>
                  <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[attr:lum:qk]</field>
                  <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[attr:plan:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Voiture&quot;</value>
                <value>42.010949334913136</value>
                <value>8.4410255250746289</value>
                <value>%null%</value>
                <value>544292</value>
                <value>4</value>
                <value>0</value>
                <value>3</value>
                <value>0</value>
                <value>0</value>
                <value>1</value>
                <value>5</value>
                <value>#2015-12-04#</value>
                <value>3</value>
                <value>&quot;1&quot;</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[avg:long:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[avg:lat:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Catv (group)]</field>
                  <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[avg:lat:qk]</field>
                  <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[avg:long:qk]</field>
                  <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:code (data.csv):ok]</field>
                  <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:id_vehicule:ok]</field>
                  <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:max_grav:ok]</field>
                  <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[sum:blesse_hospitalise:qk]</field>
                  <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[sum:blesse_leger:qk]</field>
                  <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[sum:indemne:qk]</field>
                  <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[sum:tue:qk]</field>
                  <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[attr:atm:qk]</field>
                  <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[attr:col:qk]</field>
                  <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[attr:date:ok]</field>
                  <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[attr:lum:qk]</field>
                  <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[attr:plan:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Voiture&quot;</value>
                <value>42.010973965200648</value>
                <value>8.4409929493886722</value>
                <value>%null%</value>
                <value>544293</value>
                <value>3</value>
                <value>3</value>
                <value>0</value>
                <value>0</value>
                <value>0</value>
                <value>1</value>
                <value>5</value>
                <value>#2015-12-04#</value>
                <value>3</value>
                <value>&quot;1&quot;</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[avg:long:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[avg:lat:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Catv (group)]</field>
                  <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[avg:lat:qk]</field>
                  <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[avg:long:qk]</field>
                  <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:code (data.csv):ok]</field>
                  <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:id_vehicule:ok]</field>
                  <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:max_grav:ok]</field>
                  <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[sum:blesse_hospitalise:qk]</field>
                  <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[sum:blesse_leger:qk]</field>
                  <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[sum:indemne:qk]</field>
                  <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[sum:tue:qk]</field>
                  <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[attr:atm:qk]</field>
                  <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[attr:col:qk]</field>
                  <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[attr:date:ok]</field>
                  <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[attr:lum:qk]</field>
                  <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[attr:plan:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Voiture&quot;</value>
                <value>42.01094625664954</value>
                <value>8.4410175117150903</value>
                <value>%null%</value>
                <value>544291</value>
                <value>3</value>
                <value>3</value>
                <value>0</value>
                <value>0</value>
                <value>0</value>
                <value>1</value>
                <value>5</value>
                <value>#2015-12-04#</value>
                <value>3</value>
                <value>&quot;1&quot;</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Catv (group)]</field>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[io:Département set:nk]</field>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:F1:ok]</field>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:atm:ok]</field>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:code (data.csv):ok]</field>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:col:ok]</field>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:departement:nk]</field>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:grav:ok]</field>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:id_vehicule:ok]</field>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:lum:ok]</field>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:max_grav:ok]</field>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:plan:nk]</field>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='8' />
      </viewpoint>
      <simple-id uuid='{7D9C7463-5C53-43D4-9EEF-DEC145957B86}' />
    </window>
    <window class='worksheet' name='Evolution sur les années étudiées'>
      <cards>
        <edge name='left'>
          <strip size='240'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='60'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='12' param='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[:Measure Names]</field>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:atm:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9E14D353-7B76-437D-B1E8-2B35D14FB4CC}' />
    </window>
    <window class='worksheet' name='phrase'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Département set]</field>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Set 1]</field>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:departement:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4BB9D369-6191-41AB-8B1E-0937791C1E9F}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Comparatif des départements' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Evolution sur les années étudiées' width='184'>
      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
    </thumbnail>
    <thumbnail height='192' name='Lieux des accidents' width='192'>
      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
      PzAu/FmYKyP0y9+m+sQnaNo9imrO3pFhFjes9jte0HiRm+9oyj1J0K1qp5mvG+u5N487R+9d
      pc5vkPVC8rmhrgNqM6e1MUorrHHksiZQml4UcTQtWFtdocWzNoqxCKyLyBJBFJYE8TL3d8b0
      4oj52HJpM+7ALL4TGexkSbsBqERAvVDbeWzdCisWXEECj5QJB5WmXtDUfFTCYy3hUR0wrzK+
      XzxF6aMFdPTdjOFCCO7MM+7Mr7CVrnIl+j5azgBBbiqCOuBQFB2T3j/GQtj7mRCwlgr+i8F1
      mr/6G7A/z98tcOOS13Z3qC/8OvfYInX7mLpkVtZUrWFaVxzOS7SUpKGmdpqbk2TxWx4PnuNV
      Yeb6XO63KDsnySLyuSXrdT33SkrquulA7EVHZd5LlvjKn75Mv7/G668/Ym+v5U//9KusrFzi
      0fac/Z2SC2cuMDnosjobKylxoE8UNpV4TFh7OpQUi9h7MjdIKVFKnKhovry3zK1p/GOzfZdG
      cCtf4369iUF9IGP46ednJuZeeYFarLISjhG0tK2jaTyOj6kDnIjgvUMb7Pi104/faf/9xQeo
      f/t/0N7saMR/viZY39+nXkr4dvQCB/4sBEMGPGI2L6iqFh1KDuYlSkHclOgg4rAJsf74Inf7
      G+c9sYK1nuNs35JGirrytLUj6QXUTYPFEUpFEoYoLQl1xK3rj4jihDev32Q2nYEQ7O7scevW
      HZqmZW/vgDdev8FLn7rGg505q0s9krDDChwLTRxjc5WUTOeG7b2KadEgJWwf5DzYyWkMjHoh
      j4qEt2Y/ngOcfq8Q784YfZTPzdqYqV1jwDaubvDWEEbRxysEOhnceM5lM8DzqOxj3HEFUCBE
      R4b0Xo7gvYeDW9QvbwPZz/4HvJc5yfl0wC+f1Vw/lNypNnjh3DXWohylJPO64v7BmHv7M7TR
      vLTheHZ1hT98a5PCKDb7il4guXnUMmvg6zvr7A1CPr3ygHTgONoF1SiGccKjg0OsMmRJgmkd
      +Alf+I1PgdX0+gGXriyDFVS2ZZT1+cbXXufTn32Kg8PLZH1H3Wi293Oa1iGFQKkFHYmU9HvB
      IsNiWVmTWOcIFOhIE+mEYu65dT9np+7Snh82+I/TE8cYgdOfOf3cR7FjysyjOua6+xRPBd/E
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Où se produisent les accidents routiers dans votre département ?' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Selection du département' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Vue récapitulative' width='192'>
      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
      Aezjnsb/D4DnfN6KoJ4pAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
  <external>
    <shapes>
      <shape name='vehicule/Tram_1.png'>
        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
        AAAAAAAApf8HILIhnnZ7rEUAAAAASUVORK5CYII=
      </shape>
      <shape name='vehicule/bus.png'>
        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
        ROintyrjN79GtYB1OvlPkpO3aEU7QsOO9qi1wH/R4/aoKtqeSPUlBr8i0RW35Pz9hIrLPZf8
        K+iNic+HVsxLCw1qO7w15zcfY/C4ZVl2IgwRlOe2xOesgLWVMCTOBYT5Aw4hjEF/E2MWrGJZ
        QXhzPXbfnEFdLE7L+c0Wwtv9ZZxM/hx1W1l4G3FTB7bRqKR1A/bLJwv87gbK3Q38VYFlbmJh
        G9ehie88TXht7EPAniXyH3mxutzvTJgU9VDCibqC8Kh5GeEqNT8N67b1ecLszPNNEd6byjpI
        XiQEtiK3C8cB/0Z+lf8q4NR5n19LuEUc21ciGraRhV0J9iN0QcibEfwaQuB4PuM7E4RRTNNG
        rZ0vua8h3P5fDXxr+39vJjzpk3J9lvyr5BbCAZrWBrKSMBJA0fG/Bg1xo+G7kmL751HCgI6D
        mlAOJ8ygVLS2986hrc0Y8Aq+0EpC94u8p3oQqvffA24nvOawO6HWeDxhlqAiriPcNqp9RxNu
        vYueB+uB7xDekNht++/z3o6Y7ybCcDJSo36LdtpWNjJ4yF615x9oZ19PEyZelRo3QfHbhTop
        ObyN2reCcMs37H19YVsrpPG0nOFOxfT37a2KchxFtQlyi6bLsflFLVhFeFrX9AH8NfKfTqld
        JzGcoPUN2u+grTG2C/BNmjl4Z1g47pW643DCS89N7OtZwvj+1qwUxTmEYUqqHsAPA6e0XmqV
        tYJQA64zpv79wNtbLre0wCrgi5Sb/Wc94VWK5IgB6rajCDXraYrv67sIsycV7dKikqyuVrMn
        oQPgKYTbiIPZMcbRBkJt6hZCr+W1LBwoUP2xCngX8A7Cfv4pwsVnhjBawgOEnunfAr4fqYxS
        KROE14i6OgqFJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
        JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
        JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
        JEmSJEmSJEmSJEmSJI27/wfsu8cXpSksUgAAAABJRU5ErkJggg==
      </shape>
      <shape name='vehicule/car.png'>
        iVBORw0KGgoAAAANSUhEUgAAASwAAAEsCAYAAAB5fY51AAAACXBIWXMAAA7DAAAOwwHHb6hk
        AAAaLUlEQVR4nO3de5zld13f8dfM7M5ekl2SbGJuhGASCZCkCCSGBCQBgxUMqBVQwUcrWgwi
        VbBISwu1ilqotiAVEbANEqlKfABVrlUJpBhDIWLCJSQhZHPZzWZ3M3vJ3mZn9pz+8T6n85vf
        OXNuc26z83o+Ht/HzM6cOee3v/M739/38vl+viBJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
        kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
        kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
        kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJrU2M+gC0
        bBPAmlqZAiZrP5tc4nuAClCtlWbfzxdKZUj/D6ktK6yVYQrYApxa+3pa4fstwCnAycAGYD0w
        DawrfK1/P00qpKPAXK0cLX2dA/YBe4AZYDewC3i09rVeZrAy05BZYY2HjaQCOp1URmcAFwDn
        A+cBTyQV0WSTMsHg3sdiy6tc9gPfAu4E7gK2AtuAHcBO0jqT+soKa3gmSAvoZOAkUgk9HXga
        cC6wuVA2kMpopagCh4G9tbKHVGJfqZXtpIV2ZFQHqOODFdbgTJJxpScBzwQuYaHV9ARgE6vj
        /M8C3wa+CdwG/F3t6yx2KdWl1fCBGZYp0mp6KvAM4FnApaSrp8UeIy2vW4CbgS+RcTOpJSus
        3m0mFdRTgCuAK4EzSXfvBMbn3B6j+RhUfUZwDbC29rU4kzgMVTIW9hBwE/AJ4OvAw9j6UhPj
        8qFaCaZJN+5i4BpSQT2ZDJAPY7ypPvg9XyqHWZi1e5TM6s2wMMN3gFRa9VIpfK2Symq69nU9
        mQA4gVS8p5NK+Mza95tqjyuWfl5DR0jX8VbgL0nL6wAO4KvGCqu1STIofiXwbOAqhlNB1Qex
        v0NaHztIq2NnrTwMPFIrM7XHD8NG8v8/h7QuzyMTBueSsbmz6d+5qQL3AZ8FbgS+gK2uVc8K
        q9EWUkldBfwI8N3kg7qmz69Tj4d6pFDuIi2MO4F7SYtjjoXW1LAqpm7UW2jTpBX2vWT28xLg
        8aRi27SM568CB4GvAu8nXcdty3g+rWBWWBksP410714EPJ+0Fh5H/85PlcyK7SNT/LeSD+Dd
        LHTnZkgFdrzYAHwXaXVdQbrRTyY3hBPp7dweIZX5x4EPAw9yfJ0ztbGaK6y1ZCbvpaSSurD2
        s346RlpMNwFfBu4gH7i5Pr/OSjABnEVaX88GriazqdM9Pt/DwF8B15MbgHTcWU8qqbcB97Cw
        Vq7ap1IhA9+fBn6FxGCtpADQYZokIR8vA94LfI1U8N2e7zkyvvVKEpQrrWjrSOvpl4DPk7Gi
        flZSx2rP+SngF8ks4nLGbFajNWS860eBj5DJhqN09z4cBP4v8HNkVnM19x60wtSXwbwA+GPg
        AfrfkpolH6y3kzGafncnV6spMtb188D/IUGm9QmHTm8gXyI3jy1YcWnMnQ+8gQxqd9vF6KTs
        Az4GvJzEK2mwLgLeSmZQu3k/K8D9wJtI600aG5vIwPmHyJR3t92JTu7aW4F3kA/QxqH8r1Q3
        SWYcX00mMA7SeYt5jrSEf5usSnBMUSOzGXgxmS3aS/9bU3MkHuq3yNiU3YvR2wK8hASU7qHz
        iusYqbjeQSquXmcnpa5tILNLf0t34xvdlPuAN5M4Io2fKTJG+Um6H5/cRWYmnzT0o9aqchoZ
        jL2d/nf7iuXPa69li2r8rSMrEm6mu2uiQlrlHyChLr7X6psnAK8jwZdHGFxFVS9bSWS2Vo7v
        IoPz3b7Xx8jqg/eRoNZ1wz5wHR8myHjFG4BvMLiu31LlDrIOTivDCcAHWd57/gjwhySswsH5
        MTTKZvA6MttWLyeU/v0s4GdIEOAoVIEvkmDGmREdgzr3C8C76M9g+ixwA/BHpFVvlogxsZwK
        a5IshTiRDILXd2zZSHIp1Xd0OZXs6lLPV76pVqZZ2JpqqvB9/etGRn+Xq5CL9ldJojmNp2ly
        c7msj89ZIfnE/hr4PdLinu3j82tITgJeQWKevkjWgH2H5Gzaz/C7boMuh8hs4VQ/Tp4G4iKS
        J2wQ73+FdBU/QMa4DIcYoW5bWD8A/AZJaLea7CdrEf/XqA9ETV1KkvydNODXOVh7nY+y9A5A
        VRb2eZytfS1+P0uSMx4e8LEelzqtsCaAa8lMyhld/N3xokouUC+y8bSGDE0MK1V1faa61WPa
        laPkRriPhFfUvy+WvWT8dH/h94/Vvl+V3dNOK54zgL8nqXBXW2UljdIsGZY4RFp4B2vf7yE5
        wXaQLuu2WpkpPOYQx1k+/E7S/k4Br8UpfmkU1tVKJ7m+6sGw20hs2XayAPxussTsXpKvbcXq
        pLV0Hlm3dcGAj0VSf1VL31dJC+zbtXIP8K3a9/eyAmbCO2lhfT/ZiEHSyjLR5PvTauWK2r8P
        k7GxPSR991dIaqYHyMzrHrIaYCy0a2GtITNjLxrCsUgaD/UsuveRkKV/JGPYd5NxsVlGFEzb
        rsL6PlJhnTGEY5E03h4jy+S+CNxCUlIPdcu1dhXWrwNvYfQR55LGR5V0JfeTbuSnyRKmb5FZ
        y4FpVWGtJVHsFw7yACSteFVSed1LdjD6S7K93Qx9DqtoVWE9H/gMbq4gqTvzZLzrcyQb8M0s
        vTKgK0tVWNMkI+OrWjxGklqpksrrHpJE4CMsc8xrqcroXLLF0jnLeXJJqqm3um4E/pTsgtS1
        pTIQ/Bjwz3s7LklqMEniv64CXkjCJu6hyxivZrN/G0n6GEnqtwmyauZPSTexqxU0zSqs760V
        SRqUSdIw+gTw43Q4Vt5sac6LSJbQ40GVROUeJDmK9pMV7tvJsoMTgLPIVl6nksmG9bWfG3um
        laBKulX7yfZlO1hY/Pwwuc43k1TjZ5Br/SzgdOBx5Hof1cTaFAmbeh/5vH2MNmEQ5QprE9nv
        b6XPDFbIWqjPkp2CbyNv3sEWf7OWpHS+EHgeCeu4HDNManztIZNjf0uu9XvofMlMfTzpB8m1
        fh6j+9xvAd5PMlJ8gNa5xv6/KeDXGOx+f4MsFTIL8bvA1eSu0sni7mYmSI7680mm0b9mONuL
        WSztymFyPb6CbG223G3J1pCW1pWkpfPICP9ve4F/2+mBX0oiU0f9hnRbjpEm8LuB72EwXblT
        gJ8iG7jOjsH/2bL6yixZ/vLT5HochGng2cCfkcqj2x21+1H2k2Gplq29E0l8xKjflG7LPPDH
        ZLeUYTRnTyM76Gwb0v/PYqkCD5HrblAVVdlaUmn8HWkQDPP/WiFrEpumtKp/yF9G9mFbSbve
        3kUyoX6uzePWA5fUyulk8PFsUvkcJIOT28hg5QPAl8jgZStbgPeQ2Y1eu51SJz5OhiUebPO4
        J5G9PJ9BAr7PItf66STf1Q4yjvsQWbD89yTvVaslM+vIRsb/joxvD0sV+BSJBW3YE3QtmVoc
        9V2k03KM9OGf0eI/fBLwXOC3SAX0CJklbNXErc+03E12EP4JUssv1XLbDLydXAyjPieW468c
        BP6ApVtVE6SSeg35/D5I5+Os82T28Css7IK1YYnXmSafhe0Mt4s4C/yHZgf0dFLzjvoN6qQc
        Jf3rxy9xcteRWY9PkDd8OSd4ntyJXk9aY80qrvXAz5MNN0fR37ccn2WGDD43q0QmSAv/jeTm
        2o8u2wwZWrmQpXsM1wBf79PrdVoeJLOXi1xHWh+jfpPalVmyA2+z7BGTZBzr4wxmUPwb5E7W
        rMs8QaaHd4/BObKs/HIAeClL3yCvI9fjIF57L/BfWXrDme8hA//DOhfHasezaAnh/xjiAfRa
        KuQOsLnJSTyB3G12MbhWToVUhB+vvWnNvJKVOctqGZ8yC/wKzVs5Z5LexeEBH8M8qRCvYumV
        MMOcdNoDPKV4AF8Y4ov3Wj5P81r/cWTw+8CQjqNC0sNeQeMdcC3wVozXsvRW5oDrSSuqaAL4
        JyQwdFjDDhUyOP8TNAZOT5AQn2HenN9NoWd1z4jfqHblYeDJNDqDZDYc9rRrlfStf4jGSmsT
        K6PFahm/8jdkRq/s2WQsdRTHtB94M43X+QQJMh9WTOKdFMIcdo3oZHRS9gLX0uhUkslwVAPd
        FTJmdVWTY9tMkvOP+txZVk7ZSvOb8gVkI9RRTug8RsKHyjYCHx7SMcyT0CtgfKflKyQFRXmQ
        fR0ZfO+2dj9C3vzy3WoHienaQ/cXxm0kvqvsx8kbPepzaFkZ5d/TmJvuLLrvBs6TBsjtZKhn
        vvC7e8nQygN0P2zxKNmftNzSuox8boZxjv6k/vqDHsTrtewEnlM6QRNkluRQh89RqZ3QDwI/
        CVwEvKD0mOuBJ9R+/mYydTvfxfN/msR9Fa1juGMOlpVbttO4Df0GMjbb6fVzjESH/2tSsZxE
        ItWLFdOHyM3/YjJB9FckTKjT17iDxgmnaeAPu3iO5ZRvk0q84w/nsMvv0Thb8lQ6b7kcIRXV
        RaXneG7pcdez+O52Aom9urfD15knAaTlu8/V5M406vNoGd9yBPhXNHoFnd+Ut5Pt+E4sPUez
        CqtoDfBiEqbQaR3wP2kchH8iwwnp2U9teOjgEF6s27KDZEoo2kAql07+fh74bzS+idC+woJM
        515DxtA6eb0ZGgPc1pGMiqM+l5bxLV8mQaBFm0kEeid/XyE3y2YBpu0qrLoXk89bJ6+3m0w2
        lf0nBt/wmQdeO0lCAsZJlew2fX/p55cDP9Lhc0yRLuAPsnTe+lbOB/4NCZvoxMnAL7P47jML
        /He6zFmtVaMK/AVphdfVQwYu7vA5JoBXkzV33WYpmSC9j98maWo6sYVc5+Wez0fJEM4gTVFL
        p/xFRn+nKZbDZNC6aB29rXfcRS6AonYtrHNJUrRuX2s3qVSLTiZ9/1GfU8v4lT1k0LroJLLc
        ptvnOkIqrWJF0q6FdTEJEO12/OkI8MOl51pP9h4c9Dn71CSZ6RonMyRLaNEzge9r83dzpGla
        XNV+Kukavqrws2YxJXXfTe56VxZ+dpTMUNxKTtpSTiGBdkX7STbIVn+n1el2MpBcdBXtN2V4
        mIyx3s/CdTVNFkpfx8Ks+jSLr+21LLTCnkVm4J9SeMwc8BYyu9jKNPByFi9TO0KyKwzahZAP
        2TiNY93Y5EB/ldZ95AoJIl0L/CgLb2a9zJCZkZeRAL3i77aT7t/VTX53lAz+n1x73nb99C/T
        2I28FqPfLY3lbSyuUKZIxs9Wf1MBfodUFs8jIQrFFtKjZJnaG4GvlX63i6QffimpLIu/O0Ay
        m0wD/5T2UezfoTHI9TIGH8rzCGRK/74xeAOrpEL4GRrd1MF/pB4CMUGarDOlN2WW1hVOeVZm
        joxBbaw97yTJvdWqCb2LxlCMzYw27axl/EqFxuGDs4F/aPM3W1k8ufNCsoSmUnpcu9cuPuYo
        8JssLAlaT/vJrQqZlCo6DbhlwOdte/3F/suAX6ibA7q0dCLOpH2e+Rto9Hx6T5szC/w+jUGr
        15JuXqs38q1NjuUzIz6vlvEqu2hsiV9D65Z4hQyQl4c0nkPvDY450horhyo8jfZL3t5b+ptJ
        Op/F77U8UO/Tfoj2GQ2H4SCpEIqeSeuZvirpypXdRFa+7+3hOG4k0cdzpZ//I62zkU7QOJAK
        hTuDRK6h8uzxRbTO+DvPwmRQ0S0k9VG3qiQDyu+TBkHRVrLGuJUnsdD7gFSoj/RwHN2Yr1dY
        3yADy+WTMWzNKqyz2vzNDEn1WlYlffNewhqqNN8SbBtZxtPK2U1+9nAPx6Dj104aK6x21/lh
        kta4rEJjLFenTqH5tmCHaq/Vqj7YTGPa5EFf50fr06DzwDvJoHRXW0f32QGytrHoLFpvMDFD
        sqY+scnvfpHeclE/H/iXNG8ZtWuxNauwtvVwDDp+PUJjhdXsuinaQ2bnytbQfNy3nQkS+vA6
        msdibiQV1lKfvU21UmxVDbon8WAxbmM3mSl4L405eYZlD7mT1E3SPOVG0Xk09qfret0E9UxS
        gTe7w7RrsW0iEfbFi2AnuSm4YYUgkeXdtrDOId23ZnrpRUC6oO+g+XU+SeuGQrMW1qArrLuK
        H6Aq8BESIf4CRrNV++7Sv9eSYLpWJ26KpRPo92qC3ivtSdJEL1ZYB8iAarOlQlp99tBYYbXb
        wmuSwXwme72JbqDxc9eww00fVYBvl0/AIRKTtHWAL9xKsztFp1tvj4sqmWUsWkPvd0Edf9bS
        eBOeH8WBLMMcjZNS/W44FB2h1CWsu51E0l5P74N5vSo3MedYCCNYqpW1k2z7dbjJ766mtzG5
        /cD/pvl41SU0xtAUVWm805zIytrzUYO1ibSWiq2sR5d4bN128pksmyLhNp2uPyw6SrqZzT47
        l9K6p3Woyd8Nsr44QItIhjUk+HLY2Q5vprEr9sY2x3A/mWJt5jX0lsb1syw9WN8uA0Ozk3rd
        AM+ZZeWVj9J4A3tnm7/ZRVIfNfNzPRxDPZdbsxvpFFnS1upz9zWy7rboJwd4zr4DPH6p2nMe
        +CRZtvMZFj70g3YyWf9X9PU2r302tTVGTdxOb/3q22g+c7KJ1q0raB5i0XTbba1aF9IYlFxf
        JL+UzTQGVdfd3sMxVEk4U7Ou6EaSS77V2HF9t/SickqoftoN7Gg3iHcr8BIy/fkXZGxrkOlS
        TqEx1cUdtB7HmiJpZMrOIXuandHDcVxHVr+XPY3MIC6lSgL5yp7VwzHo+HUBjRMw36L1tvFr
        SLhNuRJ5Bs1XerQzSZIHvorGyvMcslNPK//A4rHa9WQLsEG5kS7H+TaQEIPLSQ6et5N90m4i
        NfwDZOxnOV3II8A/K73uRO25W/3dXSxuxZxPupfL2VFnF/DTLO7Dv6fNcz5G46YZJ5BxtlF3
        QyzjVa5msfNIpbXU4yvk5l0Mf7icrL4ofuZaXZ8VGtcS7iWxWMUsD+/q4PhfUjr+s0jvYhDn
        6l6SbbgvNrJQIz+XBJ++icRGfZbk99lOBhUPkIH0VpXau5q8Rrv+9ByJJ4Hcvcpr9+aA95P9
        zcqV3yGSGuM/1o6z+LvdpAKdIksn2q1Gv4fGQf7LGK9sGJbxKK9nsWmyVKbV31TIFvZTZJC9
        nJHhIOlVvI2sLyz+bh8JW3otjWPTM2S8d4p0BdtlIN1N4/jVJQxmQ5sjwL9giLPsk6Sb93SS
        jvU1ZHX4DWRt1P0sXtz8DRpnJq6mfX70fcAPkJ1Bij8/StJq1GdEf6j0+z+r/W6i9rtyWuSd
        wM+S/EHtWo/vb/L//2XGN2++ZXTlkzR2C8sbpDQr95Gx5XLyvTmyV2B9EP3FLJ5w+nDpdco3
        7sNk8P5TbV6/QmYry0HZPzuAczQDvIExCLieqB3EOtJCO4Xsy3Y5qZzKMxfraKyImp3IQyxu
        Eh8hsy/F+JBWGUfryxUeKj1mlvYZI/bROFa1mXRN3T3HUi4zNF4vJ5IuXqu/q5Drupwi5o0s
        nmFvlXF0gmR52Fp4nkrtedoNoxwmO/MUbSCpl5Z7To6Rz9GXSULCp1FqvIyq5qqSVkd9EO0Q
        rWfzZsmOHVfSOEBYN8HiimmOdEt/neZxJksd16dJq+idpKsLnS3x+TzwzdLPnkwypbaabdHq
        dBIZB7q18LNDpCX/VFpf58Ub+kEyjPJuGrMuLKVKJodeRbqhj68971KvWfRVGhdhX8rScWD1
        z/oRFmK3jpDhlW218hAJB9pOejg7aL5AfPRNrS58lORnv7qDx1aAPycpX5tlXWilCnys9vUG
        FqfQWMoxEoBXzjTxcnIRrLRofQ3HDwP/mYUA5QqJ83slqQA6udH9ERli6bSyqquQCbPXk0yn
        5XCiZh4jFWN5tu6FJCTpKKloHmJxRbSTDOnsrn2dYWHopSsrqcLaTQYcP0f7SmSS9NNfTSqd
        dlHE5b+9hmR66LSyei/J3V40RcbHPo8tLDV3lMZr41GSi+0GOtu16afIjPZ76C732xoWNg9u
        t46x7sMkvKnZz99HWkblZWmr2hqSY32OzvrER4AvkabvRWRM6arSY64nff9zSevtelI5djru
        dDsLXUepH9aTiaJOr8Gj5Dp/NZncOpm03spjWOvI7s3XkkpmbxevcQejTT21Yp1JdvboJsaq
        Qpqmf0PuEMXffbX2s6/R+W679bKbJPWX+u08MlbUzYTNMZKf6gtktq94Y7+TDHXcTfsJpPJn
        5yDZE9SeQo8uIDMJy52VWE45ROJDRpGGR6vD+SS2b5TX+WNk5YeW6WIyKzeKkIGDwC/Q2ayK
        tBxX0DoCfpBlH/BLmBqpLybI2qVb6XxMqx/lYRLJb2WlYfl+EoawnKVm3ZQKGch/HaPLPnzc
        OpPsHziMaPI7yUaT9uU1bGeSBcDDuDnfSTZqdbhjQKZJdoW7Gcxd6DEyzdzp9K80CGtIq2cQ
        XcQK6QL+Ae33UVAfTJCdc95C7hDLbXFVSIDbR8jdZqnkadIwTZEZxF8jWQz6cZ3vJK23Kxhs
        mmM1MUFmV95EpoX3kWncTgbnj5HZv/uBD5IA0l533pEG7SkkyPQWOsuEUi/z5DrfSoKen8cK
        uc5Xw1jMueQNeQ7JGrGFLEM4iQTWPcrCsoFvklit2+h+qYM0Sk8kCf4uI+Ndp5Fr/WRSOdWv
        850kCPRmcp2vqM0vVkOFVbe2VNaQu9FcodQD6qSVag1pLbW6zl0+I0mSJEmSJEmSJEmSJEmS
        JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
        JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
        JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
        JEmSJOm49f8ARvOrsk9eFvMAAAAASUVORK5CYII=
      </shape>
      <shape name='vehicule/cycling.png'>
        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
        YII=
      </shape>
      <shape name='vehicule/moto.png'>
        iVBORw0KGgoAAAANSUhEUgAAASwAAAEsCAYAAAB5fY51AAAACXBIWXMAAA8rAAAPKwEMains
        AAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAAIABJREFUeJzt3XmcXGWd
        7/FPVS/ZOoEEAgmQBAhhTUDZAiquLAIKijPOXJc7V2fGq6MzXnXU68bLQUdcrjOic13GGcYZ
        5Q7goIAIzBVxgSgqCES2EAhLEgIJ2TrppJd01fzxrbI7ne6uqvOcqrPU9/16Pa80IV116pw6
        z3mW3/N7wMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzM
        zMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzM
        zMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMbAKF
        pA8gC4pJH4CZMRX4OLAk6QMxM6vlbGALsAI4PNlDMTOb3PVAGSgBDwJLkz2c9HK/2aw+HcA8
        YDGwHFgE7Ac8AtwLrALWoIqnEScAvwW6R/3dLcBbgc1hh2xm7aIIzEQV058A/4oqlh2oJVQe
        VQaBh4HPAcehMal6dAFXjPN6/cB7cYPCzGroBF4KfBb4ObCTvSuTWmU7cDVwYeW1JnMMsGGC
        13m68v/NzPZxBPBu4C6gj31bPY2UErAbDaJfzPgtrgKqFCd6nz3AR2L/lGaWadOAt6Au3SDR
        K6mJylbU4jqRvVtciyvvOdnv/gJ1G83MKAAfBnYRf0U1tsX1LPA3wJzKe78PGKrxe0PAYc35
        6GaWJUXgUtT9a2ZlNbbiWo1adE/W+Tsvb87HN7OsmAF8gua3rCaqtPqA4Tr//VuadA4yqdYs
        hlkenQx8lPrDD+JUAKY38O8b+be557WE1o5KJFNZRbEt6QNIE1dY1o42ou5gFmxI+gDSxBWW
        taMtwMqkD6IOe9DSH6twhWXtaCsK6iwnfSA1PIC7hHtxhWXtqARci+Kc0qoEfJ90H2PLucKy
        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
        z3+qhe9p6XMSithuZUrk7ej+WF0pzzKy63k/eoBPR4Pnc1BL6mi0hvIQWjcjOYAmt66kReOW
        Xahb1ezWymQ19CDqV+9Eg3W7GdmoIYljKqOp6BMDzqvly3kkl4qohMZm+1GF1Yvuld3o3knq
        PtmGkl+2fGPZqWjQelvEA89buQc4OeiMWh69nPBUNHkpW1GsW2KB4x1ov7HQ/FlZLiUUU1bv
        RgbWfo4hvjWHWS3bUX6ruGK3IiugGIqHSf6ktLqqI73eAAAC60lEQVTsRknYDgk+i5Z3i4Af
        oO5Y0t/bVpcHUMBpqqL2T0aDjO1wQUoogv39xD+tbPl1MHA5am20Q2trEMWlRdktuyX2R8tI
        mhXflJbyBHAODgq1xnWiBJkbSf573MzSj1awZOKBfhEahE76pMVdBlDUb7vt3mvxOwb4D/L3
        cK/unBWyvVfLFVCU96fR6visN38HUAX8BjLyxLBM2A9l5HiY7Oc/K6EF2p9ED/RUjVfVq4Cm
        dW8lnnzorS7DKKH+h1A2B7NmOBL4MgqGztrDvRq1/kOUDicXulET8Ray0wTeglJeeAbQWqGA
        UrZ8DX33kv7+11MG0ETbuegez53pwCtR3qDnSd/TZBD4LZrJWUo282tbtnWhhIBfQMtr0naP
        VGfIrwZeQT73VdzHdJR76jMo6DKpJT5lNHawAfg+2rnkUDLa/7Zc6UDByH+BdmPfRDz7K0Qt
        vehe/Qy6d6c176On20wUePpNlBunVRelH81mfBStVHeIgqVVF3AKysrwG/TdbcU9MgysAf4J
        DekkPuGUppZEEV2Yhajb+BLUND4UZV4ICekfQJXharSN1go069dLWGpcs1YqoGGKOcCLUZds
        GbpnDkHjSFHv6WEUG7YeLdi+A7XsnmIkwWXi0lRhjdWFUsVU08YchdJgLK783UzUtexCld0g
        qoA2o0HLLZWfN6ILsKHy37ta+SHMmqiIgrWrZRHqRh6NKrWZKEdWN3rgVzM47GIk7/0aRlI2
        PV/5uy3ofkqdNFdY9SgykthvFxqPMrMRBZQdoRvdH/2kpLVkZmZmZmZmZmZmZmZmZmZmZmZm
        ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
        ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
        ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmlhv/BXpEBgTmIKYmAAAAAElFTkSuQmCC
      </shape>
      <shape name='vehicule/other.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAABYlAAAWJQFJUiTw
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAiBpVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1T3W6bMBR+Fcu92aQFY8Dm
        R2UV2KD1gq1KI3W3BNwGJWBknIXm1XqxR9orzGQhqqYqti987O873zn2Obd3Y19WW6HBWrw0
        XQz/vP2GoKlj+EQKu+iZ2DTfjko8Hr+vquO2Cmt49xXcjtHY9q3QJRjbXTdEYwzLWq5FZPbT
        MYLgBNHbGCbTBfhZPAAmlQDEcheVjTGg1MIeoRR/AY6NHWSbRRfYiwiNHB+cBzRqqn6Oljw/
        axkrhhut+wihw+FgHVxLqheEwzCcfDjOwiAWw2uny3HRDTezBy6GSjW9bmQHJrtcy72OIZxT
        aPuiuDjuBuuUkFXJFo1lj7Blo7ZFM3rQS/F8HT2sXnuBlmKQe1UJA795J3WdOgFNNNEP1ZhP
        KXdcVvtWdPqex9DcWHVTR15COeaEJmZyjnGQppQ5OCcky1xiJ7OPj7h5mtqcucTQCcaZGwR+
        kOVZlnLGcp9duPfdoMuuEjO3OXFDP2DcvsqNmBKllmol5W6ugIeN1HLYyB6wRwo+PTVdLQ/D
        5+l7zpEK1fwSda5kC07vGzUf6KcsYUFCMupxkrkYJ05gB9j1mOeHnk2N/j9u/S7v/X4K3GM5
        8ZiNuR/wDOPUJzjLEx4k2MkY9iAykaD/KmU+MuU3bS91b4xL54jOtIsyffEXBVYGYV78fTkA
        AAEUSURBVFiFzdi7DsMgDAVQU/WXk6GdO/WP24EuNMoDsMHX4CshkSHWkUlIRIgxkufcZgO4
        uAfeEUVCCP/pg4gCEb1a7q8+ZjFG9djhYhrPVmCxNgi4xzUjTYEFXBPSDMjgxEgToBAnQsKB
        jTgWCQV24qpIGFCJKyIhQBAui1QDwbgLUgVMhdC4A7IbaIzbkF3AQTgW6QFXRXrBFZGecFnk
        +Y/6Q/PzPVxllnihed1bpS/JDOQFx20zI5FZnGSjHoEs4qSfOkvkSsQ0iQMaIldKUQMNkBsO
        BgQiDzgoEIC84OBABTKLMwF2IIs4M2ADsoozBQqQC4czB1aQItwo4BkpxnFAyAFmyrswVyXs
        OuAy7s+o3QN/HTxebpAd/IAAAAAASUVORK5CYII=
      </shape>
      <shape name='vehicule/tractor.png'>
        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
        RK5CYII=
      </shape>
      <shape name='vehicule/train-256.png'>
        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
        YII=
      </shape>
      <shape name='vehicule/truck.png'>
        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
        TkSuQmCC
      </shape>
    </shapes>
  </external>
</workbook>
