<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20183.19.0212.1312                               -->
<workbook original-version='18.1' source-build='2018.3.4 (20183.19.0212.1312)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <GroupAction />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='viz_15524886847780' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <style-rule element='all'>
      <format attr='font-family' value='Tableau Book' />
      <format attr='color' value='#000000' />
    </style-rule>
  </style>
  <datasources>
    <datasource caption='data' inline='true' name='federated.1aqyggh1f33tgz1gorcm00pl3ry9' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data' name='textscan.0mw85cs1iv79fb10ojll11gugkd0'>
            <connection class='textscan' directory='C:/Users/theos/Documents/ETUDES/EDHEC_MSc/data_visualization/project_data_viz' filename='data.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='estimation population 2017' name='excel-direct.17ibph60ma8axy1cz2dla08uli08'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/theos/Documents/ETUDES/EDHEC_MSc/data_visualization/project_data_viz/estimation population 2017.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[data.csv].[departement]' />
              <expression op='[2017].[departement]' />
            </expression>
          </clause>
          <relation connection='textscan.0mw85cs1iv79fb10ojll11gugkd0' name='data.csv' table='[data#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator='&#9;'>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='integer' name='Num_Acc' ordinal='1' />
              <column datatype='integer' name='grav' ordinal='2' />
              <column datatype='integer' name='catv' ordinal='3' />
              <column datatype='string' name='lum' ordinal='4' />
              <column datatype='integer' name='atm' ordinal='5' />
              <column datatype='string' name='col' ordinal='6' />
              <column datatype='real' name='lat' ordinal='7' />
              <column datatype='real' name='long' ordinal='8' />
              <column datatype='integer' name='annee' ordinal='9' />
              <column datatype='date' name='date' ordinal='10' />
              <column datatype='string' name='plan' ordinal='11' />
              <column datatype='string' name='departement' ordinal='12' />
            </columns>
          </relation>
          <relation connection='excel-direct.17ibph60ma8axy1cz2dla08uli08' name='2017' table='[&apos;2017$&apos;]' type='table'>
            <columns gridOrigin='A1:C105:no:A1:C105:0' header='yes' outcome='2'>
              <column datatype='string' name='code' ordinal='0' />
              <column datatype='string' name='departement' ordinal='1' />
              <column datatype='integer' name='population' ordinal='2' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[F1]' value='[data.csv].[F1]' />
          <map key='[Num_Acc]' value='[data.csv].[Num_Acc]' />
          <map key='[annee]' value='[data.csv].[annee]' />
          <map key='[atm]' value='[data.csv].[atm]' />
          <map key='[catv]' value='[data.csv].[catv]' />
          <map key='[code]' value='[2017].[code]' />
          <map key='[col]' value='[data.csv].[col]' />
          <map key='[date]' value='[data.csv].[date]' />
          <map key='[departement (2017)]' value='[2017].[departement]' />
          <map key='[departement]' value='[data.csv].[departement]' />
          <map key='[grav]' value='[data.csv].[grav]' />
          <map key='[lat]' value='[data.csv].[lat]' />
          <map key='[long]' value='[data.csv].[long]' />
          <map key='[lum]' value='[data.csv].[lum]' />
          <map key='[plan]' value='[data.csv].[plan]' />
          <map key='[population]' value='[2017].[population]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;\\t&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Num_Acc</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Num_Acc]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>Num_Acc</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>grav</remote-name>
            <remote-type>20</remote-type>
            <local-name>[grav]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>grav</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>catv</remote-name>
            <remote-type>20</remote-type>
            <local-name>[catv]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>catv</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lum</remote-name>
            <remote-type>129</remote-type>
            <local-name>[lum]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>lum</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>atm</remote-name>
            <remote-type>20</remote-type>
            <local-name>[atm]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>atm</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>col</remote-name>
            <remote-type>129</remote-type>
            <local-name>[col]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>col</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lat]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>lat</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>long</remote-name>
            <remote-type>5</remote-type>
            <local-name>[long]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>long</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>annee</remote-name>
            <remote-type>20</remote-type>
            <local-name>[annee]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>annee</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>10</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>plan</remote-name>
            <remote-type>129</remote-type>
            <local-name>[plan]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>plan</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>departement</remote-name>
            <remote-type>129</remote-type>
            <local-name>[departement]</local-name>
            <parent-name>[data.csv]</parent-name>
            <remote-alias>departement</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[code]</local-name>
            <parent-name>[2017]</parent-name>
            <remote-alias>code</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>departement</remote-name>
            <remote-type>130</remote-type>
            <local-name>[departement (2017)]</local-name>
            <parent-name>[2017]</parent-name>
            <remote-alias>departement</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[2017]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[2017]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C105:no:A1:C105:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Nombre d&apos;accident pour 10 000 habitants' datatype='real' name='[Calculation_164381428197863424]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([F1])/AVG([population])*10000' />
      </column>
      <column caption='Rank' datatype='integer' name='[Calculation_164381428200767489]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Nombre de tués pour 1 000 000 habitants' datatype='real' name='[Calculation_164381428204236802]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='count(IF([grav])=2 THEN [grav]END)/AVG([population])*1000000' />
      </column>
      <column caption='Nombre de blessé pour 10 000 habitants' datatype='real' name='[Calculation_164381428208967683]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='count(IF[grav]=3  OR  [grav]= 4 THEN [grav] END)/AVG([population])*10000' />
      </column>
      <column caption='Catégorie de véhicule (groupe)' datatype='string' name='[Catv (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[catv]' new-bin='true'>
          <bin default-name='false' value='&quot;Autobus &amp; Autocar&quot;'>
            <value>37</value>
            <value>38</value>
          </bin>
          <bin default-name='false' value='&quot;Autre Véhicule&quot;'>
            <value>3</value>
            <value>20</value>
            <value>35</value>
            <value>36</value>
            <value>99</value>
          </bin>
          <bin default-name='false' value='&quot;Moto ou scotter&quot;'>
            <value>2</value>
            <value>30</value>
            <value>31</value>
            <value>32</value>
            <value>33</value>
            <value>34</value>
          </bin>
          <bin default-name='false' value='&quot;Poid lourd&quot;'>
            <value>13</value>
            <value>14</value>
            <value>15</value>
          </bin>
          <bin default-name='false' value='&quot;Tracteur&quot;'>
            <value>16</value>
            <value>17</value>
            <value>21</value>
          </bin>
          <bin default-name='false' value='&quot;Train&quot;'>
            <value>39</value>
          </bin>
          <bin default-name='false' value='&quot;Tramway&quot;'>
            <value>40</value>
          </bin>
          <bin default-name='false' value='&quot;Voiture standard &amp; Véhicule utilitaire&quot;'>
            <value>7</value>
            <value>10</value>
          </bin>
          <bin default-name='false' value='&quot;Vélo&quot;'>
            <value>1</value>
          </bin>
        </calculation>
      </column>
      <column aggregation='Sum' caption='Numéro Accident' datatype='integer' name='[Num_Acc]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Annee' datatype='integer' name='[annee]' role='dimension' type='quantitative' />
      <column aggregation='Sum' caption='Condition atmosphérique' datatype='integer' name='[atm]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='%null%' value='*' />
          <alias key='1' value='Normale' />
          <alias key='2' value='Pluie légère' />
          <alias key='3' value='Pluie forte' />
          <alias key='4' value='Neige - grêle' />
          <alias key='5' value='Brouillard - fumée' />
          <alias key='6' value='Vent fort - tempête' />
          <alias key='7' value='Temps éblouissant' />
          <alias key='8' value='Temps couvert' />
          <alias key='9' value='Autre' />
        </aliases>
      </column>
      <column aggregation='Sum' caption='Catégorie de véhicule' datatype='integer' name='[catv]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='1' value='Vélo' />
          <alias key='2' value='Cyclomoteur &lt;50cm3' />
          <alias key='3' value='Voiturette' />
          <alias key='7' value='Voiture standard' />
          <alias key='10' value='Véhicule utilitaire' />
          <alias key='13' value='PL seul 3,5T &lt;PTCA &lt;= 7,5T' />
          <alias key='14' value='PL seul &gt; 7,5T' />
          <alias key='15' value='PL &gt; 3,5T + remorque' />
          <alias key='16' value='Tracteur routier seul' />
          <alias key='17' value='Tracteur routier + semi-remorque' />
          <alias key='20' value='Engin spécial' />
          <alias key='21' value='Tracteur agricole' />
          <alias key='30' value='Scooter &lt;50 cm3' />
          <alias key='31' value='Moto (entre 50 et 125 cm3)' />
          <alias key='32' value='Scooter (entre 50 et 125 cm3)' />
          <alias key='33' value='Moto &gt; 125 cm3' />
          <alias key='34' value='Scooter &gt; 125 cm3' />
          <alias key='35' value='Quad léger &lt;= 50 cm3' />
          <alias key='36' value='Quad lourd &gt; 50 cm3' />
          <alias key='37' value='Autobus' />
          <alias key='38' value='Autocar' />
          <alias key='39' value='Train' />
          <alias key='40' value='Tramway' />
          <alias key='99' value='Autre véhicule' />
        </aliases>
      </column>
      <column caption='Code' datatype='string' name='[code]' role='dimension' type='nominal' />
      <column caption='Type de collision' datatype='string' name='[col]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;1&quot;' value='Deux véhicules - frontale' />
          <alias key='&quot;2&quot;' value='Deux véhicules – par l’arrière' />
          <alias key='&quot;3&quot;' value='Deux véhicules – par le coté' />
          <alias key='&quot;4&quot;' value='Trois véhicules et plus – en chaîne' />
          <alias key='&quot;5&quot;' value='Trois véhicules et plus - collisions multiples' />
          <alias key='&quot;6&quot;' value='Autre collision' />
          <alias key='&quot;7&quot;' value='Sans collision' />
        </aliases>
      </column>
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Departement (2017)' datatype='string' name='[departement (2017)]' role='dimension' type='nominal' />
      <column caption='Département' datatype='string' name='[departement]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column aggregation='Sum' caption='Gravité' datatype='integer' name='[grav]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='1' value='Indemne' />
          <alias key='2' value='Tué' />
          <alias key='3' value='Blessé hospitalisé' />
          <alias key='4' value='Blessé léger' />
        </aliases>
      </column>
      <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Long' datatype='real' name='[long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Condition lumineuse' datatype='string' name='[lum]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;1&quot;' value='Plein jour' />
          <alias key='&quot;2&quot;' value='Crépuscule ou aube ' />
          <alias key='&quot;3&quot;' value='Nuit sans éclairage public ' />
          <alias key='&quot;4&quot;' value='Nuit avec éclairage public non allumé ' />
          <alias key='&quot;5&quot;' value='Nuit avec éclairage public allumé ' />
        </aliases>
      </column>
      <column caption='Plan de la route' datatype='string' name='[plan]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;0&quot;' value='Autre' />
          <alias key='&quot;1&quot;' value='Partie rectiligne' />
          <alias key='&quot;2&quot;' value='En courbe à gauche' />
          <alias key='&quot;3&quot;' value='En courbe à droite' />
          <alias key='&quot;4&quot;' value='En « S »' />
        </aliases>
      </column>
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column-instance column='[Num_Acc]' derivation='None' name='[none:Num_Acc:ok]' pivot='key' type='ordinal' />
      <column-instance column='[grav]' derivation='None' name='[none:grav:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Catégorie de véhicule (groupe))' hidden='true' name='[Action (Catégorie de véhicule (groupe))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Catv (group)]' />
        </groupfilter>
      </group>
      <group caption='Action (Catégorie de véhicule (groupe),Numéro Accident,Gravité)' hidden='true' name='[Action (Catégorie de véhicule (groupe),Numéro Accident,Gravité)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Catv (group)]' />
          <groupfilter function='level-members' level='[Num_Acc]' />
          <groupfilter function='level-members' level='[grav]' />
        </groupfilter>
      </group>
      <group caption='Action (Département)' hidden='true' name='[Action (Département)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[departement]' />
        </groupfilter>
      </group>
      <group name='[Département set]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='member' level='[departement]' member='&quot;Ille-Et-Vilaine&quot;' />
      </group>
      <group hidden='true' name='[Exclusions (Catégorie de véhicule (groupe),Gravité,Numéro Accident)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Catv (group)]' />
          <groupfilter function='level-members' level='[none:grav:ok]' />
          <groupfilter function='level-members' level='[none:Num_Acc:ok]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Région, Département'>
          <field>[departement]</field>
        </drill-path>
      </drill-paths>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/theos/Documents/ETUDES/EDHEC_MSc/data_visualization/project_data_viz/data.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='03/27/2019 04:28:32 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[F1]' value='[Extract].[F1]' />
            <map key='[Num_Acc]' value='[Extract].[Num_Acc]' />
            <map key='[annee]' value='[Extract].[annee]' />
            <map key='[atm]' value='[Extract].[atm]' />
            <map key='[catv]' value='[Extract].[catv]' />
            <map key='[code]' value='[Extract].[code]' />
            <map key='[col]' value='[Extract].[col]' />
            <map key='[date]' value='[Extract].[date]' />
            <map key='[departement (2017)]' value='[Extract].[departement]' />
            <map key='[departement]' value='[Extract].[departement1]' />
            <map key='[grav]' value='[Extract].[grav]' />
            <map key='[lat]' value='[Extract].[lat]' />
            <map key='[long]' value='[Extract].[long]' />
            <map key='[lum]' value='[Extract].[lum]' />
            <map key='[plan]' value='[Extract].[plan]' />
            <map key='[population]' value='[Extract].[population]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='2087170' timestamp-start='2019-03-27 16:28:32.022' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2087170</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Num_Acc</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Num_Acc]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Num_Acc</remote-alias>
              <ordinal>1</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>729266</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>grav</remote-name>
              <remote-type>20</remote-type>
              <local-name>[grav]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>grav</remote-alias>
              <ordinal>2</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>catv</remote-name>
              <remote-type>20</remote-type>
              <local-name>[catv]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>catv</remote-alias>
              <ordinal>3</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>24</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lum</remote-name>
              <remote-type>129</remote-type>
              <local-name>[lum]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>lum</remote-alias>
              <ordinal>4</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>atm</remote-name>
              <remote-type>20</remote-type>
              <local-name>[atm]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>atm</remote-alias>
              <ordinal>5</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>col</remote-name>
              <remote-type>129</remote-type>
              <local-name>[col]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>col</remote-alias>
              <ordinal>6</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lat</remote-name>
              <remote-type>5</remote-type>
              <local-name>[lat]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>lat</remote-alias>
              <ordinal>7</ordinal>
              <family>data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>251486</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>long</remote-name>
              <remote-type>5</remote-type>
              <local-name>[long]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>long</remote-alias>
              <ordinal>8</ordinal>
              <family>data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>358438</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>annee</remote-name>
              <remote-type>20</remote-type>
              <local-name>[annee]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>annee</remote-alias>
              <ordinal>9</ordinal>
              <family>data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>10</ordinal>
              <family>data.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>6985</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>plan</remote-name>
              <remote-type>129</remote-type>
              <local-name>[plan]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>plan</remote-alias>
              <ordinal>11</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>departement1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[departement]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>departement1</remote-alias>
              <ordinal>12</ordinal>
              <family>data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>97</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>code</remote-alias>
              <ordinal>13</ordinal>
              <family>2017</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>76</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>departement</remote-name>
              <remote-type>129</remote-type>
              <local-name>[departement (2017)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>departement</remote-alias>
              <ordinal>14</ordinal>
              <family>2017</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>76</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>15</ordinal>
              <family>2017</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>76</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.490476' group-percentage='0.0920635' measure-ordering='alphabetic' measure-percentage='0.41746' show-aliased-fields='true' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[Catv (group)]' palette='vehicule' type='shape'>
            <map to='asterisk'>
              <bucket>&quot;10&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;34&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Engin spécial&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Scooter &gt; 125 cm3&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;1&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;2 &amp; 30&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;2, 30, 31 and 1 more&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;30&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;40&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Autobus&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Quad léger &lt;= 50 cm3&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;13&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;13, 14, 15&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;35&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Autre Véhicule &amp; Tracteur&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Moto (entre 50 et 125 cm3)&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Tracteur agricole&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;15&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;17&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;37&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;PL &gt; 3,5T + remorque&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;PL &gt; 3,5T + remorque, PL seul 3,5T &lt;PTCA &lt;= 7,5T, PL seul &gt; 7,5T&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Tracteur routier seul&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;20&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;38&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;PL seul 3,5T &lt;PTCA &lt;= 7,5T&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;3&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;32&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Autre véhicule&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Cyclomoteur &lt;50cm3, Moto (entre 50 et 125 cm3), Moto &gt; 125 cm3&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Scooter (entre 50 et 125 cm3)&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Voiturette&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;21&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;39&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;PL seul &gt; 7,5T&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Tracteur agricole, Tracteur routier + semi-remorque, Tracteur routier seul&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;2&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;31&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;31, 32, 33 and 1 more&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;99&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Autocar&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Autre véhicule, Engin spécial, Quad lourd &gt; 50 cm3&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Autre véhicule, Engin spécial, Quad lourd &gt; 50 cm3 &amp; Voiturette&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Quad lourd &gt; 50 cm3&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;33&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;7&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Cyclomoteur &lt;50cm3&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Scooter &lt;50 cm3&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;14&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;16&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;36&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Moto &gt; 125 cm3&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Scooter&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Scooter (entre 50 et 125 cm3), Scooter &lt;50 cm3, Scooter &gt; 125 cm3&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Tracteur routier + semi-remorque&quot;</bucket>
            </map>
            <map to='vehicule/Tram_1.png'>
              <bucket>&quot;Tramway&quot;</bucket>
            </map>
            <map to='vehicule/bus.png'>
              <bucket>&quot;Autobus &amp; Autocar&quot;</bucket>
            </map>
            <map to='vehicule/car.png'>
              <bucket>&quot;Voiture standard &amp; Véhicule utilitaire&quot;</bucket>
            </map>
            <map to='vehicule/cycling.png'>
              <bucket>&quot;Vélo&quot;</bucket>
            </map>
            <map to='vehicule/moto.png'>
              <bucket>&quot;Moto ou scotter&quot;</bucket>
            </map>
            <map to='vehicule/moto.png'>
              <bucket>&quot;Moto ou scotter &lt;50 cm3&quot;</bucket>
            </map>
            <map to='vehicule/moto.png'>
              <bucket>&quot;Moto ou scotter &gt;50 cm3&quot;</bucket>
            </map>
            <map to='vehicule/other.png'>
              <bucket>&quot;Autre Véhicule&quot;</bucket>
            </map>
            <map to='vehicule/tractor.png'>
              <bucket>&quot;Tracteur&quot;</bucket>
            </map>
            <map to='vehicule/train-256.png'>
              <bucket>&quot;Train&quot;</bucket>
            </map>
            <map to='vehicule/truck.png'>
              <bucket>&quot;Poid lourd&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:grav:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>4</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>3</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;France&quot;' />
        <semantic-value key='[County].[Name]' value='%null%' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
    </datasource>
    <datasource caption='2017 (estimation population 2017)' inline='true' name='federated.09x3u9a1mowbb418g3po50e1c0x4' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='estimation population 2017' name='excel-direct.1am0x0h0af4tj117w1i390asg8gf'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/theos/Documents/ETUDES/EDHEC_MSc/data_visualization/project_data_viz/estimation population 2017.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1am0x0h0af4tj117w1i390asg8gf' name='2017' table='[&apos;2017$&apos;]' type='table'>
          <columns gridOrigin='A1:C105:no:A1:C105:0' header='yes' outcome='2'>
            <column datatype='string' name='code' ordinal='0' />
            <column datatype='string' name='departement' ordinal='1' />
            <column datatype='integer' name='population' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[code]</local-name>
            <parent-name>[2017]</parent-name>
            <remote-alias>code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>departement</remote-name>
            <remote-type>130</remote-type>
            <local-name>[departement]</local-name>
            <parent-name>[2017]</parent-name>
            <remote-alias>departement</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[2017]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[2017]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C105:no:A1:C105:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Code' datatype='string' name='[code]' role='dimension' type='nominal' />
      <column caption='Departement' datatype='string' name='[departement]' role='dimension' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/theos/Documents/ETUDES/EDHEC_MSc/data_visualization/project_data_viz/data_accidents_routiers.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='04/01/2019 10:21:45 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='104' timestamp-start='2019-04-01 10:21:45.383' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>code</remote-alias>
              <ordinal>0</ordinal>
              <family>2017</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>104</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>departement</remote-name>
              <remote-type>129</remote-type>
              <local-name>[departement]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>departement</remote-alias>
              <ordinal>1</ordinal>
              <family>2017</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>102</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>2</ordinal>
              <family>2017</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>104</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.5' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
    <mapsource inline='true' name='street' source-platform='win' version='18.1'>
      <connection api-key='pk.eyJ1IjoidGhlb3NpbWllciIsImEiOiJjanQyMjdtejcxYXpiM3lwaHF1aWZwOGNzIn0.gMOqwP_7pQ_FfDJ_2ruuAg' class='MapBox' description='Mapbox Streets' full-url='https://api.mapbox.com/v4/{L}/{Z}/{X}/{Y}{D}.png256?access_token=pk.eyJ1IjoidGhlb3NpbWllciIsImEiOiJjanQyMjdtejcxYXpiM3lwaHF1aWZwOGNzIn0.gMOqwP_7pQ_FfDJ_2ruuAg' inline='true' layer-separator=',' offline='' port='443' server='api.mapbox.com' service='https' tileset='US\normal' url-format='/v4/{L}/{Z}/{X}/{Y}{D}.png256?access_token=pk.eyJ1IjoidGhlb3NpbWllciIsImEiOiJjanQyMjdtejcxYXpiM3lwaHF1aWZwOGNzIn0.gMOqwP_7pQ_FfDJ_2ruuAg' username='' wait-tile-color='#dddddd' />
      <languages />
      <layers>
        <layer display-name='Streets' name='mapbox.streets' show-ui='true' type='features' />
      </layers>
      <properties />
      <map-styles>
        <map-style display-name='street' name='street' wait-tile-color='#dddddd'>
          <map-layer-style name='Streets' request-string='mapbox.streets' />
        </map-style>
      </map-styles>
      <mapsource-defaults version='18.1'>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='mapbox.streets' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
        </style>
      </mapsource-defaults>
      <map-attribution copyright-string='About Maps' copyright-url='http://www.tableau.com/mapdata' short-copyright-string='' />
    </mapsource>
    <mapsource inline='true' name='Street+satellite' source-platform='win' version='18.1'>
      <connection api-key='pk.eyJ1IjoidGhlb3NpbWllciIsImEiOiJjanQyMjdtejcxYXpiM3lwaHF1aWZwOGNzIn0.gMOqwP_7pQ_FfDJ_2ruuAg' class='MapBox' description='Mapbox Streets + Satellite' full-url='https://api.mapbox.com/v4/{L}/{Z}/{X}/{Y}{D}.png256?access_token=pk.eyJ1IjoidGhlb3NpbWllciIsImEiOiJjanQyMjdtejcxYXpiM3lwaHF1aWZwOGNzIn0.gMOqwP_7pQ_FfDJ_2ruuAg' inline='true' layer-separator=',' offline='' port='443' server='api.mapbox.com' service='https' tileset='US\normal' url-format='/v4/{L}/{Z}/{X}/{Y}{D}.png256?access_token=pk.eyJ1IjoidGhlb3NpbWllciIsImEiOiJjanQyMjdtejcxYXpiM3lwaHF1aWZwOGNzIn0.gMOqwP_7pQ_FfDJ_2ruuAg' username='' wait-tile-color='#dddddd' />
      <languages />
      <layers>
        <layer display-name='Streets + Satellite' name='mapbox.streets-satellite' show-ui='true' type='features' />
      </layers>
      <properties />
      <map-styles>
        <map-style display-name='Street+satellite' name='Street+satellite' wait-tile-color='#dddddd'>
          <map-layer-style name='Streets + Satellite' request-string='mapbox.streets-satellite' />
        </map-style>
      </map-styles>
      <mapsource-defaults version='18.1'>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='mapbox.streets-satellite' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
        </style>
      </mapsource-defaults>
      <map-attribution copyright-string='About Maps' copyright-url='http://www.tableau.com/mapdata' short-copyright-string='' />
    </mapsource>
  </mapsources>
  <actions>
    <action caption='Highlight recap depuis dep' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Où se produisent les accidents routiers dans votre département ?' type='sheet' worksheet='Selectionnez votre département' />
      <command command='tsc:brush'>
        <param name='exclude' value='Evolution sur les années étudiées,Lieux des accidents,Selectionnez votre département,Top 5 des départements les plus dangereux (2017)' />
        <param name='field-captions' value='Département' />
        <param name='target' value='Où se produisent les accidents routiers dans votre département ?' />
      </command>
    </action>
    <action caption='Highlight recap depuis departement' name='[Action4]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Où se produisent les accidents routiers dans votre département ?' type='sheet' worksheet='Selectionnez votre département' />
      <command command='tsc:brush'>
        <param name='exclude' value='Evolution sur les années étudiées,Lieux des accidents,Selectionnez votre département,Top 5 des départements les plus dangereux (2017)' />
        <param name='field-captions' value='Département' />
        <param name='target' value='Où se produisent les accidents routiers dans votre département ?' />
      </command>
    </action>
    <action caption='Highlight 1 (generated)' name='[Action6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Où se produisent les accidents routiers dans votre département ?' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Gravité' />
        <param name='target' value='Où se produisent les accidents routiers dans votre département ?' />
      </command>
    </action>
    <action caption='Highlight categorie vehicule' name='[Action7]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Où se produisent les accidents routiers dans votre département ?' type='sheet' worksheet='Lieux des accidents' />
      <command command='tsc:brush'>
        <param name='exclude' value='Evolution sur les années étudiées,Accidents par département (2017),Selectionnez votre département,Top 5 des départements les plus dangereux (2017)' />
        <param name='field-captions' value='Catégorie de véhicule (groupe)' />
        <param name='target' value='Où se produisent les accidents routiers dans votre département ?' />
      </command>
    </action>
    <action caption='Highlight depart depuis accident par dep' name='[Action8]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Où se produisent les accidents routiers dans votre département ?' type='sheet' worksheet='Accidents par département (2017)' />
      <command command='tsc:brush'>
        <param name='exclude' value='Accidents par département (2017),Evolution sur les années étudiées,Lieux des accidents,Top 5 des départements les plus dangereux (2017)' />
        <param name='special-fields' value='all' />
        <param name='target' value='Où se produisent les accidents routiers dans votre département ?' />
      </command>
    </action>
    <action caption='Highlight top5' name='[Action9]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Où se produisent les accidents routiers dans votre département ?' type='sheet' worksheet='Top 5 des départements les plus dangereux (2017)' />
      <command command='tsc:brush'>
        <param name='exclude' value='Evolution sur les années étudiées,Lieux des accidents,Top 5 des départements les plus dangereux (2017)' />
        <param name='field-captions' value='Département' />
        <param name='target' value='Où se produisent les accidents routiers dans votre département ?' />
      </command>
    </action>
    <edit-group-action caption='Departement change set' name='[Action1]'>
      <activation type='on-select' />
      <source dashboard='Où se produisent les accidents routiers dans votre département ?' type='sheet' worksheet='Selectionnez votre département' />
      <params>
        <param name='selection-clear-set-option' value='show-all' />
        <param name='target-group' value='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Département set]' />
      </params>
    </edit-group-action>
    <edit-group-action caption='Récapitulatif change set ' name='[Action2]'>
      <activation type='on-select' />
      <source dashboard='Où se produisent les accidents routiers dans votre département ?' type='sheet' worksheet='Accidents par département (2017)' />
      <params>
        <param name='selection-clear-set-option' value='show-all' />
        <param name='target-group' value='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Département set]' />
      </params>
    </edit-group-action>
    <edit-group-action caption='Top change set value' name='[Action5]'>
      <activation type='on-select' />
      <source dashboard='Où se produisent les accidents routiers dans votre département ?' type='sheet' worksheet='Top 5 des départements les plus dangereux (2017)' />
      <params>
        <param name='selection-clear-set-option' value='do-nothing' />
        <param name='target-group' value='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Département set]' />
      </params>
    </edit-group-action>
  </actions>
  <worksheets>
    <worksheet name='Accidents par département (2017)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='11'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1aqyggh1f33tgz1gorcm00pl3ry9' />
          </datasources>
          <datasource-dependencies datasource='federated.1aqyggh1f33tgz1gorcm00pl3ry9'>
            <column caption='Nombre d&apos;accident pour 10 000 habitants' datatype='real' name='[Calculation_164381428197863424]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([F1])/AVG([population])*10000' />
            </column>
            <column caption='Nombre de tués pour 1 000 000 habitants' datatype='real' name='[Calculation_164381428204236802]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='count(IF([grav])=2 THEN [grav]END)/AVG([population])*1000000' />
            </column>
            <column caption='Nombre de blessé pour 10 000 habitants' datatype='real' name='[Calculation_164381428208967683]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='count(IF[grav]=3  OR  [grav]= 4 THEN [grav] END)/AVG([population])*10000' />
            </column>
            <column datatype='integer' name='[F1]' role='measure' type='quantitative' />
            <column-instance column='[population]' derivation='Avg' name='[avg:population:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Département' datatype='string' name='[departement]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column aggregation='Sum' caption='Gravité' datatype='integer' name='[grav]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Indemne' />
                <alias key='2' value='Tué' />
                <alias key='3' value='Blessé hospitalisé' />
                <alias key='4' value='Blessé léger' />
              </aliases>
            </column>
            <column-instance column='[departement]' derivation='None' name='[none:departement:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_164381428197863424]' derivation='User' name='[usr:Calculation_164381428197863424:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_164381428204236802]' derivation='User' name='[usr:Calculation_164381428204236802:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_164381428208967683]' derivation='User' name='[usr:Calculation_164381428208967683:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <computed-sort column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:departement:nk]' direction='DESC' using='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[usr:Calculation_164381428197863424:qk]' />
          <filter class='categorical' column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[yr:date:ok]'>
            <groupfilter function='member' level='[yr:date:ok]' member='2017' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[yr:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[avg:population:qk]' scope='cols' value='Population' />
            <format attr='width' field='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[usr:Calculation_164381428197863424:qk]' value='100' />
            <format attr='title' class='0' field='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[usr:Calculation_164381428197863424:qk]' scope='rows' value='Nombre d&apos;accidentS pour 10000 habitants' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='tick-color' scope='rows' value='#00000000' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='tick-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-color' value='#e6e6e6' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' value='#e6e6e6' />
            <format attr='border-color' value='#d4d4d4' />
            <format attr='border-style' value='none' />
            <format attr='band-color' scope='rows' value='#e6e6e6' />
            <format attr='band-color' scope='cols' value='#e6e6e6' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[usr:Calculation_164381428204236802:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-color' value='#d4d4d4' />
            <format attr='background-color' value='#e6e6e6' />
            <format attr='band-color' scope='rows' value='#e6e6e6' />
            <format attr='band-color' scope='cols' value='#e6e6e6' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[avg:population:qk]' value='false' />
            <format attr='break-on-special' field='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[avg:population:qk]' value='false' />
            <format attr='show-null-value-warning' value='false' />
            <format attr='band-size' scope='rows' value='5' />
            <format attr='background-color' value='#e6e6e6' />
            <format attr='band-size' scope='cols' value='1' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-pattern-only' value='solid' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='data-highlighter-title'>
            <format attr='title' field='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:departement:nk]' value='Département' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[usr:Calculation_164381428204236802:qk]' />
              <size column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[usr:Calculation_164381428208967683:qk]' />
              <lod column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:departement:nk]' />
            </encodings>
            <trendline enable-confidence-bands='true' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Département:&#9;</run>
                <run bold='true'>&lt;[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:departement:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Population 2017:&#9;</run>
                <run bold='true'>&lt;[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[avg:population:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Nb d&apos;accidents pour 10 000 habitants:&#9;</run>
                <run bold='true'>&lt;[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[usr:Calculation_164381428197863424:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Nb de blessés pour 10 000 habitants:&#9;</run>
                <run bold='true'>&lt;[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[usr:Calculation_164381428208967683:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Nb de tués pour 1 000 000 habitants:&#9;</run>
                <run bold='true'>&lt;[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[usr:Calculation_164381428204236802:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.263370156288147' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#ff0000' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='605' />
                <format attr='maxwidth' value='605' />
                <format attr='minheight' value='611' />
                <format attr='maxheight' value='611' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[usr:Calculation_164381428197863424:qk]</rows>
        <cols>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[avg:population:qk]</cols>
        <page-trail-options enabled='true' lines='true' mark-type='highlighted' marks='false' />
      </table>
    </worksheet>
    <worksheet name='Evolution sur les années étudiées'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='11'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1aqyggh1f33tgz1gorcm00pl3ry9' />
          </datasources>
          <datasource-dependencies datasource='federated.1aqyggh1f33tgz1gorcm00pl3ry9'>
            <column caption='Catégorie de véhicule (groupe)' datatype='string' name='[Catv (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[catv]' new-bin='true'>
                <bin default-name='false' value='&quot;Autobus &amp; Autocar&quot;'>
                  <value>37</value>
                  <value>38</value>
                </bin>
                <bin default-name='false' value='&quot;Autre Véhicule&quot;'>
                  <value>3</value>
                  <value>20</value>
                  <value>35</value>
                  <value>36</value>
                  <value>99</value>
                </bin>
                <bin default-name='false' value='&quot;Moto ou scotter&quot;'>
                  <value>2</value>
                  <value>30</value>
                  <value>31</value>
                  <value>32</value>
                  <value>33</value>
                  <value>34</value>
                </bin>
                <bin default-name='false' value='&quot;Poid lourd&quot;'>
                  <value>13</value>
                  <value>14</value>
                  <value>15</value>
                </bin>
                <bin default-name='false' value='&quot;Tracteur&quot;'>
                  <value>16</value>
                  <value>17</value>
                  <value>21</value>
                </bin>
                <bin default-name='false' value='&quot;Train&quot;'>
                  <value>39</value>
                </bin>
                <bin default-name='false' value='&quot;Tramway&quot;'>
                  <value>40</value>
                </bin>
                <bin default-name='false' value='&quot;Voiture standard &amp; Véhicule utilitaire&quot;'>
                  <value>7</value>
                  <value>10</value>
                </bin>
                <bin default-name='false' value='&quot;Vélo&quot;'>
                  <value>1</value>
                </bin>
              </calculation>
            </column>
            <column aggregation='Sum' caption='Condition atmosphérique' datatype='integer' name='[atm]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='%null%' value='*' />
                <alias key='1' value='Normale' />
                <alias key='2' value='Pluie légère' />
                <alias key='3' value='Pluie forte' />
                <alias key='4' value='Neige - grêle' />
                <alias key='5' value='Brouillard - fumée' />
                <alias key='6' value='Vent fort - tempête' />
                <alias key='7' value='Temps éblouissant' />
                <alias key='8' value='Temps couvert' />
                <alias key='9' value='Autre' />
              </aliases>
            </column>
            <column-instance column='[lum]' derivation='Attribute' name='[attr:lum:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Catégorie de véhicule' datatype='integer' name='[catv]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Vélo' />
                <alias key='2' value='Cyclomoteur &lt;50cm3' />
                <alias key='3' value='Voiturette' />
                <alias key='7' value='Voiture standard' />
                <alias key='10' value='Véhicule utilitaire' />
                <alias key='13' value='PL seul 3,5T &lt;PTCA &lt;= 7,5T' />
                <alias key='14' value='PL seul &gt; 7,5T' />
                <alias key='15' value='PL &gt; 3,5T + remorque' />
                <alias key='16' value='Tracteur routier seul' />
                <alias key='17' value='Tracteur routier + semi-remorque' />
                <alias key='20' value='Engin spécial' />
                <alias key='21' value='Tracteur agricole' />
                <alias key='30' value='Scooter &lt;50 cm3' />
                <alias key='31' value='Moto (entre 50 et 125 cm3)' />
                <alias key='32' value='Scooter (entre 50 et 125 cm3)' />
                <alias key='33' value='Moto &gt; 125 cm3' />
                <alias key='34' value='Scooter &gt; 125 cm3' />
                <alias key='35' value='Quad léger &lt;= 50 cm3' />
                <alias key='36' value='Quad lourd &gt; 50 cm3' />
                <alias key='37' value='Autobus' />
                <alias key='38' value='Autocar' />
                <alias key='39' value='Train' />
                <alias key='40' value='Tramway' />
                <alias key='99' value='Autre véhicule' />
              </aliases>
            </column>
            <column-instance column='[grav]' derivation='Count' name='[cnt:grav:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Département' datatype='string' name='[departement]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column aggregation='Sum' caption='Gravité' datatype='integer' name='[grav]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Indemne' />
                <alias key='2' value='Tué' />
                <alias key='3' value='Blessé hospitalisé' />
                <alias key='4' value='Blessé léger' />
              </aliases>
            </column>
            <column-instance column='[Département set]' derivation='InOut' name='[io:Département set:nk]' pivot='key' type='nominal' />
            <column caption='Condition lumineuse' datatype='string' name='[lum]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;1&quot;' value='Plein jour' />
                <alias key='&quot;2&quot;' value='Crépuscule ou aube ' />
                <alias key='&quot;3&quot;' value='Nuit sans éclairage public ' />
                <alias key='&quot;4&quot;' value='Nuit avec éclairage public non allumé ' />
                <alias key='&quot;5&quot;' value='Nuit avec éclairage public allumé ' />
              </aliases>
            </column>
            <column-instance column='[atm]' derivation='None' name='[none:atm:ok]' pivot='key' type='ordinal' />
            <column-instance column='[departement]' derivation='None' name='[none:departement:nk]' pivot='key' type='nominal' />
            <column-instance column='[grav]' derivation='None' name='[none:grav:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Year-Trunc' name='[tyr:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Catv (group)]' filter-group='7'>
            <groupfilter function='level-members' level='[Catv (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[attr:lum:nk]' filter-group='6'>
            <groupfilter function='level-members' level='[attr:lum:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[io:Département set:nk]'>
            <groupfilter function='member' level='[io:Département set:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:atm:ok]' filter-group='8'>
            <groupfilter function='level-members' level='[none:atm:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:departement:nk]'>
            <groupfilter function='level-members' level='[none:departement:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:grav:ok]'>
            <groupfilter from='2' function='range' level='[none:grav:ok]' to='4' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:grav:ok]' direction='ASC'>
            <dictionary>
              <bucket>2</bucket>
              <bucket>3</bucket>
              <bucket>4</bucket>
              <bucket>1</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[tyr:date:qk]' filter-group='3' included-values='in-range'>
            <min>#2012-08-26 00:00:00#</min>
            <max>#2017-01-01 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:atm:ok]</column>
            <column>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[tyr:date:qk]</column>
            <column>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Catv (group)]</column>
            <column>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[io:Département set:nk]</column>
            <column>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:departement:nk]</column>
            <column>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:grav:ok]</column>
            <column>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[attr:lum:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[cnt:grav:qk]' scope='rows' value='false' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='tick-color' scope='cols' value='#00000000' />
            <format attr='tick-color' scope='rows' value='#00000000' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='total' value='none' />
            <format attr='border-style' scope='rows' value='none' />
            <format attr='border-style' scope='cols' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:grav:ok]' value='la gravité' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:departement:nk]' value='Sélectionnez votre département.' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:grav:ok]' />
              <lod column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[io:Département set:nk]' />
              <text column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[cnt:grav:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[cnt:grav:qk]</rows>
        <cols>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[yr:date:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Lieux des accidents'>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1aqyggh1f33tgz1gorcm00pl3ry9' />
          </datasources>
          <mapsources>
            <mapsource name='street' />
          </mapsources>
          <datasource-dependencies datasource='federated.1aqyggh1f33tgz1gorcm00pl3ry9'>
            <column caption='Catégorie de véhicule (groupe)' datatype='string' name='[Catv (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[catv]' new-bin='true'>
                <bin default-name='false' value='&quot;Autobus &amp; Autocar&quot;'>
                  <value>37</value>
                  <value>38</value>
                </bin>
                <bin default-name='false' value='&quot;Autre Véhicule&quot;'>
                  <value>3</value>
                  <value>20</value>
                  <value>35</value>
                  <value>36</value>
                  <value>99</value>
                </bin>
                <bin default-name='false' value='&quot;Moto ou scotter&quot;'>
                  <value>2</value>
                  <value>30</value>
                  <value>31</value>
                  <value>32</value>
                  <value>33</value>
                  <value>34</value>
                </bin>
                <bin default-name='false' value='&quot;Poid lourd&quot;'>
                  <value>13</value>
                  <value>14</value>
                  <value>15</value>
                </bin>
                <bin default-name='false' value='&quot;Tracteur&quot;'>
                  <value>16</value>
                  <value>17</value>
                  <value>21</value>
                </bin>
                <bin default-name='false' value='&quot;Train&quot;'>
                  <value>39</value>
                </bin>
                <bin default-name='false' value='&quot;Tramway&quot;'>
                  <value>40</value>
                </bin>
                <bin default-name='false' value='&quot;Voiture standard &amp; Véhicule utilitaire&quot;'>
                  <value>7</value>
                  <value>10</value>
                </bin>
                <bin default-name='false' value='&quot;Vélo&quot;'>
                  <value>1</value>
                </bin>
              </calculation>
            </column>
            <column aggregation='Sum' caption='Numéro Accident' datatype='integer' name='[Num_Acc]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Condition atmosphérique' datatype='integer' name='[atm]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='%null%' value='*' />
                <alias key='1' value='Normale' />
                <alias key='2' value='Pluie légère' />
                <alias key='3' value='Pluie forte' />
                <alias key='4' value='Neige - grêle' />
                <alias key='5' value='Brouillard - fumée' />
                <alias key='6' value='Vent fort - tempête' />
                <alias key='7' value='Temps éblouissant' />
                <alias key='8' value='Temps couvert' />
                <alias key='9' value='Autre' />
              </aliases>
            </column>
            <column-instance column='[col]' derivation='Attribute' name='[attr:col:nk]' pivot='key' type='nominal' />
            <column-instance column='[lum]' derivation='Attribute' name='[attr:lum:nk]' pivot='key' type='nominal' />
            <column-instance column='[plan]' derivation='Attribute' name='[attr:plan:nk]' pivot='key' type='nominal' />
            <column-instance column='[lat]' derivation='Avg' name='[avg:lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[long]' derivation='Avg' name='[avg:long:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Catégorie de véhicule' datatype='integer' name='[catv]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Vélo' />
                <alias key='2' value='Cyclomoteur &lt;50cm3' />
                <alias key='3' value='Voiturette' />
                <alias key='7' value='Voiture standard' />
                <alias key='10' value='Véhicule utilitaire' />
                <alias key='13' value='PL seul 3,5T &lt;PTCA &lt;= 7,5T' />
                <alias key='14' value='PL seul &gt; 7,5T' />
                <alias key='15' value='PL &gt; 3,5T + remorque' />
                <alias key='16' value='Tracteur routier seul' />
                <alias key='17' value='Tracteur routier + semi-remorque' />
                <alias key='20' value='Engin spécial' />
                <alias key='21' value='Tracteur agricole' />
                <alias key='30' value='Scooter &lt;50 cm3' />
                <alias key='31' value='Moto (entre 50 et 125 cm3)' />
                <alias key='32' value='Scooter (entre 50 et 125 cm3)' />
                <alias key='33' value='Moto &gt; 125 cm3' />
                <alias key='34' value='Scooter &gt; 125 cm3' />
                <alias key='35' value='Quad léger &lt;= 50 cm3' />
                <alias key='36' value='Quad lourd &gt; 50 cm3' />
                <alias key='37' value='Autobus' />
                <alias key='38' value='Autocar' />
                <alias key='39' value='Train' />
                <alias key='40' value='Tramway' />
                <alias key='99' value='Autre véhicule' />
              </aliases>
            </column>
            <column caption='Type de collision' datatype='string' name='[col]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;1&quot;' value='Deux véhicules - frontale' />
                <alias key='&quot;2&quot;' value='Deux véhicules – par l’arrière' />
                <alias key='&quot;3&quot;' value='Deux véhicules – par le coté' />
                <alias key='&quot;4&quot;' value='Trois véhicules et plus – en chaîne' />
                <alias key='&quot;5&quot;' value='Trois véhicules et plus - collisions multiples' />
                <alias key='&quot;6&quot;' value='Autre collision' />
                <alias key='&quot;7&quot;' value='Sans collision' />
              </aliases>
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Département' datatype='string' name='[departement]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column aggregation='Sum' caption='Gravité' datatype='integer' name='[grav]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Indemne' />
                <alias key='2' value='Tué' />
                <alias key='3' value='Blessé hospitalisé' />
                <alias key='4' value='Blessé léger' />
              </aliases>
            </column>
            <column-instance column='[Département set]' derivation='InOut' name='[io:Département set:nk]' pivot='key' type='nominal' />
            <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Long' datatype='real' name='[long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Condition lumineuse' datatype='string' name='[lum]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;1&quot;' value='Plein jour' />
                <alias key='&quot;2&quot;' value='Crépuscule ou aube ' />
                <alias key='&quot;3&quot;' value='Nuit sans éclairage public ' />
                <alias key='&quot;4&quot;' value='Nuit avec éclairage public non allumé ' />
                <alias key='&quot;5&quot;' value='Nuit avec éclairage public allumé ' />
              </aliases>
            </column>
            <column-instance column='[Num_Acc]' derivation='None' name='[none:Num_Acc:ok]' pivot='key' type='ordinal' />
            <column-instance column='[atm]' derivation='None' name='[none:atm:ok]' pivot='key' type='ordinal' />
            <column-instance column='[grav]' derivation='None' name='[none:grav:ok]' pivot='key' type='ordinal' />
            <column caption='Plan de la route' datatype='string' name='[plan]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;0&quot;' value='Autre' />
                <alias key='&quot;1&quot;' value='Partie rectiligne' />
                <alias key='&quot;2&quot;' value='En courbe à gauche' />
                <alias key='&quot;3&quot;' value='En courbe à droite' />
                <alias key='&quot;4&quot;' value='En « S »' />
              </aliases>
            </column>
            <column-instance column='[date]' derivation='Year-Trunc' name='[tyr:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Catv (group)]' filter-group='7'>
            <groupfilter function='level-members' level='[Catv (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Catv (group)]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Voiture standard &amp; Véhicule utilitaire&quot;</bucket>
              <bucket>&quot;Poid lourd&quot;</bucket>
              <bucket>&quot;Vélo&quot;</bucket>
              <bucket>&quot;Autobus &amp; Autocar&quot;</bucket>
              <bucket>&quot;Moto ou scotter &lt;50 cm3&quot;</bucket>
              <bucket>&quot;Moto ou scotter &gt;50 cm3&quot;</bucket>
              <bucket>&quot;Tracteur&quot;</bucket>
              <bucket>&quot;Train&quot;</bucket>
              <bucket>&quot;Tramway&quot;</bucket>
              <bucket>&quot;Autre Véhicule&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[attr:lum:nk]' filter-group='6'>
            <groupfilter function='level-members' level='[attr:lum:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[io:Département set:nk]'>
            <groupfilter function='member' level='[io:Département set:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:atm:ok]' filter-group='8'>
            <groupfilter function='level-members' level='[none:atm:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:grav:ok]' filter-group='5'>
            <groupfilter function='level-members' level='[none:grav:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:grav:ok]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:grav:ok]' />
              <groupfilter function='member' level='[none:grav:ok]' member='1' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[tyr:date:qk]' filter-group='3' included-values='in-range'>
            <min>#2012-08-26 00:00:00#</min>
            <max>#2017-01-01 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[tyr:date:qk]</column>
            <column>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:atm:ok]</column>
            <column>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:grav:ok]</column>
            <column>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Catv (group)]</column>
            <column>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[io:Département set:nk]</column>
            <column>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[attr:lum:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='mapbox.streets' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Catv (group)]' value='la catégorie de véhicule' />
            <format attr='title' field='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:atm:ok]' value='Condition atmosphérique'>
              <formatted-text>
                <run>Condition atmosphérique</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[tyr:date:qk]' value='Années étudiées'>
              <formatted-text>
                <run>Années étudiées</run>
              </formatted-text>
            </format>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <shape column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Catv (group)]' />
              <tooltip column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[attr:lum:nk]' />
              <tooltip column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[attr:plan:nk]' />
              <tooltip column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[attr:col:nk]' />
              <color column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:grav:ok]' />
              <lod column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:Num_Acc:ok]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#898989'>Catégorie de véhicule :&#9;</run>
                <run>&lt;[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Catv (group)]&gt;&#10;</run>
                <run fontcolor='#898989'>Gravité:&#9;</run>
                <run>&lt;[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:grav:ok]&gt;&#10;</run>
                <run fontcolor='#898989'>Luminosité:&#9;</run>
                <run>&lt;[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[attr:lum:nk]&gt;&#10;</run>
                <run fontcolor='#898989'>Plan de la route:&#9;</run>
                <run>&lt;[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[attr:plan:nk]&gt;&#10;</run>
                <run fontcolor='#898989'>Collision:&#9;</run>
                <run>&lt;[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[attr:col:nk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.3756906986236572' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[avg:lat:qk]</rows>
        <cols>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[avg:long:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Selectionnez votre département'>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1aqyggh1f33tgz1gorcm00pl3ry9' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1aqyggh1f33tgz1gorcm00pl3ry9'>
            <column caption='Nombre d&apos;accident pour 10 000 habitants' datatype='real' name='[Calculation_164381428197863424]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([F1])/AVG([population])*10000' />
            </column>
            <column datatype='integer' name='[F1]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Département' datatype='string' name='[departement]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[departement]' derivation='None' name='[none:departement:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_164381428197863424]' derivation='User' name='[usr:Calculation_164381428197863424:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[yr:date:ok]'>
            <groupfilter function='member' level='[yr:date:ok]' member='2017' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[yr:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[usr:Calculation_164381428197863424:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[usr:Calculation_164381428197863424:qk]' />
              <lod column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:departement:nk]' />
              <geometry column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Département:&#9;</run>
                <run bold='true'>&lt;[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:departement:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Nb d&apos;accidents pour 10 000 habitants:&#9;</run>
                <run bold='true'>&lt;[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[usr:Calculation_164381428197863424:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Latitude (generated)]</rows>
        <cols>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Top 5 des départements les plus dangereux (2017)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='8'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data' name='federated.1aqyggh1f33tgz1gorcm00pl3ry9' />
          </datasources>
          <datasource-dependencies datasource='federated.1aqyggh1f33tgz1gorcm00pl3ry9'>
            <column caption='Nombre d&apos;accident pour 10 000 habitants' datatype='real' name='[Calculation_164381428197863424]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([F1])/AVG([population])*10000' />
            </column>
            <column caption='Rank' datatype='integer' name='[Calculation_164381428200767489]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Catégorie de véhicule (groupe)' datatype='string' name='[Catv (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[catv]' new-bin='true'>
                <bin default-name='false' value='&quot;Autobus &amp; Autocar&quot;'>
                  <value>37</value>
                  <value>38</value>
                </bin>
                <bin default-name='false' value='&quot;Autre Véhicule&quot;'>
                  <value>3</value>
                  <value>20</value>
                  <value>35</value>
                  <value>36</value>
                  <value>99</value>
                </bin>
                <bin default-name='false' value='&quot;Moto ou scotter&quot;'>
                  <value>2</value>
                  <value>30</value>
                  <value>31</value>
                  <value>32</value>
                  <value>33</value>
                  <value>34</value>
                </bin>
                <bin default-name='false' value='&quot;Poid lourd&quot;'>
                  <value>13</value>
                  <value>14</value>
                  <value>15</value>
                </bin>
                <bin default-name='false' value='&quot;Tracteur&quot;'>
                  <value>16</value>
                  <value>17</value>
                  <value>21</value>
                </bin>
                <bin default-name='false' value='&quot;Train&quot;'>
                  <value>39</value>
                </bin>
                <bin default-name='false' value='&quot;Tramway&quot;'>
                  <value>40</value>
                </bin>
                <bin default-name='false' value='&quot;Voiture standard &amp; Véhicule utilitaire&quot;'>
                  <value>7</value>
                  <value>10</value>
                </bin>
                <bin default-name='false' value='&quot;Vélo&quot;'>
                  <value>1</value>
                </bin>
              </calculation>
            </column>
            <column datatype='integer' name='[F1]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Catégorie de véhicule' datatype='integer' name='[catv]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Vélo' />
                <alias key='2' value='Cyclomoteur &lt;50cm3' />
                <alias key='3' value='Voiturette' />
                <alias key='7' value='Voiture standard' />
                <alias key='10' value='Véhicule utilitaire' />
                <alias key='13' value='PL seul 3,5T &lt;PTCA &lt;= 7,5T' />
                <alias key='14' value='PL seul &gt; 7,5T' />
                <alias key='15' value='PL &gt; 3,5T + remorque' />
                <alias key='16' value='Tracteur routier seul' />
                <alias key='17' value='Tracteur routier + semi-remorque' />
                <alias key='20' value='Engin spécial' />
                <alias key='21' value='Tracteur agricole' />
                <alias key='30' value='Scooter &lt;50 cm3' />
                <alias key='31' value='Moto (entre 50 et 125 cm3)' />
                <alias key='32' value='Scooter (entre 50 et 125 cm3)' />
                <alias key='33' value='Moto &gt; 125 cm3' />
                <alias key='34' value='Scooter &gt; 125 cm3' />
                <alias key='35' value='Quad léger &lt;= 50 cm3' />
                <alias key='36' value='Quad lourd &gt; 50 cm3' />
                <alias key='37' value='Autobus' />
                <alias key='38' value='Autocar' />
                <alias key='39' value='Train' />
                <alias key='40' value='Tramway' />
                <alias key='99' value='Autre véhicule' />
              </aliases>
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Département' datatype='string' name='[departement]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column aggregation='Sum' caption='Gravité' datatype='integer' name='[grav]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Indemne' />
                <alias key='2' value='Tué' />
                <alias key='3' value='Blessé hospitalisé' />
                <alias key='4' value='Blessé léger' />
              </aliases>
            </column>
            <column-instance column='[departement]' derivation='None' name='[none:departement:nk]' pivot='key' type='nominal' />
            <column-instance column='[grav]' derivation='None' name='[none:grav:ok]' pivot='key' type='ordinal' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_164381428197863424]' derivation='User' name='[usr:Calculation_164381428197863424:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_164381428200767489]' derivation='User' name='[usr:Calculation_164381428200767489:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Catv (group)]' filter-group='7'>
            <groupfilter function='level-members' level='[Catv (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:departement:nk]' direction='DESC' using='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[usr:Calculation_164381428197863424:qk]' />
          <filter class='categorical' column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:grav:ok]' filter-group='5'>
            <groupfilter function='level-members' level='[none:grav:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[usr:Calculation_164381428200767489:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[usr:Calculation_164381428200767489:ok]' member='1' />
              <groupfilter function='member' level='[usr:Calculation_164381428200767489:ok]' member='2' />
              <groupfilter function='member' level='[usr:Calculation_164381428200767489:ok]' member='3' />
              <groupfilter function='member' level='[usr:Calculation_164381428200767489:ok]' member='4' />
              <groupfilter function='member' level='[usr:Calculation_164381428200767489:ok]' member='5' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[yr:date:ok]'>
            <groupfilter function='member' level='[yr:date:ok]' member='2017' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Catv (group)]</column>
            <column>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[usr:Calculation_164381428200767489:ok]</column>
            <column>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:grav:ok]</column>
            <column>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[yr:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[usr:Calculation_164381428197863424:qk]' min='0.0' palette='orange_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[usr:Calculation_164381428197863424:qk]' />
              <text column='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[usr:Calculation_164381428197863424:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Département:&#9;</run>
                <run bold='true'>&lt;[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:departement:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Nb d&apos;accidents pour 10 000 habitants:&#9;</run>
                <run bold='true'>&lt;[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[usr:Calculation_164381428197863424:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:departement:nk]</rows>
        <cols />
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Où se produisent les accidents routiers dans votre département ?'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#e6e6e6' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='background-color' value='#00000000' />
          <format attr='color' value='#e6e6e6' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='color' value='#000000' />
        </style-rule>
      </style>
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <datasources>
        <datasource caption='data' name='federated.1aqyggh1f33tgz1gorcm00pl3ry9' />
      </datasources>
      <datasource-dependencies datasource='federated.1aqyggh1f33tgz1gorcm00pl3ry9'>
        <column aggregation='Sum' caption='Condition atmosphérique' datatype='integer' name='[atm]' role='dimension' type='ordinal'>
          <aliases>
            <alias key='%null%' value='*' />
            <alias key='1' value='Normale' />
            <alias key='2' value='Pluie légère' />
            <alias key='3' value='Pluie forte' />
            <alias key='4' value='Neige - grêle' />
            <alias key='5' value='Brouillard - fumée' />
            <alias key='6' value='Vent fort - tempête' />
            <alias key='7' value='Temps éblouissant' />
            <alias key='8' value='Temps couvert' />
            <alias key='9' value='Autre' />
          </aliases>
        </column>
        <column-instance column='[lum]' derivation='Attribute' name='[attr:lum:nk]' pivot='key' type='nominal' />
        <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column caption='Condition lumineuse' datatype='string' name='[lum]' role='dimension' type='nominal'>
          <aliases>
            <alias key='&quot;1&quot;' value='Plein jour' />
            <alias key='&quot;2&quot;' value='Crépuscule ou aube ' />
            <alias key='&quot;3&quot;' value='Nuit sans éclairage public ' />
            <alias key='&quot;4&quot;' value='Nuit avec éclairage public non allumé ' />
            <alias key='&quot;5&quot;' value='Nuit avec éclairage public allumé ' />
          </aliases>
        </column>
        <column-instance column='[atm]' derivation='None' name='[none:atm:ok]' pivot='key' type='ordinal' />
        <column-instance column='[date]' derivation='Year-Trunc' name='[tyr:date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='93750' id='85' param='horz' type='layout-flow' w='49414' x='50000' y='1042'>
            <zone h='93750' id='83' param='horz' type='layout-flow' w='49414' x='50000' y='1042'>
              <zone h='93750' id='80' param='vert' type='layout-flow' w='49414' x='50000' y='1042'>
                <zone fixed-size='184' h='23958' id='91' is-fixed='true' type='layout-basic' w='49414' x='50000' y='1042'>
                  <zone h='7323' id='92' param='vert' type='layout-flow' w='49414' x='50000' y='1042'>
                    <zone fixed-size='48' h='7292' id='89' is-fixed='true' name='Lieux des accidents' param='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[tyr:date:qk]' type='filter' values='database' w='49414' x='50000' y='1042'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                  <zone h='16635' id='93' name='Lieux des accidents' pane-specification-id='0' param='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:grav:ok]' type='color' w='14568' x='50000' y='8365'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='7647' id='94' mode='dropdown' name='Lieux des accidents' param='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[attr:lum:nk]' type='filter' values='database' w='34846' x='64568' y='8365'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='8988' id='86' mode='dropdown' name='Lieux des accidents' param='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:atm:ok]' type='filter' values='database' w='34846' x='64568' y='16012'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
                <zone h='69792' id='78' type='layout-basic' w='49414' x='50000' y='25000'>
                  <zone h='69792' id='70' param='horz' type='layout-flow' w='49414' x='50000' y='25000'>
                    <zone h='69792' id='68' type='layout-basic' w='49414' x='50000' y='25000'>
                      <zone h='69792' id='65' param='horz' type='layout-flow' w='49414' x='50000' y='25000'>
                        <zone h='69792' id='66' param='vert' type='layout-flow' w='49414' x='50000' y='25000'>
                          <zone fixed-size='290' h='38802' id='67' is-fixed='true' name='Lieux des accidents' show-title='false' w='49414' x='50000' y='25000'>
                            <layout-cache minheight='201' minwidth='201' type-h='scalable' type-w='scalable' />
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                          <zone h='30990' id='74' name='Evolution sur les années étudiées' w='49414' x='50000' y='63802'>
                            <layout-cache minheight='175' type-h='scalable' type-w='cell' />
                            <zone-style>
                              <format attr='border-color' value='#898989' />
                              <format attr='border-style' value='solid' />
                              <format attr='border-width' value='1' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone h='46354' id='99' param='vert' type='layout-flow' w='47071' x='586' y='48438'>
            <zone h='46354' id='64' name='Accidents par département (2017)' w='47071' x='586' y='48438'>
              <layout-cache has-max-size-h='true' maxheight='728' minheight='728' type-h='scalable' type-w='fixed' />
              <zone-style>
                <format attr='border-color' value='#898989' />
                <format attr='border-style' value='solid' />
                <format attr='border-width' value='1' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone forceUpdate='true' h='6380' id='96' type='text' w='47071' x='586' y='1042'>
            <formatted-text>
              <run bold='true' fontsize='10'>&lt;Sheet Name&gt;</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='36849' id='59' name='Selectionnez votre département' show-title='false' w='28623' x='586' y='11589'>
            <layout-cache minheight='201' minwidth='201' type-h='scalable' type-w='scalable' />
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='93750' id='100' param='horz' type='layout-flow' w='2343' x='47657' y='1042'>
            <zone h='93750' id='101' type='empty' w='2343' x='47657' y='1042'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='4166' id='102' param='vert' type='layout-flow' w='98828' x='586' y='94792'>
            <zone h='4037' id='77' param='vert' type='layout-flow' w='98828' x='586' y='94792'>
              <zone forceUpdate='true' h='4037' id='36' type='text' w='98828' x='586' y='94792'>
                <formatted-text>
                  <run fontalignment='1' fontcolor='#555555' fontsize='8'>Sources des données: data.gouv et Insee. Plus d&apos;informations sur le traitement et les sources des données sur GitHub: Théo Simier</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='36849' id='103' name='Top 5 des départements les plus dangereux (2017)' w='18448' x='29209' y='11589'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone forceUpdate='true' h='4167' id='104' type='text' w='47071' x='586' y='7422'>
            <formatted-text>
              <run fontalignment='1'>Sélectionnez votre département</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='3' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='5859' id='106' type='text' w='14861' x='13616' y='53516'>
          <formatted-text>
            <run fontcolor='#666666' fontsize='8'>Taille: Nombre de blessés</run>
            <run>Æ&#10;</run>
            <run fontcolor='#666666' fontsize='8'>Couleur: Nombre de tués</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='69'>
    <window class='dashboard' maximized='true' name='Où se produisent les accidents routiers dans votre département ?'>
      <viewpoints>
        <viewpoint name='Accidents par département (2017)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Evolution sur les années étudiées'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Lieux des accidents'>
          <zoom type='entire-view' />
          <highlight field='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:grav:ok]'>
            <bucket-selection />
          </highlight>
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Selectionnez votre département'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Longitude (generated)]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Latitude (generated)]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[avg:population:qk]</field>
                    <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:departement:nk]</field>
                    <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Geometry (generated)]</field>
                    <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Latitude (generated)]</field>
                    <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Longitude (generated)]</field>
                    <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[usr:Calculation_164381428197863424:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>1060476.0</value>
                  <value>&quot;Ille-Et-Vilaine&quot;</value>
                  <value>&quot;MULTIPOLYGON(((-2.097 47.6315,-2.104 47.638,-2.095 47.6405,-2.095 47.644,-2.1125 47.6475,-2.1105 47.657,-2.103 47.666,-2.104 47.676,-2.1225 47.6825,-2.124 47.693,-2.119 47.7095,-2.129 47.7175,-2.1285 47.724,-2.1105 47.73,-2.1095 47.736,-2.06 47.7385,-2.0625 47.7515,-2.0825 47.7505,-2.0885 47.7625,-2.1285 47.7615,-2.125 47.7705,-2.1115 47.7725,-2.11 47.7785,-2.0955 47.779,-2.0725 47.792,-2.0705 47.8115,-2.047 47.819,-2.036 47.8335,-2.0495 47.838,-2.054 47.851,-2.051 47.857,-2.0545 47.869,-2.07 47.852,-2.0965 47.844,-2.1095 47.849,-2.098 47.8635,-2.113 47.877,-2.114 47.8905,-2.106 47.8945,-2.1035 47.901,-2.0935 47.902,-2.082 47.909,-2.0835 47.9145,-2.079 47.9195,-2.098 47.9355,-2.1045 47.952,-2.111 47.959,-2.12 47.961,-2.1385 47.9795,-2.1465 47.984,-2.177 47.98,-2.191 47.9895,-2.21 47.995,-2.2145 47.993,-2.238 47.9995,-2.2875 47.9915,-2.2875 48.0015,-2.2765 48.009,-2.2825 48.018,-2.2735 48.031,-2.2425 48.0525,-2.1915 48.0525,-2.1715 48.063,-2.172 48.0735,-2.1685 48.076,-2.1815 48.083,-2.2225 48.079,-2.235 48.0735,-2.2355 48.0635,-2.256 48.063,-2.257 48.0725,-2.249 48.084,-2.256 48.097,-2.2565 48.1105,-2.2875 48.1335,-2.283 48.1455,-2.2645 48.151,-2.252 48.1455,-2.242 48.145,-2.238 48.147,-2.2475 48.1545,-2.2475 48.158,-2.23 48.1645,-2.2245 48.1705,-2.219 48.2035,-2.228 48.211,-2.214 48.2135,-2.202 48.208,-2.192 48.208,-2.184 48.212,-2.1905 48.224,-2.187 48.244,-2.1775 48.251,-2.153 48.2615,-2.15 48.259,-2.124 48.259,-2.1085 48.255,-2.1 48.2665,-2.1095 48.2685,-2.1105 48.275,-2.085 48.2765,-2.077 48.285,-2.0775 48.292,-2.0545 48.2985,-2.047 48.29,-2.014 48.2795,-2.0045 48.281,-2.002 48.291,-1.996 48.2965,-1.9765 48.3,-1.9675 48.292,-1.958 48.293,-1.9645 48.3015,-1.9555 48.319,-1.967 48.343,-1.948 48.3425,-1.9305 48.348,-1.932 48.3545,-1.9465 48.367,-1.9455 48.3775,-1.94 48.386,-1.939 48.392,-1.93 48.3945,-1.941 48.4015,-1.938 48.408,-1.941 48.4105,-1.938 48.42,-1.952 48.43,-1.9485 48.4465,-1.939 48.447,-1.926 48.4575,-1.9255 48.4645,-1.9305 48.4705,-1.927 48.477,-1.909 48.4815,-1.923 48.4995,-1.923 48.503,-1.9115 48.5095,-1.9115 48.5165,-1.9255 48.5385,-1.9255 48.5455,-1.932 48.551,-1.948 48.539,-1.9695 48.536,-1.961 48.5495,-1.963 48.556,-1.9775 48.5565,-1.972 48.565,-1.9885 48.5845,-1.982 48.586,-1.9605 48.576,-1.9565 48.579,-1.9665 48.5855,-1.9605 48.5885,-1.962 48.5925,-1.9735 48.589,-1.9855 48.5945,-1.9975 48.59,-2.0025 48.5945,-1.997 48.6035,-2.012 48.598,-2.0115 48.6055,-2.002 48.6145,-2.0135 48.6135,-2.0175 48.62,-2.0135 48.626,-2.0215 48.6335,-2.031 48.634,-2.031 48.6385,-2.0205 48.64,-2.029 48.647,-2.028 48.6515,-2.0155 48.652,-1.993 48.6605,-1.9815 48.674,-1.9895 48.6835,-1.9755 48.683,-1.964 48.687,-1.9615 48.681,-1.9385 48.6845,-1.9595 48.689,-1.956 48.6925,-1.9315 48.694,-1.923 48.6915,-1.9175 48.696,-1.9125 48.691,-1.904 48.6905,-1.8885 48.6985,-1.873 48.697,-1.844 48.7115,-1.8475 48.694,-1.837 48.68,-1.862 48.6675,-1.8645 48.657,-1.8705 48.6435,-1.857 48.6245,-1.8455 48.6165,-1.791 48.606,-1.7675 48.6025,-1.6735 48.6115,-1.668 48.6105,-1.6375 48.6145,-1.571 48.6265,-1.566 48.615,-1.5455 48.606,-1.539 48.5975,-1.542 48.581,-1.528 48.579,-1.521 48.567,-1.527 48.562,-1.533 48.5495,-1.52 48.5395,-1.518 48.53,-1.5155 48.5305,-1.4955 48.5085,-1.49 48.4895,-1.486 48.4905,-1.4745 48.486,-1.466 48.488,-1.4575 48.4855,-1.454 48.4875,-1.4415 48.483,-1.4355 48.478,-1.4405 48.472,-1.428 48.4625,-1.3995 48.461,-1.383 48.457,-1.375 48.4595,-1.3465 48.473,-1.3485 48.48,-1.3415 48.489,-1.337 48.4905,-1.3305 48.486,-1.3285 48.4955,-1.322 48.5,-1.319 48.4975,-1.3 48.5,-1.2875 48.5095,-1.279 48.509,-1.2695 48.5245,-1.273 48.5335,-1.2495 48.5435,-1.2325 48.5375,-1.2085 48.539,-1.1965 48.5315,-1.1885 48.5285,-1.1665 48.53,-1.162 48.524,-1.1455 48.5175,-1.132 48.5215,-1.1175 48.5215,-1.101 48.513,-1.07 48.5085,-1.0675 48.5055,-1.075 48.501,-1.0775 48.491,-1.073 48.485,-1.0735 48.475,-1.065 48.467,-1.067 48.4605,-1.0655 48.4515,-1.08 48.442,-1.0825 48.435,-1.078 48.422,-1.0795 48.4175,-1.053 48.381,-1.0565 48.379,-1.065 48.367,-1.056 48.3645,-1.0595 48.351,-1.056 48.341,-1.046 48.3295,-1.059 48.312,-1.0805 48.2995,-1.0885 48.29,-1.0935 48.273,-1.1 48.2685,-1.0985 48.2515,-1.0805 48.2195,-1.087 48.21,-1.0745 48.2005,-1.078 48.18,-1.074 48.1595,-1.064 48.1585,-1.0595 48.1255,-1.053 48.106,-1.049 48.0895,-1.0405 48.078,-1.0215 48.0685,-1.028 48.061,-1.033 48.0515,-1.028 48.0385,-1.0335 48.0325,-1.0215 48.0175,-1.018 48.0015,-1.0215 47.9955,-1.0505 47.9845,-1.069 47.983,-1.093 47.9875,-1.1075 47.989,-1.1225 47.9865,-1.13 47.971,-1.1485 47.968,-1.156 47.9645,-1.1615 47.953,-1.1595 47.939,-1.167 47.934,-1.163 47.928,-1.169 47.9155,-1.1755 47.911,-1.176 47.8975,-1.1965 47.8875,-1.197 47.8805,-1.189 47.8675,-1.203 47.857,-1.213 47.857,-1.222 47.8505,-1.2155 47.8455,-1.216 47.836,-1.223 47.819,-1.233 47.8195,-1.2385 47.81,-1.242 47.808,-1.2375 47.796,-1.246 47.7765,-1.337 47.7945,-1.364 47.8005,-1.3915 47.8285,-1.4055 47.825,-1.4225 47.8315,-1.4565 47.832,-1.465 47.835,-1.4795 47.835,-1.482 47.832,-1.4695 47.815,-1.4685 47.806,-1.4805 47.801,-1.495 47.7985,-1.504 47.801,-1.512 47.797,-1.5305 47.785,-1.5565 47.7835,-1.5755 47.778,-1.5855 47.779,-1.594 47.776,-1.598 47.7665,-1.606 47.763,-1.6195 47.7635,-1.627 47.76,-1.637 47.742,-1.638 47.722,-1.6445 47.722,-1.661 47.71,-1.6865 47.7125,-1.7105 47.7075,-1.7115 47.7005,-1.7295 47.6995,-1.7325 47.702,-1.75 47.707,-1.7715 47.6985,-1.7865 47.7,-1.82 47.7055,-1.8285 47.7095,-1.838 47.707,-1.863 47.7075,-1.867 47.7015,-1.8825 47.695,-1.885 47.696,-1.9355 47.687,-1.9565 47.671,-1.9665 47.6715,-1.9695 47.674,-1.969 47.688,-1.9735 47.694,-2.0125 47.6665,-2.0355 47.6685,-2.0475 47.664,-2.052 47.6505,-2.082 47.6495,-2.097 47.6315)),((-2.007 48.566,-2.034 48.551,-2.039 48.542,-2.0465 48.544,-2.0525 48.552,-2.0475 48.564,-2.06 48.57,-2.0805 48.568,-2.0945 48.572,-2.125 48.5935,-2.1235 48.6045,-2.149 48.629,-2.148 48.6325,-2.134 48.636,-2.124 48.635,-2.113 48.6415,-2.087 48.6345,-2.0745 48.6395,-2.0545 48.6375,-2.05 48.636,-2.051 48.626,-2.0315 48.624,-2.0295 48.615,-2.034 48.611,-2.031 48.6045,-2.0245 48.602,-2.0135 48.5875,-2.007 48.5885,-2.004 48.583,-1.9965 48.5845,-1.9945 48.578,-2.014 48.5715,-2.007 48.566)))&quot;</value>
                  <value>48.1569</value>
                  <value>-1.6379999999999999</value>
                  <value>34.691968512252991</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Top 5 des départements les plus dangereux (2017)' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{C224AAD8-811B-4686-9F10-46DAC0019DF2}' />
    </window>
    <window class='worksheet' hidden='true' name='Accidents par département (2017)'>
      <cards>
        <edge name='left'>
          <strip size='240'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='61'>
            <card type='columns' />
          </strip>
          <strip size='72'>
            <card type='rows' />
          </strip>
          <strip size='44'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='240'>
            <card pane-specification-id='0' param='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[usr:Calculation_164381428208967683:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[usr:Calculation_164381428204236802:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.09x3u9a1mowbb418g3po50e1c0x4].[none:code:nk]</field>
            <field>[federated.09x3u9a1mowbb418g3po50e1c0x4].[none:departement:nk]</field>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Catv (group)]</field>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:Num_Acc:ok]</field>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:catv:ok]</field>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:code:nk]</field>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:departement (2017):nk]</field>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:departement:nk]</field>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:grav:ok]</field>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[usr:Calculation_164381428200767489:ok]</field>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{297093D4-9E0E-4189-BFAF-521EDB514CC5}' />
    </window>
    <window class='worksheet' hidden='true' name='Evolution sur les années étudiées'>
      <cards>
        <edge name='left'>
          <strip size='240'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='60'>
            <card type='columns' />
          </strip>
          <strip size='62'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='240'>
            <card param='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[io:Département set:nk]' type='filter' />
            <card param='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:grav:ok]' type='filter' />
            <card pane-specification-id='2' param='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:grav:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Set 1]</field>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[io:Département set:nk]</field>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:Num_Acc:ok]</field>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:catv:ok]</field>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:departement:nk]</field>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:grav:ok]</field>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:region:nk]</field>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9E14D353-7B76-437D-B1E8-2B35D14FB4CC}' />
    </window>
    <window class='worksheet' hidden='true' name='Lieux des accidents'>
      <cards>
        <edge name='left'>
          <strip size='240'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='62'>
            <card type='columns' />
          </strip>
          <strip size='81'>
            <card type='rows' />
          </strip>
          <strip size='44'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='450'>
            <card param='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[io:Département set:nk]' type='filter' />
            <card param='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:grav:ok]' type='filter' />
            <card param='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[tyr:date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Set 1]</field>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[io:Département set:nk]</field>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[io:Set 1:nk]</field>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:Num_Acc:ok]</field>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:annee:qk]</field>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:atm:ok]</field>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:catv:ok]</field>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:col:nk]</field>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:date:qk]</field>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:departement:nk]</field>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:grav:ok]</field>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:lum:ok]</field>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:plan:nk]</field>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:region:nk]</field>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{7D9C7463-5C53-43D4-9EEF-DEC145957B86}' />
    </window>
    <window class='worksheet' hidden='true' name='Selectionnez votre département'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[usr:Calculation_164381428197863424:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[usr:Calculation_164381428197863424:qk]</field>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{05F77472-3D35-455D-9FFF-A19602B8127B}' />
    </window>
    <window class='worksheet' hidden='true' name='Top 5 des départements les plus dangereux (2017)'>
      <cards>
        <edge name='left'>
          <strip size='240'>
            <card type='filters' />
            <card type='marks' />
            <card type='pages' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='59'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='240'>
            <card param='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Catv (group)]' type='filter' />
            <card pane-specification-id='0' param='[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[usr:Calculation_164381428197863424:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.09x3u9a1mowbb418g3po50e1c0x4].[none:code:nk]</field>
            <field>[federated.09x3u9a1mowbb418g3po50e1c0x4].[none:departement:nk]</field>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[Catv (group)]</field>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:Num_Acc:ok]</field>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:catv:ok]</field>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:code:nk]</field>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:departement (2017):nk]</field>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[none:departement:nk]</field>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[usr:Calculation_164381428200767489:ok]</field>
            <field>[federated.1aqyggh1f33tgz1gorcm00pl3ry9].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1EF2C851-8B19-489C-82FD-DD92F27EF418}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Où se produisent les accidents routiers dans votre département ?' width='192'>
      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
    </thumbnail>
  </thumbnails>
  <external>
    <shapes>
      <shape name='vehicule/Tram_1.png'>
        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
        AAAAAAAApf8HILIhnnZ7rEUAAAAASUVORK5CYII=
      </shape>
      <shape name='vehicule/bus.png'>
        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
        ROintyrjN79GtYB1OvlPkpO3aEU7QsOO9qi1wH/R4/aoKtqeSPUlBr8i0RW35Pz9hIrLPZf8
        K+iNic+HVsxLCw1qO7w15zcfY/C4ZVl2IgwRlOe2xOesgLWVMCTOBYT5Aw4hjEF/E2MWrGJZ
        QXhzPXbfnEFdLE7L+c0Wwtv9ZZxM/hx1W1l4G3FTB7bRqKR1A/bLJwv87gbK3Q38VYFlbmJh
        G9ehie88TXht7EPAniXyH3mxutzvTJgU9VDCibqC8Kh5GeEqNT8N67b1ecLszPNNEd6byjpI
        XiQEtiK3C8cB/0Z+lf8q4NR5n19LuEUc21ciGraRhV0J9iN0QcibEfwaQuB4PuM7E4RRTNNG
        rZ0vua8h3P5fDXxr+39vJjzpk3J9lvyr5BbCAZrWBrKSMBJA0fG/Bg1xo+G7kmL751HCgI6D
        mlAOJ8ygVLS2986hrc0Y8Aq+0EpC94u8p3oQqvffA24nvOawO6HWeDxhlqAiriPcNqp9RxNu
        vYueB+uB7xDekNht++/z3o6Y7ybCcDJSo36LdtpWNjJ4yF615x9oZ19PEyZelRo3QfHbhTop
        ObyN2reCcMs37H19YVsrpPG0nOFOxfT37a2KchxFtQlyi6bLsflFLVhFeFrX9AH8NfKfTqld
        JzGcoPUN2u+grTG2C/BNmjl4Z1g47pW643DCS89N7OtZwvj+1qwUxTmEYUqqHsAPA6e0XmqV
        tYJQA64zpv79wNtbLre0wCrgi5Sb/Wc94VWK5IgB6rajCDXraYrv67sIsycV7dKikqyuVrMn
        oQPgKYTbiIPZMcbRBkJt6hZCr+W1LBwoUP2xCngX8A7Cfv4pwsVnhjBawgOEnunfAr4fqYxS
        KROE14i6OgqFJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
        JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
        JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
        JEmSJEmSJEmSJEmSJI27/wfsu8cXpSksUgAAAABJRU5ErkJggg==
      </shape>
      <shape name='vehicule/car.png'>
        iVBORw0KGgoAAAANSUhEUgAAASwAAAEsCAYAAAB5fY51AAAACXBIWXMAAA7DAAAOwwHHb6hk
        AAAaLUlEQVR4nO3de5zld13f8dfM7M5ekl2SbGJuhGASCZCkCCSGBCQBgxUMqBVQwUcrWgwi
        VbBISwu1ilqotiAVEbANEqlKfABVrlUJpBhDIWLCJSQhZHPZzWZ3M3vJ3mZn9pz+8T6n85vf
        OXNuc26z83o+Ht/HzM6cOee3v/M739/38vl+viBJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
        kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
        kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
        kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJrU2M+gC0
        bBPAmlqZAiZrP5tc4nuAClCtlWbfzxdKZUj/D6ktK6yVYQrYApxa+3pa4fstwCnAycAGYD0w
        DawrfK1/P00qpKPAXK0cLX2dA/YBe4AZYDewC3i09rVeZrAy05BZYY2HjaQCOp1URmcAFwDn
        A+cBTyQV0WSTMsHg3sdiy6tc9gPfAu4E7gK2AtuAHcBO0jqT+soKa3gmSAvoZOAkUgk9HXga
        cC6wuVA2kMpopagCh4G9tbKHVGJfqZXtpIV2ZFQHqOODFdbgTJJxpScBzwQuYaHV9ARgE6vj
        /M8C3wa+CdwG/F3t6yx2KdWl1fCBGZYp0mp6KvAM4FnApaSrp8UeIy2vW4CbgS+RcTOpJSus
        3m0mFdRTgCuAK4EzSXfvBMbn3B6j+RhUfUZwDbC29rU4kzgMVTIW9hBwE/AJ4OvAw9j6UhPj
        8qFaCaZJN+5i4BpSQT2ZDJAPY7ypPvg9XyqHWZi1e5TM6s2wMMN3gFRa9VIpfK2Symq69nU9
        mQA4gVS8p5NK+Mza95tqjyuWfl5DR0jX8VbgL0nL6wAO4KvGCqu1STIofiXwbOAqhlNB1Qex
        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
        nmFvlXF0gmR52Fp4nkrtedoNoxwmO/MUbSCpl5Z7To6Rz9GXSULCp1FqvIyq5qqSVkd9EO0Q
        rWfzZsmOHVfSOEBYN8HiimmOdEt/neZxJksd16dJq+idpKsLnS3x+TzwzdLPnkwypbaabdHq
        dBIZB7q18LNDpCX/VFpf58Ub+kEyjPJuGrMuLKVKJodeRbqhj68971KvWfRVGhdhX8rScWD1
        z/oRFmK3jpDhlW218hAJB9pOejg7aL5AfPRNrS58lORnv7qDx1aAPycpX5tlXWilCnys9vUG
        FqfQWMoxEoBXzjTxcnIRrLRofQ3HDwP/mYUA5QqJ83slqQA6udH9ERli6bSyqquQCbPXk0yn
        5XCiZh4jFWN5tu6FJCTpKKloHmJxRbSTDOnsrn2dYWHopSsrqcLaTQYcP0f7SmSS9NNfTSqd
        dlHE5b+9hmR66LSyei/J3V40RcbHPo8tLDV3lMZr41GSi+0GOtu16afIjPZ76C732xoWNg9u
        t46x7sMkvKnZz99HWkblZWmr2hqSY32OzvrER4AvkabvRWRM6arSY64nff9zSevtelI5djru
        dDsLXUepH9aTiaJOr8Gj5Dp/NZncOpm03spjWOvI7s3XkkpmbxevcQejTT21Yp1JdvboJsaq
        Qpqmf0PuEMXffbX2s6/R+W679bKbJPWX+u08MlbUzYTNMZKf6gtktq94Y7+TDHXcTfsJpPJn
        5yDZE9SeQo8uIDMJy52VWE45ROJDRpGGR6vD+SS2b5TX+WNk5YeW6WIyKzeKkIGDwC/Q2ayK
        tBxX0DoCfpBlH/BLmBqpLybI2qVb6XxMqx/lYRLJb2WlYfl+EoawnKVm3ZQKGch/HaPLPnzc
        OpPsHziMaPI7yUaT9uU1bGeSBcDDuDnfSTZqdbhjQKZJdoW7Gcxd6DEyzdzp9K80CGtIq2cQ
        XcQK6QL+Ae33UVAfTJCdc95C7hDLbXFVSIDbR8jdZqnkadIwTZEZxF8jWQz6cZ3vJK23Kxhs
        mmM1MUFmV95EpoX3kWncTgbnj5HZv/uBD5IA0l533pEG7SkkyPQWOsuEUi/z5DrfSoKen8cK
        uc5Xw1jMueQNeQ7JGrGFLEM4iQTWPcrCsoFvklit2+h+qYM0Sk8kCf4uI+Ndp5Fr/WRSOdWv
        850kCPRmcp2vqM0vVkOFVbe2VNaQu9FcodQD6qSVag1pLbW6zl0+I0mSJEmSJEmSJEmSJEmS
        JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
        JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
        JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
        JEmSJOm49f8ARvOrsk9eFvMAAAAASUVORK5CYII=
      </shape>
      <shape name='vehicule/cycling.png'>
        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
        YII=
      </shape>
      <shape name='vehicule/moto.png'>
        iVBORw0KGgoAAAANSUhEUgAAASwAAAEsCAYAAAB5fY51AAAACXBIWXMAAA8rAAAPKwEMains
        AAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAAIABJREFUeJzt3XmcXGWd
        7/FPVS/ZOoEEAgmQBAhhTUDZAiquLAIKijPOXJc7V2fGq6MzXnXU68bLQUdcrjOic13GGcYZ
        5Q7goIAIzBVxgSgqCES2EAhLEgIJ2TrppJd01fzxrbI7ne6uqvOcqrPU9/16Pa80IV116pw6
        z3mW3/N7wMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzM
        zMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzM
        zMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMbAKF
        pA8gC4pJH4CZMRX4OLAk6QMxM6vlbGALsAI4PNlDMTOb3PVAGSgBDwJLkz2c9HK/2aw+HcA8
        YDGwHFgE7Ac8AtwLrALWoIqnEScAvwW6R/3dLcBbgc1hh2xm7aIIzEQV058A/4oqlh2oJVQe
        VQaBh4HPAcehMal6dAFXjPN6/cB7cYPCzGroBF4KfBb4ObCTvSuTWmU7cDVwYeW1JnMMsGGC
        13m68v/NzPZxBPBu4C6gj31bPY2UErAbDaJfzPgtrgKqFCd6nz3AR2L/lGaWadOAt6Au3SDR
        K6mJylbU4jqRvVtciyvvOdnv/gJ1G83MKAAfBnYRf0U1tsX1LPA3wJzKe78PGKrxe0PAYc35
        6GaWJUXgUtT9a2ZlNbbiWo1adE/W+Tsvb87HN7OsmAF8gua3rCaqtPqA4Tr//VuadA4yqdYs
        hlkenQx8lPrDD+JUAKY38O8b+be557WE1o5KJFNZRbEt6QNIE1dY1o42ou5gFmxI+gDSxBWW
        taMtwMqkD6IOe9DSH6twhWXtaCsK6iwnfSA1PIC7hHtxhWXtqARci+Kc0qoEfJ90H2PLucKy
        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
        z3+qhe9p6XMSithuZUrk7ej+WF0pzzKy63k/eoBPR4Pnc1BL6mi0hvIQWjcjOYAmt66kReOW
        Xahb1ezWymQ19CDqV+9Eg3W7GdmoIYljKqOp6BMDzqvly3kkl4qohMZm+1GF1Yvuld3o3knq
        PtmGkl+2fGPZqWjQelvEA89buQc4OeiMWh69nPBUNHkpW1GsW2KB4x1ov7HQ/FlZLiUUU1bv
        RgbWfo4hvjWHWS3bUX6ruGK3IiugGIqHSf6ktLqqI73eAAAC60lEQVTsRknYDgk+i5Z3i4Af
        oO5Y0t/bVpcHUMBpqqL2T0aDjO1wQUoogv39xD+tbPl1MHA5am20Q2trEMWlRdktuyX2R8tI
        mhXflJbyBHAODgq1xnWiBJkbSf573MzSj1awZOKBfhEahE76pMVdBlDUb7vt3mvxOwb4D/L3
        cK/unBWyvVfLFVCU96fR6visN38HUAX8BjLyxLBM2A9l5HiY7Oc/K6EF2p9ED/RUjVfVq4Cm
        dW8lnnzorS7DKKH+h1A2B7NmOBL4MgqGztrDvRq1/kOUDicXulET8Ray0wTeglJeeAbQWqGA
        UrZ8DX33kv7+11MG0ETbuegez53pwCtR3qDnSd/TZBD4LZrJWUo282tbtnWhhIBfQMtr0naP
        VGfIrwZeQT73VdzHdJR76jMo6DKpJT5lNHawAfg+2rnkUDLa/7Zc6UDByH+BdmPfRDz7K0Qt
        vehe/Qy6d6c176On20wUePpNlBunVRelH81mfBStVHeIgqVVF3AKysrwG/TdbcU9MgysAf4J
        DekkPuGUppZEEV2Yhajb+BLUND4UZV4ICekfQJXharSN1go069dLWGpcs1YqoGGKOcCLUZds
        GbpnDkHjSFHv6WEUG7YeLdi+A7XsnmIkwWXi0lRhjdWFUsVU08YchdJgLK783UzUtexCld0g
        qoA2o0HLLZWfN6ILsKHy37ta+SHMmqiIgrWrZRHqRh6NKrWZKEdWN3rgVzM47GIk7/0aRlI2
        PV/5uy3ofkqdNFdY9SgykthvFxqPMrMRBZQdoRvdH/2kpLVkZmZmZmZmZmZmZmZmZmZmZmZm
        ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
        ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
        ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmlhv/BXpEBgTmIKYmAAAAAElFTkSuQmCC
      </shape>
      <shape name='vehicule/other.png'>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAACXBIWXMAABYlAAAWJQFJUiTw
        AAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAiBpVFh0WE1MOmNvbS5h
        ZG9iZS54bXAAAQBVVEYtOABYTUw6Y29tLmFkb2JlLnhtcAAokX1T3W6bMBR+Fcu92aQFY8Dm
        R2UV2KD1gq1KI3W3BNwGJWBknIXm1XqxR9orzGQhqqYqti987O873zn2Obd3Y19WW6HBWrw0
        XQz/vP2GoKlj+EQKu+iZ2DTfjko8Hr+vquO2Cmt49xXcjtHY9q3QJRjbXTdEYwzLWq5FZPbT
        MYLgBNHbGCbTBfhZPAAmlQDEcheVjTGg1MIeoRR/AY6NHWSbRRfYiwiNHB+cBzRqqn6Oljw/
        axkrhhut+wihw+FgHVxLqheEwzCcfDjOwiAWw2uny3HRDTezBy6GSjW9bmQHJrtcy72OIZxT
        aPuiuDjuBuuUkFXJFo1lj7Blo7ZFM3rQS/F8HT2sXnuBlmKQe1UJA795J3WdOgFNNNEP1ZhP
        KXdcVvtWdPqex9DcWHVTR15COeaEJmZyjnGQppQ5OCcky1xiJ7OPj7h5mtqcucTQCcaZGwR+
        kOVZlnLGcp9duPfdoMuuEjO3OXFDP2DcvsqNmBKllmol5W6ugIeN1HLYyB6wRwo+PTVdLQ/D
        5+l7zpEK1fwSda5kC07vGzUf6KcsYUFCMupxkrkYJ05gB9j1mOeHnk2N/j9u/S7v/X4K3GM5
        8ZiNuR/wDOPUJzjLEx4k2MkY9iAykaD/KmU+MuU3bS91b4xL54jOtIsyffEXBVYGYV78fTkA
        AAEUSURBVFiFzdi7DsMgDAVQU/WXk6GdO/WP24EuNMoDsMHX4CshkSHWkUlIRIgxkufcZgO4
        uAfeEUVCCP/pg4gCEb1a7q8+ZjFG9djhYhrPVmCxNgi4xzUjTYEFXBPSDMjgxEgToBAnQsKB
        jTgWCQV24qpIGFCJKyIhQBAui1QDwbgLUgVMhdC4A7IbaIzbkF3AQTgW6QFXRXrBFZGecFnk
        +Y/6Q/PzPVxllnihed1bpS/JDOQFx20zI5FZnGSjHoEs4qSfOkvkSsQ0iQMaIldKUQMNkBsO
        BgQiDzgoEIC84OBABTKLMwF2IIs4M2ADsoozBQqQC4czB1aQItwo4BkpxnFAyAFmyrswVyXs
        OuAy7s+o3QN/HTxebpAd/IAAAAAASUVORK5CYII=
      </shape>
      <shape name='vehicule/tractor.png'>
        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
        RK5CYII=
      </shape>
      <shape name='vehicule/train-256.png'>
        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
        YII=
      </shape>
      <shape name='vehicule/truck.png'>
        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
        TkSuQmCC
      </shape>
    </shapes>
  </external>
</workbook>
